/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EzsignsigningreasonListElement model module.
 * @module eZmaxAPI/model/EzsignsigningreasonListElement
 * @version 1.2.0
 */
class EzsignsigningreasonListElement {
    /**
     * Constructs a new <code>EzsignsigningreasonListElement</code>.
     * A Ezsignsigningreason List Element
     * @alias module:eZmaxAPI/model/EzsignsigningreasonListElement
     * @param pkiEzsignsigningreasonID {Number} The unique ID of the Ezsignsigningreason
     * @param sEzsignsigningreasonDescriptionX {String} The description of the Ezsignsigningreason in the language of the requester
     * @param bEzsignsigningreasonIsactive {Boolean} Whether the ezsignsigningreason is active or not
     */
    constructor(pkiEzsignsigningreasonID, sEzsignsigningreasonDescriptionX, bEzsignsigningreasonIsactive) { 
        
        EzsignsigningreasonListElement.initialize(this, pkiEzsignsigningreasonID, sEzsignsigningreasonDescriptionX, bEzsignsigningreasonIsactive);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiEzsignsigningreasonID, sEzsignsigningreasonDescriptionX, bEzsignsigningreasonIsactive) { 
        obj['pkiEzsignsigningreasonID'] = pkiEzsignsigningreasonID;
        obj['sEzsignsigningreasonDescriptionX'] = sEzsignsigningreasonDescriptionX;
        obj['bEzsignsigningreasonIsactive'] = bEzsignsigningreasonIsactive;
    }

    /**
     * Constructs a <code>EzsignsigningreasonListElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonListElement} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsignsigningreasonListElement} The populated <code>EzsignsigningreasonListElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsignsigningreasonListElement();

            if (data.hasOwnProperty('pkiEzsignsigningreasonID')) {
                obj['pkiEzsignsigningreasonID'] = ApiClient.convertToType(data['pkiEzsignsigningreasonID'], 'Number');
            }
            if (data.hasOwnProperty('sEzsignsigningreasonDescriptionX')) {
                obj['sEzsignsigningreasonDescriptionX'] = ApiClient.convertToType(data['sEzsignsigningreasonDescriptionX'], 'String');
            }
            if (data.hasOwnProperty('bEzsignsigningreasonIsactive')) {
                obj['bEzsignsigningreasonIsactive'] = ApiClient.convertToType(data['bEzsignsigningreasonIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsignsigningreasonListElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsignsigningreasonListElement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsignsigningreasonListElement.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sEzsignsigningreasonDescriptionX'] && !(typeof data['sEzsignsigningreasonDescriptionX'] === 'string' || data['sEzsignsigningreasonDescriptionX'] instanceof String)) {
            throw new Error("Expected the field `sEzsignsigningreasonDescriptionX` to be a primitive type in the JSON string but got " + data['sEzsignsigningreasonDescriptionX']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Ezsignsigningreason
     * minimum: 0
     * maximum: 255
     * @return {Number}
     */
    getPkiEzsignsigningreasonID() {
        return this.pkiEzsignsigningreasonID;
    }

    /**
     * Sets The unique ID of the Ezsignsigningreason
     * @param {Number} pkiEzsignsigningreasonID The unique ID of the Ezsignsigningreason
     */
    setPkiEzsignsigningreasonID(pkiEzsignsigningreasonID) {
        this['pkiEzsignsigningreasonID'] = pkiEzsignsigningreasonID;
    }
/**
     * Returns The description of the Ezsignsigningreason in the language of the requester
     * @return {String}
     */
    getSEzsignsigningreasonDescriptionX() {
        return this.sEzsignsigningreasonDescriptionX;
    }

    /**
     * Sets The description of the Ezsignsigningreason in the language of the requester
     * @param {String} sEzsignsigningreasonDescriptionX The description of the Ezsignsigningreason in the language of the requester
     */
    setSEzsignsigningreasonDescriptionX(sEzsignsigningreasonDescriptionX) {
        this['sEzsignsigningreasonDescriptionX'] = sEzsignsigningreasonDescriptionX;
    }
/**
     * Returns Whether the ezsignsigningreason is active or not
     * @return {Boolean}
     */
    getBEzsignsigningreasonIsactive() {
        return this.bEzsignsigningreasonIsactive;
    }

    /**
     * Sets Whether the ezsignsigningreason is active or not
     * @param {Boolean} bEzsignsigningreasonIsactive Whether the ezsignsigningreason is active or not
     */
    setBEzsignsigningreasonIsactive(bEzsignsigningreasonIsactive) {
        this['bEzsignsigningreasonIsactive'] = bEzsignsigningreasonIsactive;
    }

}

EzsignsigningreasonListElement.RequiredProperties = ["pkiEzsignsigningreasonID", "sEzsignsigningreasonDescriptionX", "bEzsignsigningreasonIsactive"];

/**
 * The unique ID of the Ezsignsigningreason
 * @member {Number} pkiEzsignsigningreasonID
 */
EzsignsigningreasonListElement.prototype['pkiEzsignsigningreasonID'] = undefined;

/**
 * The description of the Ezsignsigningreason in the language of the requester
 * @member {String} sEzsignsigningreasonDescriptionX
 */
EzsignsigningreasonListElement.prototype['sEzsignsigningreasonDescriptionX'] = undefined;

/**
 * Whether the ezsignsigningreason is active or not
 * @member {Boolean} bEzsignsigningreasonIsactive
 */
EzsignsigningreasonListElement.prototype['bEzsignsigningreasonIsactive'] = undefined;






export default EzsignsigningreasonListElement;

