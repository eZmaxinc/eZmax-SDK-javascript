/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.35
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EzsignfoldersignerassociationRequest from './EzsignfoldersignerassociationRequest';
import EzsignsignerRequestCompound from './EzsignsignerRequestCompound';

/**
 * The EzsignfoldersignerassociationRequestCompound model module.
 * @module eZmaxAPI/model/EzsignfoldersignerassociationRequestCompound
 * @version 1.0.35
 */
class EzsignfoldersignerassociationRequestCompound {
    /**
     * Constructs a new <code>EzsignfoldersignerassociationRequestCompound</code>.
     * An Ezsignfoldersignerassociation Object and children to create a complete structure
     * @alias module:eZmaxAPI/model/EzsignfoldersignerassociationRequestCompound
     * @implements module:eZmaxAPI/model/EzsignfoldersignerassociationRequest
     * @param fkiEzsignfolderID {Number} A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
     */
    constructor(fkiEzsignfolderID) { 
        EzsignfoldersignerassociationRequest.initialize(this, fkiEzsignfolderID);
        EzsignfoldersignerassociationRequestCompound.initialize(this, fkiEzsignfolderID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fkiEzsignfolderID) { 
        obj['fkiEzsignfolderID'] = fkiEzsignfolderID;
    }

    /**
     * Constructs a <code>EzsignfoldersignerassociationRequestCompound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsignfoldersignerassociationRequestCompound} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsignfoldersignerassociationRequestCompound} The populated <code>EzsignfoldersignerassociationRequestCompound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsignfoldersignerassociationRequestCompound();
            EzsignfoldersignerassociationRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('objEzsignsigner')) {
                obj['objEzsignsigner'] = EzsignsignerRequestCompound.constructFromObject(data['objEzsignsigner']);
            }
            if (data.hasOwnProperty('fkiUserID')) {
                obj['fkiUserID'] = ApiClient.convertToType(data['fkiUserID'], 'Number');
            }
            if (data.hasOwnProperty('fkiEzsignfolderID')) {
                obj['fkiEzsignfolderID'] = ApiClient.convertToType(data['fkiEzsignfolderID'], 'Number');
            }
        }
        return obj;
    }

/**
     * @return {module:eZmaxAPI/model/EzsignsignerRequestCompound}
     */
    getObjEzsignsigner() {
        return this.objEzsignsigner;
    }

    /**
     * @param {module:eZmaxAPI/model/EzsignsignerRequestCompound} objEzsignsigner
     */
    setObjEzsignsigner(objEzsignsigner) {
        this['objEzsignsigner'] = objEzsignsigner;
    }
/**
     * Returns A reference to a valid User.  This is only used if the signatory will be a user from the system.
     * minimum: 1
     * @return {Number}
     */
    getFkiUserID() {
        return this.fkiUserID;
    }

    /**
     * Sets A reference to a valid User.  This is only used if the signatory will be a user from the system.
     * @param {Number} fkiUserID A reference to a valid User.  This is only used if the signatory will be a user from the system.
     */
    setFkiUserID(fkiUserID) {
        this['fkiUserID'] = fkiUserID;
    }
/**
     * Returns A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
     * minimum: 1
     * @return {Number}
     */
    getFkiEzsignfolderID() {
        return this.fkiEzsignfolderID;
    }

    /**
     * Sets A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
     * @param {Number} fkiEzsignfolderID A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
     */
    setFkiEzsignfolderID(fkiEzsignfolderID) {
        this['fkiEzsignfolderID'] = fkiEzsignfolderID;
    }

}

/**
 * @member {module:eZmaxAPI/model/EzsignsignerRequestCompound} objEzsignsigner
 */
EzsignfoldersignerassociationRequestCompound.prototype['objEzsignsigner'] = undefined;

/**
 * A reference to a valid User.  This is only used if the signatory will be a user from the system.
 * @member {Number} fkiUserID
 */
EzsignfoldersignerassociationRequestCompound.prototype['fkiUserID'] = undefined;

/**
 * A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
 * @member {Number} fkiEzsignfolderID
 */
EzsignfoldersignerassociationRequestCompound.prototype['fkiEzsignfolderID'] = undefined;


// Implement EzsignfoldersignerassociationRequest interface:
/**
 * A reference to a valid User.  This is only used if the signatory will be a user from the system.
 * @member {Number} fkiUserID
 */
EzsignfoldersignerassociationRequest.prototype['fkiUserID'] = undefined;
/**
 * A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation.
 * @member {Number} fkiEzsignfolderID
 */
EzsignfoldersignerassociationRequest.prototype['fkiEzsignfolderID'] = undefined;




export default EzsignfoldersignerassociationRequestCompound;

