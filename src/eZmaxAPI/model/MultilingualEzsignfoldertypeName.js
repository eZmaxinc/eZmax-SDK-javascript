/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultilingualEzsignfoldertypeName model module.
 * @module eZmaxAPI/model/MultilingualEzsignfoldertypeName
 * @version 1.1.14
 */
class MultilingualEzsignfoldertypeName {
    /**
     * Constructs a new <code>MultilingualEzsignfoldertypeName</code>.
     * Name of the Ezsignfoldertype
     * @alias module:eZmaxAPI/model/MultilingualEzsignfoldertypeName
     */
    constructor() { 
        
        MultilingualEzsignfoldertypeName.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultilingualEzsignfoldertypeName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/MultilingualEzsignfoldertypeName} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/MultilingualEzsignfoldertypeName} The populated <code>MultilingualEzsignfoldertypeName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultilingualEzsignfoldertypeName();

            if (data.hasOwnProperty('sEzsignfoldertypeName1')) {
                obj['sEzsignfoldertypeName1'] = ApiClient.convertToType(data['sEzsignfoldertypeName1'], 'String');
            }
            if (data.hasOwnProperty('sEzsignfoldertypeName2')) {
                obj['sEzsignfoldertypeName2'] = ApiClient.convertToType(data['sEzsignfoldertypeName2'], 'String');
            }
        }
        return obj;
    }

/**
     * Returns The name of the Ezsignfoldertype in French
     * @return {String}
     */
    getSEzsignfoldertypeName1() {
        return this.sEzsignfoldertypeName1;
    }

    /**
     * Sets The name of the Ezsignfoldertype in French
     * @param {String} sEzsignfoldertypeName1 The name of the Ezsignfoldertype in French
     */
    setSEzsignfoldertypeName1(sEzsignfoldertypeName1) {
        this['sEzsignfoldertypeName1'] = sEzsignfoldertypeName1;
    }
/**
     * Returns The name of the Ezsignfoldertype in English
     * @return {String}
     */
    getSEzsignfoldertypeName2() {
        return this.sEzsignfoldertypeName2;
    }

    /**
     * Sets The name of the Ezsignfoldertype in English
     * @param {String} sEzsignfoldertypeName2 The name of the Ezsignfoldertype in English
     */
    setSEzsignfoldertypeName2(sEzsignfoldertypeName2) {
        this['sEzsignfoldertypeName2'] = sEzsignfoldertypeName2;
    }

}

/**
 * The name of the Ezsignfoldertype in French
 * @member {String} sEzsignfoldertypeName1
 */
MultilingualEzsignfoldertypeName.prototype['sEzsignfoldertypeName1'] = undefined;

/**
 * The name of the Ezsignfoldertype in English
 * @member {String} sEzsignfoldertypeName2
 */
MultilingualEzsignfoldertypeName.prototype['sEzsignfoldertypeName2'] = undefined;






export default MultilingualEzsignfoldertypeName;

