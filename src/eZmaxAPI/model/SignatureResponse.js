/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SignatureResponse model module.
 * @module eZmaxAPI/model/SignatureResponse
 * @version 1.2.0
 */
class SignatureResponse {
    /**
     * Constructs a new <code>SignatureResponse</code>.
     * A Signature Object
     * @alias module:eZmaxAPI/model/SignatureResponse
     * @param pkiSignatureID {Number} The unique ID of the Signature
     * @param sSignatureUrl {String} The URL of the SVG file for the Signature
     */
    constructor(pkiSignatureID, sSignatureUrl) { 
        
        SignatureResponse.initialize(this, pkiSignatureID, sSignatureUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiSignatureID, sSignatureUrl) { 
        obj['pkiSignatureID'] = pkiSignatureID;
        obj['sSignatureUrl'] = sSignatureUrl;
    }

    /**
     * Constructs a <code>SignatureResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/SignatureResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/SignatureResponse} The populated <code>SignatureResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignatureResponse();

            if (data.hasOwnProperty('pkiSignatureID')) {
                obj['pkiSignatureID'] = ApiClient.convertToType(data['pkiSignatureID'], 'Number');
            }
            if (data.hasOwnProperty('sSignatureUrl')) {
                obj['sSignatureUrl'] = ApiClient.convertToType(data['sSignatureUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignatureResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignatureResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SignatureResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sSignatureUrl'] && !(typeof data['sSignatureUrl'] === 'string' || data['sSignatureUrl'] instanceof String)) {
            throw new Error("Expected the field `sSignatureUrl` to be a primitive type in the JSON string but got " + data['sSignatureUrl']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Signature
     * minimum: 0
     * maximum: 16777215
     * @return {Number}
     */
    getPkiSignatureID() {
        return this.pkiSignatureID;
    }

    /**
     * Sets The unique ID of the Signature
     * @param {Number} pkiSignatureID The unique ID of the Signature
     */
    setPkiSignatureID(pkiSignatureID) {
        this['pkiSignatureID'] = pkiSignatureID;
    }
/**
     * Returns The URL of the SVG file for the Signature
     * @return {String}
     */
    getSSignatureUrl() {
        return this.sSignatureUrl;
    }

    /**
     * Sets The URL of the SVG file for the Signature
     * @param {String} sSignatureUrl The URL of the SVG file for the Signature
     */
    setSSignatureUrl(sSignatureUrl) {
        this['sSignatureUrl'] = sSignatureUrl;
    }

}

SignatureResponse.RequiredProperties = ["pkiSignatureID", "sSignatureUrl"];

/**
 * The unique ID of the Signature
 * @member {Number} pkiSignatureID
 */
SignatureResponse.prototype['pkiSignatureID'] = undefined;

/**
 * The URL of the SVG file for the Signature
 * @member {String} sSignatureUrl
 */
SignatureResponse.prototype['sSignatureUrl'] = undefined;






export default SignatureResponse;

