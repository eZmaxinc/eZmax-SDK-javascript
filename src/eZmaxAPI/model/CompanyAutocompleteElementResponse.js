/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyAutocompleteElementResponse model module.
 * @module eZmaxAPI/model/CompanyAutocompleteElementResponse
 * @version 1.2.0
 */
class CompanyAutocompleteElementResponse {
    /**
     * Constructs a new <code>CompanyAutocompleteElementResponse</code>.
     * A Company AutocompleteElement Response
     * @alias module:eZmaxAPI/model/CompanyAutocompleteElementResponse
     * @param pkiCompanyID {Number} The unique ID of the Company
     * @param sCompanyNameX {String} The Name of the Company in the language of the requester
     * @param bCompanyIsactive {Boolean} Whether the Company is active or not
     */
    constructor(pkiCompanyID, sCompanyNameX, bCompanyIsactive) { 
        
        CompanyAutocompleteElementResponse.initialize(this, pkiCompanyID, sCompanyNameX, bCompanyIsactive);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiCompanyID, sCompanyNameX, bCompanyIsactive) { 
        obj['pkiCompanyID'] = pkiCompanyID;
        obj['sCompanyNameX'] = sCompanyNameX;
        obj['bCompanyIsactive'] = bCompanyIsactive;
    }

    /**
     * Constructs a <code>CompanyAutocompleteElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CompanyAutocompleteElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CompanyAutocompleteElementResponse} The populated <code>CompanyAutocompleteElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyAutocompleteElementResponse();

            if (data.hasOwnProperty('pkiCompanyID')) {
                obj['pkiCompanyID'] = ApiClient.convertToType(data['pkiCompanyID'], 'Number');
            }
            if (data.hasOwnProperty('sCompanyNameX')) {
                obj['sCompanyNameX'] = ApiClient.convertToType(data['sCompanyNameX'], 'String');
            }
            if (data.hasOwnProperty('bCompanyIsactive')) {
                obj['bCompanyIsactive'] = ApiClient.convertToType(data['bCompanyIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyAutocompleteElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyAutocompleteElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompanyAutocompleteElementResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sCompanyNameX'] && !(typeof data['sCompanyNameX'] === 'string' || data['sCompanyNameX'] instanceof String)) {
            throw new Error("Expected the field `sCompanyNameX` to be a primitive type in the JSON string but got " + data['sCompanyNameX']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Company
     * minimum: 1
     * maximum: 255
     * @return {Number}
     */
    getPkiCompanyID() {
        return this.pkiCompanyID;
    }

    /**
     * Sets The unique ID of the Company
     * @param {Number} pkiCompanyID The unique ID of the Company
     */
    setPkiCompanyID(pkiCompanyID) {
        this['pkiCompanyID'] = pkiCompanyID;
    }
/**
     * Returns The Name of the Company in the language of the requester
     * @return {String}
     */
    getSCompanyNameX() {
        return this.sCompanyNameX;
    }

    /**
     * Sets The Name of the Company in the language of the requester
     * @param {String} sCompanyNameX The Name of the Company in the language of the requester
     */
    setSCompanyNameX(sCompanyNameX) {
        this['sCompanyNameX'] = sCompanyNameX;
    }
/**
     * Returns Whether the Company is active or not
     * @return {Boolean}
     */
    getBCompanyIsactive() {
        return this.bCompanyIsactive;
    }

    /**
     * Sets Whether the Company is active or not
     * @param {Boolean} bCompanyIsactive Whether the Company is active or not
     */
    setBCompanyIsactive(bCompanyIsactive) {
        this['bCompanyIsactive'] = bCompanyIsactive;
    }

}

CompanyAutocompleteElementResponse.RequiredProperties = ["pkiCompanyID", "sCompanyNameX", "bCompanyIsactive"];

/**
 * The unique ID of the Company
 * @member {Number} pkiCompanyID
 */
CompanyAutocompleteElementResponse.prototype['pkiCompanyID'] = undefined;

/**
 * The Name of the Company in the language of the requester
 * @member {String} sCompanyNameX
 */
CompanyAutocompleteElementResponse.prototype['sCompanyNameX'] = undefined;

/**
 * Whether the Company is active or not
 * @member {Boolean} bCompanyIsactive
 */
CompanyAutocompleteElementResponse.prototype['bCompanyIsactive'] = undefined;






export default CompanyAutocompleteElementResponse;

