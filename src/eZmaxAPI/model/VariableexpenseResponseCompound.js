/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FieldEVariableexpenseTaxable from './FieldEVariableexpenseTaxable';
import MultilingualVariableexpenseDescription from './MultilingualVariableexpenseDescription';
import VariableexpenseResponse from './VariableexpenseResponse';

/**
 * The VariableexpenseResponseCompound model module.
 * @module eZmaxAPI/model/VariableexpenseResponseCompound
 * @version 1.1.17
 */
class VariableexpenseResponseCompound {
    /**
     * Constructs a new <code>VariableexpenseResponseCompound</code>.
     * A Variableexpense Object
     * @alias module:eZmaxAPI/model/VariableexpenseResponseCompound
     * @implements module:eZmaxAPI/model/VariableexpenseResponse
     * @param pkiVariableexpenseID {Number} The unique ID of the Variableexpense
     * @param objVariableexpenseDescription {module:eZmaxAPI/model/MultilingualVariableexpenseDescription} 
     */
    constructor(pkiVariableexpenseID, objVariableexpenseDescription) { 
        VariableexpenseResponse.initialize(this, pkiVariableexpenseID, objVariableexpenseDescription);
        VariableexpenseResponseCompound.initialize(this, pkiVariableexpenseID, objVariableexpenseDescription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiVariableexpenseID, objVariableexpenseDescription) { 
        obj['pkiVariableexpenseID'] = pkiVariableexpenseID;
        obj['objVariableexpenseDescription'] = objVariableexpenseDescription;
    }

    /**
     * Constructs a <code>VariableexpenseResponseCompound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/VariableexpenseResponseCompound} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/VariableexpenseResponseCompound} The populated <code>VariableexpenseResponseCompound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VariableexpenseResponseCompound();
            VariableexpenseResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('pkiVariableexpenseID')) {
                obj['pkiVariableexpenseID'] = ApiClient.convertToType(data['pkiVariableexpenseID'], 'Number');
            }
            if (data.hasOwnProperty('sVariableexpenseCode')) {
                obj['sVariableexpenseCode'] = ApiClient.convertToType(data['sVariableexpenseCode'], 'String');
            }
            if (data.hasOwnProperty('objVariableexpenseDescription')) {
                obj['objVariableexpenseDescription'] = MultilingualVariableexpenseDescription.constructFromObject(data['objVariableexpenseDescription']);
            }
            if (data.hasOwnProperty('eVariableexpenseTaxable')) {
                obj['eVariableexpenseTaxable'] = FieldEVariableexpenseTaxable.constructFromObject(data['eVariableexpenseTaxable']);
            }
            if (data.hasOwnProperty('bVariableexpenseIsactive')) {
                obj['bVariableexpenseIsactive'] = ApiClient.convertToType(data['bVariableexpenseIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VariableexpenseResponseCompound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VariableexpenseResponseCompound</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VariableexpenseResponseCompound.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sVariableexpenseCode'] && !(typeof data['sVariableexpenseCode'] === 'string' || data['sVariableexpenseCode'] instanceof String)) {
            throw new Error("Expected the field `sVariableexpenseCode` to be a primitive type in the JSON string but got " + data['sVariableexpenseCode']);
        }
        // validate the optional field `objVariableexpenseDescription`
        if (data['objVariableexpenseDescription']) { // data not null
          MultilingualVariableexpenseDescription.validateJSON(data['objVariableexpenseDescription']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Variableexpense
     * minimum: 1
     * maximum: 255
     * @return {Number}
     */
    getPkiVariableexpenseID() {
        return this.pkiVariableexpenseID;
    }

    /**
     * Sets The unique ID of the Variableexpense
     * @param {Number} pkiVariableexpenseID The unique ID of the Variableexpense
     */
    setPkiVariableexpenseID(pkiVariableexpenseID) {
        this['pkiVariableexpenseID'] = pkiVariableexpenseID;
    }
/**
     * Returns The code of the Variableexpense
     * @return {String}
     */
    getSVariableexpenseCode() {
        return this.sVariableexpenseCode;
    }

    /**
     * Sets The code of the Variableexpense
     * @param {String} sVariableexpenseCode The code of the Variableexpense
     */
    setSVariableexpenseCode(sVariableexpenseCode) {
        this['sVariableexpenseCode'] = sVariableexpenseCode;
    }
/**
     * @return {module:eZmaxAPI/model/MultilingualVariableexpenseDescription}
     */
    getObjVariableexpenseDescription() {
        return this.objVariableexpenseDescription;
    }

    /**
     * @param {module:eZmaxAPI/model/MultilingualVariableexpenseDescription} objVariableexpenseDescription
     */
    setObjVariableexpenseDescription(objVariableexpenseDescription) {
        this['objVariableexpenseDescription'] = objVariableexpenseDescription;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEVariableexpenseTaxable}
     */
    getEVariableexpenseTaxable() {
        return this.eVariableexpenseTaxable;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEVariableexpenseTaxable} eVariableexpenseTaxable
     */
    setEVariableexpenseTaxable(eVariableexpenseTaxable) {
        this['eVariableexpenseTaxable'] = eVariableexpenseTaxable;
    }
/**
     * Returns Whether the variableexpense is active or not
     * @return {Boolean}
     */
    getBVariableexpenseIsactive() {
        return this.bVariableexpenseIsactive;
    }

    /**
     * Sets Whether the variableexpense is active or not
     * @param {Boolean} bVariableexpenseIsactive Whether the variableexpense is active or not
     */
    setBVariableexpenseIsactive(bVariableexpenseIsactive) {
        this['bVariableexpenseIsactive'] = bVariableexpenseIsactive;
    }

}

VariableexpenseResponseCompound.RequiredProperties = ["pkiVariableexpenseID", "objVariableexpenseDescription"];

/**
 * The unique ID of the Variableexpense
 * @member {Number} pkiVariableexpenseID
 */
VariableexpenseResponseCompound.prototype['pkiVariableexpenseID'] = undefined;

/**
 * The code of the Variableexpense
 * @member {String} sVariableexpenseCode
 */
VariableexpenseResponseCompound.prototype['sVariableexpenseCode'] = undefined;

/**
 * @member {module:eZmaxAPI/model/MultilingualVariableexpenseDescription} objVariableexpenseDescription
 */
VariableexpenseResponseCompound.prototype['objVariableexpenseDescription'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEVariableexpenseTaxable} eVariableexpenseTaxable
 */
VariableexpenseResponseCompound.prototype['eVariableexpenseTaxable'] = undefined;

/**
 * Whether the variableexpense is active or not
 * @member {Boolean} bVariableexpenseIsactive
 */
VariableexpenseResponseCompound.prototype['bVariableexpenseIsactive'] = undefined;


// Implement VariableexpenseResponse interface:
/**
 * The unique ID of the Variableexpense
 * @member {Number} pkiVariableexpenseID
 */
VariableexpenseResponse.prototype['pkiVariableexpenseID'] = undefined;
/**
 * The code of the Variableexpense
 * @member {String} sVariableexpenseCode
 */
VariableexpenseResponse.prototype['sVariableexpenseCode'] = undefined;
/**
 * @member {module:eZmaxAPI/model/MultilingualVariableexpenseDescription} objVariableexpenseDescription
 */
VariableexpenseResponse.prototype['objVariableexpenseDescription'] = undefined;
/**
 * @member {module:eZmaxAPI/model/FieldEVariableexpenseTaxable} eVariableexpenseTaxable
 */
VariableexpenseResponse.prototype['eVariableexpenseTaxable'] = undefined;
/**
 * Whether the variableexpense is active or not
 * @member {Boolean} bVariableexpenseIsactive
 */
VariableexpenseResponse.prototype['bVariableexpenseIsactive'] = undefined;




export default VariableexpenseResponseCompound;

