/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload model module.
 * @module eZmaxAPI/model/EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload
 * @version 1.2.0
 */
class EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload {
    /**
     * Constructs a new <code>EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload</code>.
     * Payload for POST /1/object/ezsignfoldersignerassociation/createEmbeddedUrl
     * @alias module:eZmaxAPI/model/EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload
     * @param sEmbeddedUrl {String} The embedded Url to the signing application.    Url will expire after 5 minutes.  
     */
    constructor(sEmbeddedUrl) { 
        
        EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload.initialize(this, sEmbeddedUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sEmbeddedUrl) { 
        obj['sEmbeddedUrl'] = sEmbeddedUrl;
    }

    /**
     * Constructs a <code>EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload} The populated <code>EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload();

            if (data.hasOwnProperty('sEmbeddedUrl')) {
                obj['sEmbeddedUrl'] = ApiClient.convertToType(data['sEmbeddedUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sEmbeddedUrl'] && !(typeof data['sEmbeddedUrl'] === 'string' || data['sEmbeddedUrl'] instanceof String)) {
            throw new Error("Expected the field `sEmbeddedUrl` to be a primitive type in the JSON string but got " + data['sEmbeddedUrl']);
        }

        return true;
    }

/**
     * Returns The embedded Url to the signing application.    Url will expire after 5 minutes.  
     * @return {String}
     */
    getSEmbeddedUrl() {
        return this.sEmbeddedUrl;
    }

    /**
     * Sets The embedded Url to the signing application.    Url will expire after 5 minutes.  
     * @param {String} sEmbeddedUrl The embedded Url to the signing application.    Url will expire after 5 minutes.  
     */
    setSEmbeddedUrl(sEmbeddedUrl) {
        this['sEmbeddedUrl'] = sEmbeddedUrl;
    }

}

EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload.RequiredProperties = ["sEmbeddedUrl"];

/**
 * The embedded Url to the signing application.    Url will expire after 5 minutes.  
 * @member {String} sEmbeddedUrl
 */
EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload.prototype['sEmbeddedUrl'] = undefined;






export default EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload;

