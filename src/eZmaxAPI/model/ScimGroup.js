/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScimGroupMember from './ScimGroupMember';

/**
 * The ScimGroup model module.
 * @module eZmaxAPI/model/ScimGroup
 * @version 1.2.0
 */
class ScimGroup {
    /**
     * Constructs a new <code>ScimGroup</code>.
     * @alias module:eZmaxAPI/model/ScimGroup
     * @param displayName {String} The Name of the Usergroup in the language of the requester
     */
    constructor(displayName) { 
        
        ScimGroup.initialize(this, displayName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName) { 
        obj['displayName'] = displayName;
    }

    /**
     * Constructs a <code>ScimGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/ScimGroup} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/ScimGroup} The populated <code>ScimGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScimGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ScimGroupMember]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScimGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScimGroup</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScimGroup.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                ScimGroupMember.validateJSON(item);
            };
        }

        return true;
    }

/**
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {String} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * Returns The Name of the Usergroup in the language of the requester
     * @return {String}
     */
    getDisplayName() {
        return this.displayName;
    }

    /**
     * Sets The Name of the Usergroup in the language of the requester
     * @param {String} displayName The Name of the Usergroup in the language of the requester
     */
    setDisplayName(displayName) {
        this['displayName'] = displayName;
    }
/**
     * @return {Array.<module:eZmaxAPI/model/ScimGroupMember>}
     */
    getMembers() {
        return this.members;
    }

    /**
     * @param {Array.<module:eZmaxAPI/model/ScimGroupMember>} members
     */
    setMembers(members) {
        this['members'] = members;
    }

}

ScimGroup.RequiredProperties = ["displayName"];

/**
 * @member {String} id
 */
ScimGroup.prototype['id'] = undefined;

/**
 * The Name of the Usergroup in the language of the requester
 * @member {String} displayName
 */
ScimGroup.prototype['displayName'] = undefined;

/**
 * @member {Array.<module:eZmaxAPI/model/ScimGroupMember>} members
 */
ScimGroup.prototype['members'] = undefined;






export default ScimGroup;

