/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomEzmaxinvoicingEzsigndocumentResponse model module.
 * @module eZmaxAPI/model/CustomEzmaxinvoicingEzsigndocumentResponse
 * @version 1.2.0
 */
class CustomEzmaxinvoicingEzsigndocumentResponse {
    /**
     * Constructs a new <code>CustomEzmaxinvoicingEzsigndocumentResponse</code>.
     * An EzmaxinvoicingEzsigndocument object containing information about the Ezmaxinvoicing for an Ezsigndocument
     * @alias module:eZmaxAPI/model/CustomEzmaxinvoicingEzsigndocumentResponse
     * @param fkiEzsignfolderID {Number} The unique ID of the Ezsignfolder
     * @param sName {String} 
     * @param sEzsignfolderDescription {String} The description of the Ezsignfolder
     * @param sEzsigndocumentName {String} The name of the document that will be presented to Ezsignfoldersignerassociations
     * @param bEzsignfolderAllowed {Boolean} Whether you have access to the Ezsignfolder or not
     */
    constructor(fkiEzsignfolderID, sName, sEzsignfolderDescription, sEzsigndocumentName, bEzsignfolderAllowed) { 
        
        CustomEzmaxinvoicingEzsigndocumentResponse.initialize(this, fkiEzsignfolderID, sName, sEzsignfolderDescription, sEzsigndocumentName, bEzsignfolderAllowed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fkiEzsignfolderID, sName, sEzsignfolderDescription, sEzsigndocumentName, bEzsignfolderAllowed) { 
        obj['fkiEzsignfolderID'] = fkiEzsignfolderID;
        obj['sName'] = sName;
        obj['sEzsignfolderDescription'] = sEzsignfolderDescription;
        obj['sEzsigndocumentName'] = sEzsigndocumentName;
        obj['bEzsignfolderAllowed'] = bEzsignfolderAllowed;
    }

    /**
     * Constructs a <code>CustomEzmaxinvoicingEzsigndocumentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CustomEzmaxinvoicingEzsigndocumentResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CustomEzmaxinvoicingEzsigndocumentResponse} The populated <code>CustomEzmaxinvoicingEzsigndocumentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomEzmaxinvoicingEzsigndocumentResponse();

            if (data.hasOwnProperty('fkiEzsignfolderID')) {
                obj['fkiEzsignfolderID'] = ApiClient.convertToType(data['fkiEzsignfolderID'], 'Number');
            }
            if (data.hasOwnProperty('sName')) {
                obj['sName'] = ApiClient.convertToType(data['sName'], 'String');
            }
            if (data.hasOwnProperty('sEzsignfolderDescription')) {
                obj['sEzsignfolderDescription'] = ApiClient.convertToType(data['sEzsignfolderDescription'], 'String');
            }
            if (data.hasOwnProperty('sEzsigndocumentName')) {
                obj['sEzsigndocumentName'] = ApiClient.convertToType(data['sEzsigndocumentName'], 'String');
            }
            if (data.hasOwnProperty('bEzsignfolderAllowed')) {
                obj['bEzsignfolderAllowed'] = ApiClient.convertToType(data['bEzsignfolderAllowed'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomEzmaxinvoicingEzsigndocumentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomEzmaxinvoicingEzsigndocumentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomEzmaxinvoicingEzsigndocumentResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sName'] && !(typeof data['sName'] === 'string' || data['sName'] instanceof String)) {
            throw new Error("Expected the field `sName` to be a primitive type in the JSON string but got " + data['sName']);
        }
        // ensure the json data is a string
        if (data['sEzsignfolderDescription'] && !(typeof data['sEzsignfolderDescription'] === 'string' || data['sEzsignfolderDescription'] instanceof String)) {
            throw new Error("Expected the field `sEzsignfolderDescription` to be a primitive type in the JSON string but got " + data['sEzsignfolderDescription']);
        }
        // ensure the json data is a string
        if (data['sEzsigndocumentName'] && !(typeof data['sEzsigndocumentName'] === 'string' || data['sEzsigndocumentName'] instanceof String)) {
            throw new Error("Expected the field `sEzsigndocumentName` to be a primitive type in the JSON string but got " + data['sEzsigndocumentName']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Ezsignfolder
     * minimum: 0
     * @return {Number}
     */
    getFkiEzsignfolderID() {
        return this.fkiEzsignfolderID;
    }

    /**
     * Sets The unique ID of the Ezsignfolder
     * @param {Number} fkiEzsignfolderID The unique ID of the Ezsignfolder
     */
    setFkiEzsignfolderID(fkiEzsignfolderID) {
        this['fkiEzsignfolderID'] = fkiEzsignfolderID;
    }
/**
     * @return {String}
     */
    getSName() {
        return this.sName;
    }

    /**
     * @param {String} sName
     */
    setSName(sName) {
        this['sName'] = sName;
    }
/**
     * Returns The description of the Ezsignfolder
     * @return {String}
     */
    getSEzsignfolderDescription() {
        return this.sEzsignfolderDescription;
    }

    /**
     * Sets The description of the Ezsignfolder
     * @param {String} sEzsignfolderDescription The description of the Ezsignfolder
     */
    setSEzsignfolderDescription(sEzsignfolderDescription) {
        this['sEzsignfolderDescription'] = sEzsignfolderDescription;
    }
/**
     * Returns The name of the document that will be presented to Ezsignfoldersignerassociations
     * @return {String}
     */
    getSEzsigndocumentName() {
        return this.sEzsigndocumentName;
    }

    /**
     * Sets The name of the document that will be presented to Ezsignfoldersignerassociations
     * @param {String} sEzsigndocumentName The name of the document that will be presented to Ezsignfoldersignerassociations
     */
    setSEzsigndocumentName(sEzsigndocumentName) {
        this['sEzsigndocumentName'] = sEzsigndocumentName;
    }
/**
     * Returns Whether you have access to the Ezsignfolder or not
     * @return {Boolean}
     */
    getBEzsignfolderAllowed() {
        return this.bEzsignfolderAllowed;
    }

    /**
     * Sets Whether you have access to the Ezsignfolder or not
     * @param {Boolean} bEzsignfolderAllowed Whether you have access to the Ezsignfolder or not
     */
    setBEzsignfolderAllowed(bEzsignfolderAllowed) {
        this['bEzsignfolderAllowed'] = bEzsignfolderAllowed;
    }

}

CustomEzmaxinvoicingEzsigndocumentResponse.RequiredProperties = ["fkiEzsignfolderID", "sName", "sEzsignfolderDescription", "sEzsigndocumentName", "bEzsignfolderAllowed"];

/**
 * The unique ID of the Ezsignfolder
 * @member {Number} fkiEzsignfolderID
 */
CustomEzmaxinvoicingEzsigndocumentResponse.prototype['fkiEzsignfolderID'] = undefined;

/**
 * @member {String} sName
 */
CustomEzmaxinvoicingEzsigndocumentResponse.prototype['sName'] = undefined;

/**
 * The description of the Ezsignfolder
 * @member {String} sEzsignfolderDescription
 */
CustomEzmaxinvoicingEzsigndocumentResponse.prototype['sEzsignfolderDescription'] = undefined;

/**
 * The name of the document that will be presented to Ezsignfoldersignerassociations
 * @member {String} sEzsigndocumentName
 */
CustomEzmaxinvoicingEzsigndocumentResponse.prototype['sEzsigndocumentName'] = undefined;

/**
 * Whether you have access to the Ezsignfolder or not
 * @member {Boolean} bEzsignfolderAllowed
 */
CustomEzmaxinvoicingEzsigndocumentResponse.prototype['bEzsignfolderAllowed'] = undefined;






export default CustomEzmaxinvoicingEzsigndocumentResponse;

