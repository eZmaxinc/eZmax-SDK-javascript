/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FieldEEzsignfolderSendreminderfrequency from './FieldEEzsignfolderSendreminderfrequency';

/**
 * The EzsignbulksendCreateEzsignbulksendtransmissionV1Request model module.
 * @module eZmaxAPI/model/EzsignbulksendCreateEzsignbulksendtransmissionV1Request
 * @version 1.1.17
 */
class EzsignbulksendCreateEzsignbulksendtransmissionV1Request {
    /**
     * Constructs a new <code>EzsignbulksendCreateEzsignbulksendtransmissionV1Request</code>.
     * Request for POST /1/object/ezsignbulksend/{pkiEzsignbulksendID}/createEzsignbulksendtransmission
     * @alias module:eZmaxAPI/model/EzsignbulksendCreateEzsignbulksendtransmissionV1Request
     * @param fkiUserlogintypeID {Number} The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
     * @param sEzsignbulksendtransmissionDescription {String} The description of the Ezsignbulksendtransmission
     * @param dtEzsigndocumentDuedate {String} The maximum date and time at which the Ezsigndocument can be signed.
     * @param eEzsignfolderSendreminderfrequency {module:eZmaxAPI/model/FieldEEzsignfolderSendreminderfrequency} 
     * @param tExtraMessage {String} A custom text message that will be added to the email sent.
     * @param sCsvBase64 {Blob} The Base64 encoded binary content of the CSV file.
     */
    constructor(fkiUserlogintypeID, sEzsignbulksendtransmissionDescription, dtEzsigndocumentDuedate, eEzsignfolderSendreminderfrequency, tExtraMessage, sCsvBase64) { 
        
        EzsignbulksendCreateEzsignbulksendtransmissionV1Request.initialize(this, fkiUserlogintypeID, sEzsignbulksendtransmissionDescription, dtEzsigndocumentDuedate, eEzsignfolderSendreminderfrequency, tExtraMessage, sCsvBase64);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fkiUserlogintypeID, sEzsignbulksendtransmissionDescription, dtEzsigndocumentDuedate, eEzsignfolderSendreminderfrequency, tExtraMessage, sCsvBase64) { 
        obj['fkiUserlogintypeID'] = fkiUserlogintypeID;
        obj['sEzsignbulksendtransmissionDescription'] = sEzsignbulksendtransmissionDescription;
        obj['dtEzsigndocumentDuedate'] = dtEzsigndocumentDuedate;
        obj['eEzsignfolderSendreminderfrequency'] = eEzsignfolderSendreminderfrequency;
        obj['tExtraMessage'] = tExtraMessage;
        obj['sCsvBase64'] = sCsvBase64;
    }

    /**
     * Constructs a <code>EzsignbulksendCreateEzsignbulksendtransmissionV1Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsignbulksendCreateEzsignbulksendtransmissionV1Request} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsignbulksendCreateEzsignbulksendtransmissionV1Request} The populated <code>EzsignbulksendCreateEzsignbulksendtransmissionV1Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsignbulksendCreateEzsignbulksendtransmissionV1Request();

            if (data.hasOwnProperty('fkiUserlogintypeID')) {
                obj['fkiUserlogintypeID'] = ApiClient.convertToType(data['fkiUserlogintypeID'], 'Number');
            }
            if (data.hasOwnProperty('fkiEzsigntsarequirementID')) {
                obj['fkiEzsigntsarequirementID'] = ApiClient.convertToType(data['fkiEzsigntsarequirementID'], 'Number');
            }
            if (data.hasOwnProperty('sEzsignbulksendtransmissionDescription')) {
                obj['sEzsignbulksendtransmissionDescription'] = ApiClient.convertToType(data['sEzsignbulksendtransmissionDescription'], 'String');
            }
            if (data.hasOwnProperty('dtEzsigndocumentDuedate')) {
                obj['dtEzsigndocumentDuedate'] = ApiClient.convertToType(data['dtEzsigndocumentDuedate'], 'String');
            }
            if (data.hasOwnProperty('eEzsignfolderSendreminderfrequency')) {
                obj['eEzsignfolderSendreminderfrequency'] = FieldEEzsignfolderSendreminderfrequency.constructFromObject(data['eEzsignfolderSendreminderfrequency']);
            }
            if (data.hasOwnProperty('tExtraMessage')) {
                obj['tExtraMessage'] = ApiClient.convertToType(data['tExtraMessage'], 'String');
            }
            if (data.hasOwnProperty('sCsvBase64')) {
                obj['sCsvBase64'] = ApiClient.convertToType(data['sCsvBase64'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsignbulksendCreateEzsignbulksendtransmissionV1Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsignbulksendCreateEzsignbulksendtransmissionV1Request</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsignbulksendCreateEzsignbulksendtransmissionV1Request.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sEzsignbulksendtransmissionDescription'] && !(typeof data['sEzsignbulksendtransmissionDescription'] === 'string' || data['sEzsignbulksendtransmissionDescription'] instanceof String)) {
            throw new Error("Expected the field `sEzsignbulksendtransmissionDescription` to be a primitive type in the JSON string but got " + data['sEzsignbulksendtransmissionDescription']);
        }
        // ensure the json data is a string
        if (data['dtEzsigndocumentDuedate'] && !(typeof data['dtEzsigndocumentDuedate'] === 'string' || data['dtEzsigndocumentDuedate'] instanceof String)) {
            throw new Error("Expected the field `dtEzsigndocumentDuedate` to be a primitive type in the JSON string but got " + data['dtEzsigndocumentDuedate']);
        }
        // ensure the json data is a string
        if (data['tExtraMessage'] && !(typeof data['tExtraMessage'] === 'string' || data['tExtraMessage'] instanceof String)) {
            throw new Error("Expected the field `tExtraMessage` to be a primitive type in the JSON string but got " + data['tExtraMessage']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
     * minimum: 0
     * @return {Number}
     */
    getFkiUserlogintypeID() {
        return this.fkiUserlogintypeID;
    }

    /**
     * Sets The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
     * @param {Number} fkiUserlogintypeID The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
     */
    setFkiUserlogintypeID(fkiUserlogintypeID) {
        this['fkiUserlogintypeID'] = fkiUserlogintypeID;
    }
/**
     * Returns The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
     * minimum: 1
     * maximum: 3
     * @return {Number}
     */
    getFkiEzsigntsarequirementID() {
        return this.fkiEzsigntsarequirementID;
    }

    /**
     * Sets The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
     * @param {Number} fkiEzsigntsarequirementID The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
     */
    setFkiEzsigntsarequirementID(fkiEzsigntsarequirementID) {
        this['fkiEzsigntsarequirementID'] = fkiEzsigntsarequirementID;
    }
/**
     * Returns The description of the Ezsignbulksendtransmission
     * @return {String}
     */
    getSEzsignbulksendtransmissionDescription() {
        return this.sEzsignbulksendtransmissionDescription;
    }

    /**
     * Sets The description of the Ezsignbulksendtransmission
     * @param {String} sEzsignbulksendtransmissionDescription The description of the Ezsignbulksendtransmission
     */
    setSEzsignbulksendtransmissionDescription(sEzsignbulksendtransmissionDescription) {
        this['sEzsignbulksendtransmissionDescription'] = sEzsignbulksendtransmissionDescription;
    }
/**
     * Returns The maximum date and time at which the Ezsigndocument can be signed.
     * @return {String}
     */
    getDtEzsigndocumentDuedate() {
        return this.dtEzsigndocumentDuedate;
    }

    /**
     * Sets The maximum date and time at which the Ezsigndocument can be signed.
     * @param {String} dtEzsigndocumentDuedate The maximum date and time at which the Ezsigndocument can be signed.
     */
    setDtEzsigndocumentDuedate(dtEzsigndocumentDuedate) {
        this['dtEzsigndocumentDuedate'] = dtEzsigndocumentDuedate;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEEzsignfolderSendreminderfrequency}
     */
    getEEzsignfolderSendreminderfrequency() {
        return this.eEzsignfolderSendreminderfrequency;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEEzsignfolderSendreminderfrequency} eEzsignfolderSendreminderfrequency
     */
    setEEzsignfolderSendreminderfrequency(eEzsignfolderSendreminderfrequency) {
        this['eEzsignfolderSendreminderfrequency'] = eEzsignfolderSendreminderfrequency;
    }
/**
     * Returns A custom text message that will be added to the email sent.
     * @return {String}
     */
    getTExtraMessage() {
        return this.tExtraMessage;
    }

    /**
     * Sets A custom text message that will be added to the email sent.
     * @param {String} tExtraMessage A custom text message that will be added to the email sent.
     */
    setTExtraMessage(tExtraMessage) {
        this['tExtraMessage'] = tExtraMessage;
    }
/**
     * Returns The Base64 encoded binary content of the CSV file.
     * @return {Blob}
     */
    getSCsvBase64() {
        return this.sCsvBase64;
    }

    /**
     * Sets The Base64 encoded binary content of the CSV file.
     * @param {Blob} sCsvBase64 The Base64 encoded binary content of the CSV file.
     */
    setSCsvBase64(sCsvBase64) {
        this['sCsvBase64'] = sCsvBase64;
    }

}

EzsignbulksendCreateEzsignbulksendtransmissionV1Request.RequiredProperties = ["fkiUserlogintypeID", "sEzsignbulksendtransmissionDescription", "dtEzsigndocumentDuedate", "eEzsignfolderSendreminderfrequency", "tExtraMessage", "sCsvBase64"];

/**
 * The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
 * @member {Number} fkiUserlogintypeID
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['fkiUserlogintypeID'] = undefined;

/**
 * The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
 * @member {Number} fkiEzsigntsarequirementID
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['fkiEzsigntsarequirementID'] = undefined;

/**
 * The description of the Ezsignbulksendtransmission
 * @member {String} sEzsignbulksendtransmissionDescription
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['sEzsignbulksendtransmissionDescription'] = undefined;

/**
 * The maximum date and time at which the Ezsigndocument can be signed.
 * @member {String} dtEzsigndocumentDuedate
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['dtEzsigndocumentDuedate'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEEzsignfolderSendreminderfrequency} eEzsignfolderSendreminderfrequency
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['eEzsignfolderSendreminderfrequency'] = undefined;

/**
 * A custom text message that will be added to the email sent.
 * @member {String} tExtraMessage
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['tExtraMessage'] = undefined;

/**
 * The Base64 encoded binary content of the CSV file.
 * @member {Blob} sCsvBase64
 */
EzsignbulksendCreateEzsignbulksendtransmissionV1Request.prototype['sCsvBase64'] = undefined;






export default EzsignbulksendCreateEzsignbulksendtransmissionV1Request;

