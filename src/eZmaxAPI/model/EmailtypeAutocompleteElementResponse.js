/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmailtypeAutocompleteElementResponse model module.
 * @module eZmaxAPI/model/EmailtypeAutocompleteElementResponse
 * @version 1.2.0
 */
class EmailtypeAutocompleteElementResponse {
    /**
     * Constructs a new <code>EmailtypeAutocompleteElementResponse</code>.
     * A Emailtype AutocompleteElement Response
     * @alias module:eZmaxAPI/model/EmailtypeAutocompleteElementResponse
     * @param pkiEmailtypeID {Number} The unique ID of the Emailtype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home|
     * @param sEmailtypeNameX {String} The name of the Emailtype in the language of the requester
     * @param bEmailtypeIsactive {Boolean} Whether the Emailtype is active or not
     */
    constructor(pkiEmailtypeID, sEmailtypeNameX, bEmailtypeIsactive) { 
        
        EmailtypeAutocompleteElementResponse.initialize(this, pkiEmailtypeID, sEmailtypeNameX, bEmailtypeIsactive);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiEmailtypeID, sEmailtypeNameX, bEmailtypeIsactive) { 
        obj['pkiEmailtypeID'] = pkiEmailtypeID;
        obj['sEmailtypeNameX'] = sEmailtypeNameX;
        obj['bEmailtypeIsactive'] = bEmailtypeIsactive;
    }

    /**
     * Constructs a <code>EmailtypeAutocompleteElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EmailtypeAutocompleteElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EmailtypeAutocompleteElementResponse} The populated <code>EmailtypeAutocompleteElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailtypeAutocompleteElementResponse();

            if (data.hasOwnProperty('pkiEmailtypeID')) {
                obj['pkiEmailtypeID'] = ApiClient.convertToType(data['pkiEmailtypeID'], 'Number');
            }
            if (data.hasOwnProperty('sEmailtypeNameX')) {
                obj['sEmailtypeNameX'] = ApiClient.convertToType(data['sEmailtypeNameX'], 'String');
            }
            if (data.hasOwnProperty('bEmailtypeIsactive')) {
                obj['bEmailtypeIsactive'] = ApiClient.convertToType(data['bEmailtypeIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailtypeAutocompleteElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailtypeAutocompleteElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmailtypeAutocompleteElementResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sEmailtypeNameX'] && !(typeof data['sEmailtypeNameX'] === 'string' || data['sEmailtypeNameX'] instanceof String)) {
            throw new Error("Expected the field `sEmailtypeNameX` to be a primitive type in the JSON string but got " + data['sEmailtypeNameX']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Emailtype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home|
     * minimum: 0
     * @return {Number}
     */
    getPkiEmailtypeID() {
        return this.pkiEmailtypeID;
    }

    /**
     * Sets The unique ID of the Emailtype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home|
     * @param {Number} pkiEmailtypeID The unique ID of the Emailtype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home|
     */
    setPkiEmailtypeID(pkiEmailtypeID) {
        this['pkiEmailtypeID'] = pkiEmailtypeID;
    }
/**
     * Returns The name of the Emailtype in the language of the requester
     * @return {String}
     */
    getSEmailtypeNameX() {
        return this.sEmailtypeNameX;
    }

    /**
     * Sets The name of the Emailtype in the language of the requester
     * @param {String} sEmailtypeNameX The name of the Emailtype in the language of the requester
     */
    setSEmailtypeNameX(sEmailtypeNameX) {
        this['sEmailtypeNameX'] = sEmailtypeNameX;
    }
/**
     * Returns Whether the Emailtype is active or not
     * @return {Boolean}
     */
    getBEmailtypeIsactive() {
        return this.bEmailtypeIsactive;
    }

    /**
     * Sets Whether the Emailtype is active or not
     * @param {Boolean} bEmailtypeIsactive Whether the Emailtype is active or not
     */
    setBEmailtypeIsactive(bEmailtypeIsactive) {
        this['bEmailtypeIsactive'] = bEmailtypeIsactive;
    }

}

EmailtypeAutocompleteElementResponse.RequiredProperties = ["pkiEmailtypeID", "sEmailtypeNameX", "bEmailtypeIsactive"];

/**
 * The unique ID of the Emailtype.  Valid values:  |Value|Description| |-|-| |1|Office| |2|Home|
 * @member {Number} pkiEmailtypeID
 */
EmailtypeAutocompleteElementResponse.prototype['pkiEmailtypeID'] = undefined;

/**
 * The name of the Emailtype in the language of the requester
 * @member {String} sEmailtypeNameX
 */
EmailtypeAutocompleteElementResponse.prototype['sEmailtypeNameX'] = undefined;

/**
 * Whether the Emailtype is active or not
 * @member {Boolean} bEmailtypeIsactive
 */
EmailtypeAutocompleteElementResponse.prototype['bEmailtypeIsactive'] = undefined;






export default EmailtypeAutocompleteElementResponse;

