/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CorsRequest model module.
 * @module eZmaxAPI/model/CorsRequest
 * @version 1.1.18
 */
class CorsRequest {
    /**
     * Constructs a new <code>CorsRequest</code>.
     * A Cors Object
     * @alias module:eZmaxAPI/model/CorsRequest
     * @param fkiApikeyID {Number} The unique ID of the Apikey
     * @param sCorsEntryurl {String} The entryurl of the Cors
     */
    constructor(fkiApikeyID, sCorsEntryurl) { 
        
        CorsRequest.initialize(this, fkiApikeyID, sCorsEntryurl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fkiApikeyID, sCorsEntryurl) { 
        obj['fkiApikeyID'] = fkiApikeyID;
        obj['sCorsEntryurl'] = sCorsEntryurl;
    }

    /**
     * Constructs a <code>CorsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CorsRequest} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CorsRequest} The populated <code>CorsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorsRequest();

            if (data.hasOwnProperty('pkiCorsID')) {
                obj['pkiCorsID'] = ApiClient.convertToType(data['pkiCorsID'], 'Number');
            }
            if (data.hasOwnProperty('fkiApikeyID')) {
                obj['fkiApikeyID'] = ApiClient.convertToType(data['fkiApikeyID'], 'Number');
            }
            if (data.hasOwnProperty('sCorsEntryurl')) {
                obj['sCorsEntryurl'] = ApiClient.convertToType(data['sCorsEntryurl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CorsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CorsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CorsRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sCorsEntryurl'] && !(typeof data['sCorsEntryurl'] === 'string' || data['sCorsEntryurl'] instanceof String)) {
            throw new Error("Expected the field `sCorsEntryurl` to be a primitive type in the JSON string but got " + data['sCorsEntryurl']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Cors
     * minimum: 0
     * maximum: 65535
     * @return {Number}
     */
    getPkiCorsID() {
        return this.pkiCorsID;
    }

    /**
     * Sets The unique ID of the Cors
     * @param {Number} pkiCorsID The unique ID of the Cors
     */
    setPkiCorsID(pkiCorsID) {
        this['pkiCorsID'] = pkiCorsID;
    }
/**
     * Returns The unique ID of the Apikey
     * minimum: 0
     * @return {Number}
     */
    getFkiApikeyID() {
        return this.fkiApikeyID;
    }

    /**
     * Sets The unique ID of the Apikey
     * @param {Number} fkiApikeyID The unique ID of the Apikey
     */
    setFkiApikeyID(fkiApikeyID) {
        this['fkiApikeyID'] = fkiApikeyID;
    }
/**
     * Returns The entryurl of the Cors
     * @return {String}
     */
    getSCorsEntryurl() {
        return this.sCorsEntryurl;
    }

    /**
     * Sets The entryurl of the Cors
     * @param {String} sCorsEntryurl The entryurl of the Cors
     */
    setSCorsEntryurl(sCorsEntryurl) {
        this['sCorsEntryurl'] = sCorsEntryurl;
    }

}

CorsRequest.RequiredProperties = ["fkiApikeyID", "sCorsEntryurl"];

/**
 * The unique ID of the Cors
 * @member {Number} pkiCorsID
 */
CorsRequest.prototype['pkiCorsID'] = undefined;

/**
 * The unique ID of the Apikey
 * @member {Number} fkiApikeyID
 */
CorsRequest.prototype['fkiApikeyID'] = undefined;

/**
 * The entryurl of the Cors
 * @member {String} sCorsEntryurl
 */
CorsRequest.prototype['sCorsEntryurl'] = undefined;






export default CorsRequest;

