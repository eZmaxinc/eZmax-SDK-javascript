/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BrandingAutocompleteElementResponse model module.
 * @module eZmaxAPI/model/BrandingAutocompleteElementResponse
 * @version 1.1.18
 */
class BrandingAutocompleteElementResponse {
    /**
     * Constructs a new <code>BrandingAutocompleteElementResponse</code>.
     * Branding AutocompleteElement Response
     * @alias module:eZmaxAPI/model/BrandingAutocompleteElementResponse
     * @param sBrandingDescriptionX {String} The Description of the Branding in the language of the requester
     * @param pkiBrandingID {Number} The unique ID of the Branding
     * @param bBrandingIsactive {Boolean} Whether the Branding is active or not
     */
    constructor(sBrandingDescriptionX, pkiBrandingID, bBrandingIsactive) { 
        
        BrandingAutocompleteElementResponse.initialize(this, sBrandingDescriptionX, pkiBrandingID, bBrandingIsactive);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sBrandingDescriptionX, pkiBrandingID, bBrandingIsactive) { 
        obj['sBrandingDescriptionX'] = sBrandingDescriptionX;
        obj['pkiBrandingID'] = pkiBrandingID;
        obj['bBrandingIsactive'] = bBrandingIsactive;
    }

    /**
     * Constructs a <code>BrandingAutocompleteElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/BrandingAutocompleteElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/BrandingAutocompleteElementResponse} The populated <code>BrandingAutocompleteElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrandingAutocompleteElementResponse();

            if (data.hasOwnProperty('sBrandingDescriptionX')) {
                obj['sBrandingDescriptionX'] = ApiClient.convertToType(data['sBrandingDescriptionX'], 'String');
            }
            if (data.hasOwnProperty('pkiBrandingID')) {
                obj['pkiBrandingID'] = ApiClient.convertToType(data['pkiBrandingID'], 'Number');
            }
            if (data.hasOwnProperty('bBrandingIsactive')) {
                obj['bBrandingIsactive'] = ApiClient.convertToType(data['bBrandingIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrandingAutocompleteElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrandingAutocompleteElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BrandingAutocompleteElementResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sBrandingDescriptionX'] && !(typeof data['sBrandingDescriptionX'] === 'string' || data['sBrandingDescriptionX'] instanceof String)) {
            throw new Error("Expected the field `sBrandingDescriptionX` to be a primitive type in the JSON string but got " + data['sBrandingDescriptionX']);
        }

        return true;
    }

/**
     * Returns The Description of the Branding in the language of the requester
     * @return {String}
     */
    getSBrandingDescriptionX() {
        return this.sBrandingDescriptionX;
    }

    /**
     * Sets The Description of the Branding in the language of the requester
     * @param {String} sBrandingDescriptionX The Description of the Branding in the language of the requester
     */
    setSBrandingDescriptionX(sBrandingDescriptionX) {
        this['sBrandingDescriptionX'] = sBrandingDescriptionX;
    }
/**
     * Returns The unique ID of the Branding
     * minimum: 0
     * @return {Number}
     */
    getPkiBrandingID() {
        return this.pkiBrandingID;
    }

    /**
     * Sets The unique ID of the Branding
     * @param {Number} pkiBrandingID The unique ID of the Branding
     */
    setPkiBrandingID(pkiBrandingID) {
        this['pkiBrandingID'] = pkiBrandingID;
    }
/**
     * Returns Whether the Branding is active or not
     * @return {Boolean}
     */
    getBBrandingIsactive() {
        return this.bBrandingIsactive;
    }

    /**
     * Sets Whether the Branding is active or not
     * @param {Boolean} bBrandingIsactive Whether the Branding is active or not
     */
    setBBrandingIsactive(bBrandingIsactive) {
        this['bBrandingIsactive'] = bBrandingIsactive;
    }

}

BrandingAutocompleteElementResponse.RequiredProperties = ["sBrandingDescriptionX", "pkiBrandingID", "bBrandingIsactive"];

/**
 * The Description of the Branding in the language of the requester
 * @member {String} sBrandingDescriptionX
 */
BrandingAutocompleteElementResponse.prototype['sBrandingDescriptionX'] = undefined;

/**
 * The unique ID of the Branding
 * @member {Number} pkiBrandingID
 */
BrandingAutocompleteElementResponse.prototype['pkiBrandingID'] = undefined;

/**
 * Whether the Branding is active or not
 * @member {Boolean} bBrandingIsactive
 */
BrandingAutocompleteElementResponse.prototype['bBrandingIsactive'] = undefined;






export default BrandingAutocompleteElementResponse;

