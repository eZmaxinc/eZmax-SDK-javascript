/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttachmentlogResponse from './AttachmentlogResponse';
import FieldEAttachmentlogType from './FieldEAttachmentlogType';

/**
 * The AttachmentlogResponseCompound model module.
 * @module eZmaxAPI/model/AttachmentlogResponseCompound
 * @version 1.2.0
 */
class AttachmentlogResponseCompound {
    /**
     * Constructs a new <code>AttachmentlogResponseCompound</code>.
     * A Attachmentlog Object
     * @alias module:eZmaxAPI/model/AttachmentlogResponseCompound
     * @implements module:eZmaxAPI/model/AttachmentlogResponse
     * @param fkiAttachmentID {Number} The unique ID of the Attachment.
     * @param fkiUserID {Number} The unique ID of the User
     * @param dtAttachmentlogDatetime {String} The created date
     * @param eAttachmentlogType {module:eZmaxAPI/model/FieldEAttachmentlogType} 
     */
    constructor(fkiAttachmentID, fkiUserID, dtAttachmentlogDatetime, eAttachmentlogType) { 
        AttachmentlogResponse.initialize(this, fkiAttachmentID, fkiUserID, dtAttachmentlogDatetime, eAttachmentlogType);
        AttachmentlogResponseCompound.initialize(this, fkiAttachmentID, fkiUserID, dtAttachmentlogDatetime, eAttachmentlogType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fkiAttachmentID, fkiUserID, dtAttachmentlogDatetime, eAttachmentlogType) { 
        obj['fkiAttachmentID'] = fkiAttachmentID;
        obj['fkiUserID'] = fkiUserID;
        obj['dtAttachmentlogDatetime'] = dtAttachmentlogDatetime;
        obj['eAttachmentlogType'] = eAttachmentlogType;
    }

    /**
     * Constructs a <code>AttachmentlogResponseCompound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/AttachmentlogResponseCompound} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/AttachmentlogResponseCompound} The populated <code>AttachmentlogResponseCompound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttachmentlogResponseCompound();
            AttachmentlogResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('fkiAttachmentID')) {
                obj['fkiAttachmentID'] = ApiClient.convertToType(data['fkiAttachmentID'], 'Number');
            }
            if (data.hasOwnProperty('fkiUserID')) {
                obj['fkiUserID'] = ApiClient.convertToType(data['fkiUserID'], 'Number');
            }
            if (data.hasOwnProperty('dtAttachmentlogDatetime')) {
                obj['dtAttachmentlogDatetime'] = ApiClient.convertToType(data['dtAttachmentlogDatetime'], 'String');
            }
            if (data.hasOwnProperty('eAttachmentlogType')) {
                obj['eAttachmentlogType'] = FieldEAttachmentlogType.constructFromObject(data['eAttachmentlogType']);
            }
            if (data.hasOwnProperty('sAttachmentlogDetail')) {
                obj['sAttachmentlogDetail'] = ApiClient.convertToType(data['sAttachmentlogDetail'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttachmentlogResponseCompound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttachmentlogResponseCompound</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttachmentlogResponseCompound.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dtAttachmentlogDatetime'] && !(typeof data['dtAttachmentlogDatetime'] === 'string' || data['dtAttachmentlogDatetime'] instanceof String)) {
            throw new Error("Expected the field `dtAttachmentlogDatetime` to be a primitive type in the JSON string but got " + data['dtAttachmentlogDatetime']);
        }
        // ensure the json data is a string
        if (data['sAttachmentlogDetail'] && !(typeof data['sAttachmentlogDetail'] === 'string' || data['sAttachmentlogDetail'] instanceof String)) {
            throw new Error("Expected the field `sAttachmentlogDetail` to be a primitive type in the JSON string but got " + data['sAttachmentlogDetail']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Attachment.
     * minimum: 0
     * @return {Number}
     */
    getFkiAttachmentID() {
        return this.fkiAttachmentID;
    }

    /**
     * Sets The unique ID of the Attachment.
     * @param {Number} fkiAttachmentID The unique ID of the Attachment.
     */
    setFkiAttachmentID(fkiAttachmentID) {
        this['fkiAttachmentID'] = fkiAttachmentID;
    }
/**
     * Returns The unique ID of the User
     * minimum: 0
     * @return {Number}
     */
    getFkiUserID() {
        return this.fkiUserID;
    }

    /**
     * Sets The unique ID of the User
     * @param {Number} fkiUserID The unique ID of the User
     */
    setFkiUserID(fkiUserID) {
        this['fkiUserID'] = fkiUserID;
    }
/**
     * Returns The created date
     * @return {String}
     */
    getDtAttachmentlogDatetime() {
        return this.dtAttachmentlogDatetime;
    }

    /**
     * Sets The created date
     * @param {String} dtAttachmentlogDatetime The created date
     */
    setDtAttachmentlogDatetime(dtAttachmentlogDatetime) {
        this['dtAttachmentlogDatetime'] = dtAttachmentlogDatetime;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEAttachmentlogType}
     */
    getEAttachmentlogType() {
        return this.eAttachmentlogType;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEAttachmentlogType} eAttachmentlogType
     */
    setEAttachmentlogType(eAttachmentlogType) {
        this['eAttachmentlogType'] = eAttachmentlogType;
    }
/**
     * Returns The additionnal detail
     * @return {String}
     */
    getSAttachmentlogDetail() {
        return this.sAttachmentlogDetail;
    }

    /**
     * Sets The additionnal detail
     * @param {String} sAttachmentlogDetail The additionnal detail
     */
    setSAttachmentlogDetail(sAttachmentlogDetail) {
        this['sAttachmentlogDetail'] = sAttachmentlogDetail;
    }

}

AttachmentlogResponseCompound.RequiredProperties = ["fkiAttachmentID", "fkiUserID", "dtAttachmentlogDatetime", "eAttachmentlogType"];

/**
 * The unique ID of the Attachment.
 * @member {Number} fkiAttachmentID
 */
AttachmentlogResponseCompound.prototype['fkiAttachmentID'] = undefined;

/**
 * The unique ID of the User
 * @member {Number} fkiUserID
 */
AttachmentlogResponseCompound.prototype['fkiUserID'] = undefined;

/**
 * The created date
 * @member {String} dtAttachmentlogDatetime
 */
AttachmentlogResponseCompound.prototype['dtAttachmentlogDatetime'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEAttachmentlogType} eAttachmentlogType
 */
AttachmentlogResponseCompound.prototype['eAttachmentlogType'] = undefined;

/**
 * The additionnal detail
 * @member {String} sAttachmentlogDetail
 */
AttachmentlogResponseCompound.prototype['sAttachmentlogDetail'] = undefined;


// Implement AttachmentlogResponse interface:
/**
 * The unique ID of the Attachment.
 * @member {Number} fkiAttachmentID
 */
AttachmentlogResponse.prototype['fkiAttachmentID'] = undefined;
/**
 * The unique ID of the User
 * @member {Number} fkiUserID
 */
AttachmentlogResponse.prototype['fkiUserID'] = undefined;
/**
 * The created date
 * @member {String} dtAttachmentlogDatetime
 */
AttachmentlogResponse.prototype['dtAttachmentlogDatetime'] = undefined;
/**
 * @member {module:eZmaxAPI/model/FieldEAttachmentlogType} eAttachmentlogType
 */
AttachmentlogResponse.prototype['eAttachmentlogType'] = undefined;
/**
 * The additionnal detail
 * @member {String} sAttachmentlogDetail
 */
AttachmentlogResponse.prototype['sAttachmentlogDetail'] = undefined;




export default AttachmentlogResponseCompound;

