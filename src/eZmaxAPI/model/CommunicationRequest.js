/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomCommunicationsenderRequest from './CustomCommunicationsenderRequest';
import FieldECommunicationImportance from './FieldECommunicationImportance';
import FieldECommunicationType from './FieldECommunicationType';

/**
 * The CommunicationRequest model module.
 * @module eZmaxAPI/model/CommunicationRequest
 * @version 1.2.0
 */
class CommunicationRequest {
    /**
     * Constructs a new <code>CommunicationRequest</code>.
     * Request for POST /1/object/communication
     * @alias module:eZmaxAPI/model/CommunicationRequest
     * @param eCommunicationType {module:eZmaxAPI/model/FieldECommunicationType} 
     * @param tCommunicationBody {String} The Body of the Communication
     * @param bCommunicationPrivate {Boolean} Whether the Communication is private or not
     */
    constructor(eCommunicationType, tCommunicationBody, bCommunicationPrivate) { 
        
        CommunicationRequest.initialize(this, eCommunicationType, tCommunicationBody, bCommunicationPrivate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eCommunicationType, tCommunicationBody, bCommunicationPrivate) { 
        obj['eCommunicationType'] = eCommunicationType;
        obj['tCommunicationBody'] = tCommunicationBody;
        obj['bCommunicationPrivate'] = bCommunicationPrivate;
    }

    /**
     * Constructs a <code>CommunicationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CommunicationRequest} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CommunicationRequest} The populated <code>CommunicationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommunicationRequest();

            if (data.hasOwnProperty('pkiCommunicationID')) {
                obj['pkiCommunicationID'] = ApiClient.convertToType(data['pkiCommunicationID'], 'Number');
            }
            if (data.hasOwnProperty('eCommunicationImportance')) {
                obj['eCommunicationImportance'] = FieldECommunicationImportance.constructFromObject(data['eCommunicationImportance']);
            }
            if (data.hasOwnProperty('eCommunicationType')) {
                obj['eCommunicationType'] = FieldECommunicationType.constructFromObject(data['eCommunicationType']);
            }
            if (data.hasOwnProperty('objCommunicationsender')) {
                obj['objCommunicationsender'] = CustomCommunicationsenderRequest.constructFromObject(data['objCommunicationsender']);
            }
            if (data.hasOwnProperty('sCommunicationSubject')) {
                obj['sCommunicationSubject'] = ApiClient.convertToType(data['sCommunicationSubject'], 'String');
            }
            if (data.hasOwnProperty('tCommunicationBody')) {
                obj['tCommunicationBody'] = ApiClient.convertToType(data['tCommunicationBody'], 'String');
            }
            if (data.hasOwnProperty('bCommunicationPrivate')) {
                obj['bCommunicationPrivate'] = ApiClient.convertToType(data['bCommunicationPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('eCommunicationAttachmenttype')) {
                obj['eCommunicationAttachmenttype'] = ApiClient.convertToType(data['eCommunicationAttachmenttype'], 'String');
            }
            if (data.hasOwnProperty('iCommunicationAttachmentlinkexpiration')) {
                obj['iCommunicationAttachmentlinkexpiration'] = ApiClient.convertToType(data['iCommunicationAttachmentlinkexpiration'], 'Number');
            }
            if (data.hasOwnProperty('bCommunicationReadreceipt')) {
                obj['bCommunicationReadreceipt'] = ApiClient.convertToType(data['bCommunicationReadreceipt'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommunicationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommunicationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CommunicationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `objCommunicationsender`
        if (data['objCommunicationsender']) { // data not null
          CustomCommunicationsenderRequest.validateJSON(data['objCommunicationsender']);
        }
        // ensure the json data is a string
        if (data['sCommunicationSubject'] && !(typeof data['sCommunicationSubject'] === 'string' || data['sCommunicationSubject'] instanceof String)) {
            throw new Error("Expected the field `sCommunicationSubject` to be a primitive type in the JSON string but got " + data['sCommunicationSubject']);
        }
        // ensure the json data is a string
        if (data['tCommunicationBody'] && !(typeof data['tCommunicationBody'] === 'string' || data['tCommunicationBody'] instanceof String)) {
            throw new Error("Expected the field `tCommunicationBody` to be a primitive type in the JSON string but got " + data['tCommunicationBody']);
        }
        // ensure the json data is a string
        if (data['eCommunicationAttachmenttype'] && !(typeof data['eCommunicationAttachmenttype'] === 'string' || data['eCommunicationAttachmenttype'] instanceof String)) {
            throw new Error("Expected the field `eCommunicationAttachmenttype` to be a primitive type in the JSON string but got " + data['eCommunicationAttachmenttype']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Communication.
     * minimum: 0
     * @return {Number}
     */
    getPkiCommunicationID() {
        return this.pkiCommunicationID;
    }

    /**
     * Sets The unique ID of the Communication.
     * @param {Number} pkiCommunicationID The unique ID of the Communication.
     */
    setPkiCommunicationID(pkiCommunicationID) {
        this['pkiCommunicationID'] = pkiCommunicationID;
    }
/**
     * @return {module:eZmaxAPI/model/FieldECommunicationImportance}
     */
    getECommunicationImportance() {
        return this.eCommunicationImportance;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldECommunicationImportance} eCommunicationImportance
     */
    setECommunicationImportance(eCommunicationImportance) {
        this['eCommunicationImportance'] = eCommunicationImportance;
    }
/**
     * @return {module:eZmaxAPI/model/FieldECommunicationType}
     */
    getECommunicationType() {
        return this.eCommunicationType;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldECommunicationType} eCommunicationType
     */
    setECommunicationType(eCommunicationType) {
        this['eCommunicationType'] = eCommunicationType;
    }
/**
     * @return {module:eZmaxAPI/model/CustomCommunicationsenderRequest}
     */
    getObjCommunicationsender() {
        return this.objCommunicationsender;
    }

    /**
     * @param {module:eZmaxAPI/model/CustomCommunicationsenderRequest} objCommunicationsender
     */
    setObjCommunicationsender(objCommunicationsender) {
        this['objCommunicationsender'] = objCommunicationsender;
    }
/**
     * Returns The subject of the Communication
     * @return {String}
     */
    getSCommunicationSubject() {
        return this.sCommunicationSubject;
    }

    /**
     * Sets The subject of the Communication
     * @param {String} sCommunicationSubject The subject of the Communication
     */
    setSCommunicationSubject(sCommunicationSubject) {
        this['sCommunicationSubject'] = sCommunicationSubject;
    }
/**
     * Returns The Body of the Communication
     * @return {String}
     */
    getTCommunicationBody() {
        return this.tCommunicationBody;
    }

    /**
     * Sets The Body of the Communication
     * @param {String} tCommunicationBody The Body of the Communication
     */
    setTCommunicationBody(tCommunicationBody) {
        this['tCommunicationBody'] = tCommunicationBody;
    }
/**
     * Returns Whether the Communication is private or not
     * @return {Boolean}
     */
    getBCommunicationPrivate() {
        return this.bCommunicationPrivate;
    }

    /**
     * Sets Whether the Communication is private or not
     * @param {Boolean} bCommunicationPrivate Whether the Communication is private or not
     */
    setBCommunicationPrivate(bCommunicationPrivate) {
        this['bCommunicationPrivate'] = bCommunicationPrivate;
    }
/**
     * Returns How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
     * @return {module:eZmaxAPI/model/CommunicationRequest.ECommunicationAttachmenttypeEnum}
     */
    getECommunicationAttachmenttype() {
        return this.eCommunicationAttachmenttype;
    }

    /**
     * Sets How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
     * @param {module:eZmaxAPI/model/CommunicationRequest.ECommunicationAttachmenttypeEnum} eCommunicationAttachmenttype How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
     */
    setECommunicationAttachmenttype(eCommunicationAttachmenttype) {
        this['eCommunicationAttachmenttype'] = eCommunicationAttachmenttype;
    }
/**
     * Returns The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**
     * minimum: 1
     * maximum: 30
     * @return {Number}
     */
    getICommunicationAttachmentlinkexpiration() {
        return this.iCommunicationAttachmentlinkexpiration;
    }

    /**
     * Sets The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**
     * @param {Number} iCommunicationAttachmentlinkexpiration The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**
     */
    setICommunicationAttachmentlinkexpiration(iCommunicationAttachmentlinkexpiration) {
        this['iCommunicationAttachmentlinkexpiration'] = iCommunicationAttachmentlinkexpiration;
    }
/**
     * Returns Whether we ask for a read receipt or not.
     * @return {Boolean}
     */
    getBCommunicationReadreceipt() {
        return this.bCommunicationReadreceipt;
    }

    /**
     * Sets Whether we ask for a read receipt or not.
     * @param {Boolean} bCommunicationReadreceipt Whether we ask for a read receipt or not.
     */
    setBCommunicationReadreceipt(bCommunicationReadreceipt) {
        this['bCommunicationReadreceipt'] = bCommunicationReadreceipt;
    }

}

CommunicationRequest.RequiredProperties = ["eCommunicationType", "tCommunicationBody", "bCommunicationPrivate"];

/**
 * The unique ID of the Communication.
 * @member {Number} pkiCommunicationID
 */
CommunicationRequest.prototype['pkiCommunicationID'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldECommunicationImportance} eCommunicationImportance
 */
CommunicationRequest.prototype['eCommunicationImportance'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldECommunicationType} eCommunicationType
 */
CommunicationRequest.prototype['eCommunicationType'] = undefined;

/**
 * @member {module:eZmaxAPI/model/CustomCommunicationsenderRequest} objCommunicationsender
 */
CommunicationRequest.prototype['objCommunicationsender'] = undefined;

/**
 * The subject of the Communication
 * @member {String} sCommunicationSubject
 */
CommunicationRequest.prototype['sCommunicationSubject'] = undefined;

/**
 * The Body of the Communication
 * @member {String} tCommunicationBody
 */
CommunicationRequest.prototype['tCommunicationBody'] = undefined;

/**
 * Whether the Communication is private or not
 * @member {Boolean} bCommunicationPrivate
 */
CommunicationRequest.prototype['bCommunicationPrivate'] = undefined;

/**
 * How the attachment should be included in the email.   Only used if eCommunicationType is **Email**
 * @member {module:eZmaxAPI/model/CommunicationRequest.ECommunicationAttachmenttypeEnum} eCommunicationAttachmenttype
 */
CommunicationRequest.prototype['eCommunicationAttachmenttype'] = undefined;

/**
 * The number of days before the attachment link expired.   Only used if eCommunicationType is **Email** and eCommunicationattachmentType is **Link**
 * @member {Number} iCommunicationAttachmentlinkexpiration
 */
CommunicationRequest.prototype['iCommunicationAttachmentlinkexpiration'] = undefined;

/**
 * Whether we ask for a read receipt or not.
 * @member {Boolean} bCommunicationReadreceipt
 */
CommunicationRequest.prototype['bCommunicationReadreceipt'] = undefined;





/**
 * Allowed values for the <code>eCommunicationAttachmenttype</code> property.
 * @enum {String}
 * @readonly
 */
CommunicationRequest['ECommunicationAttachmenttypeEnum'] = {

    /**
     * value: "Attachment"
     * @const
     */
    "Attachment": "Attachment",

    /**
     * value: "Url"
     * @const
     */
    "Url": "Url"
};



export default CommunicationRequest;

