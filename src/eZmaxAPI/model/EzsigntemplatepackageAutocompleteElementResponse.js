/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FieldEEzsignfoldertypePrivacylevel from './FieldEEzsignfoldertypePrivacylevel';

/**
 * The EzsigntemplatepackageAutocompleteElementResponse model module.
 * @module eZmaxAPI/model/EzsigntemplatepackageAutocompleteElementResponse
 * @version 1.2.0
 */
class EzsigntemplatepackageAutocompleteElementResponse {
    /**
     * Constructs a new <code>EzsigntemplatepackageAutocompleteElementResponse</code>.
     * A Ezsigntemplatepackage AutocompleteElement Response
     * @alias module:eZmaxAPI/model/EzsigntemplatepackageAutocompleteElementResponse
     * @param eEzsignfoldertypePrivacylevel {module:eZmaxAPI/model/FieldEEzsignfoldertypePrivacylevel} 
     * @param sEzsigntemplatepackageDescription {String} The description of the Ezsigntemplatepackage
     * @param pkiEzsigntemplatepackageID {Number} The unique ID of the Ezsigntemplatepackage
     * @param bEzsigntemplatepackageIsactive {Boolean} Whether the Ezsigntemplatepackage is active or not
     * @param bDisabled {Boolean} Indicates if the element is disabled in the context
     */
    constructor(eEzsignfoldertypePrivacylevel, sEzsigntemplatepackageDescription, pkiEzsigntemplatepackageID, bEzsigntemplatepackageIsactive, bDisabled) { 
        
        EzsigntemplatepackageAutocompleteElementResponse.initialize(this, eEzsignfoldertypePrivacylevel, sEzsigntemplatepackageDescription, pkiEzsigntemplatepackageID, bEzsigntemplatepackageIsactive, bDisabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eEzsignfoldertypePrivacylevel, sEzsigntemplatepackageDescription, pkiEzsigntemplatepackageID, bEzsigntemplatepackageIsactive, bDisabled) { 
        obj['eEzsignfoldertypePrivacylevel'] = eEzsignfoldertypePrivacylevel;
        obj['sEzsigntemplatepackageDescription'] = sEzsigntemplatepackageDescription;
        obj['pkiEzsigntemplatepackageID'] = pkiEzsigntemplatepackageID;
        obj['bEzsigntemplatepackageIsactive'] = bEzsigntemplatepackageIsactive;
        obj['bDisabled'] = bDisabled;
    }

    /**
     * Constructs a <code>EzsigntemplatepackageAutocompleteElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackageAutocompleteElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsigntemplatepackageAutocompleteElementResponse} The populated <code>EzsigntemplatepackageAutocompleteElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsigntemplatepackageAutocompleteElementResponse();

            if (data.hasOwnProperty('eEzsignfoldertypePrivacylevel')) {
                obj['eEzsignfoldertypePrivacylevel'] = FieldEEzsignfoldertypePrivacylevel.constructFromObject(data['eEzsignfoldertypePrivacylevel']);
            }
            if (data.hasOwnProperty('sEzsigntemplatepackageDescription')) {
                obj['sEzsigntemplatepackageDescription'] = ApiClient.convertToType(data['sEzsigntemplatepackageDescription'], 'String');
            }
            if (data.hasOwnProperty('pkiEzsigntemplatepackageID')) {
                obj['pkiEzsigntemplatepackageID'] = ApiClient.convertToType(data['pkiEzsigntemplatepackageID'], 'Number');
            }
            if (data.hasOwnProperty('bEzsigntemplatepackageIsactive')) {
                obj['bEzsigntemplatepackageIsactive'] = ApiClient.convertToType(data['bEzsigntemplatepackageIsactive'], 'Boolean');
            }
            if (data.hasOwnProperty('bDisabled')) {
                obj['bDisabled'] = ApiClient.convertToType(data['bDisabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsigntemplatepackageAutocompleteElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsigntemplatepackageAutocompleteElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsigntemplatepackageAutocompleteElementResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sEzsigntemplatepackageDescription'] && !(typeof data['sEzsigntemplatepackageDescription'] === 'string' || data['sEzsigntemplatepackageDescription'] instanceof String)) {
            throw new Error("Expected the field `sEzsigntemplatepackageDescription` to be a primitive type in the JSON string but got " + data['sEzsigntemplatepackageDescription']);
        }

        return true;
    }

/**
     * @return {module:eZmaxAPI/model/FieldEEzsignfoldertypePrivacylevel}
     */
    getEEzsignfoldertypePrivacylevel() {
        return this.eEzsignfoldertypePrivacylevel;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEEzsignfoldertypePrivacylevel} eEzsignfoldertypePrivacylevel
     */
    setEEzsignfoldertypePrivacylevel(eEzsignfoldertypePrivacylevel) {
        this['eEzsignfoldertypePrivacylevel'] = eEzsignfoldertypePrivacylevel;
    }
/**
     * Returns The description of the Ezsigntemplatepackage
     * @return {String}
     */
    getSEzsigntemplatepackageDescription() {
        return this.sEzsigntemplatepackageDescription;
    }

    /**
     * Sets The description of the Ezsigntemplatepackage
     * @param {String} sEzsigntemplatepackageDescription The description of the Ezsigntemplatepackage
     */
    setSEzsigntemplatepackageDescription(sEzsigntemplatepackageDescription) {
        this['sEzsigntemplatepackageDescription'] = sEzsigntemplatepackageDescription;
    }
/**
     * Returns The unique ID of the Ezsigntemplatepackage
     * minimum: 0
     * @return {Number}
     */
    getPkiEzsigntemplatepackageID() {
        return this.pkiEzsigntemplatepackageID;
    }

    /**
     * Sets The unique ID of the Ezsigntemplatepackage
     * @param {Number} pkiEzsigntemplatepackageID The unique ID of the Ezsigntemplatepackage
     */
    setPkiEzsigntemplatepackageID(pkiEzsigntemplatepackageID) {
        this['pkiEzsigntemplatepackageID'] = pkiEzsigntemplatepackageID;
    }
/**
     * Returns Whether the Ezsigntemplatepackage is active or not
     * @return {Boolean}
     */
    getBEzsigntemplatepackageIsactive() {
        return this.bEzsigntemplatepackageIsactive;
    }

    /**
     * Sets Whether the Ezsigntemplatepackage is active or not
     * @param {Boolean} bEzsigntemplatepackageIsactive Whether the Ezsigntemplatepackage is active or not
     */
    setBEzsigntemplatepackageIsactive(bEzsigntemplatepackageIsactive) {
        this['bEzsigntemplatepackageIsactive'] = bEzsigntemplatepackageIsactive;
    }
/**
     * Returns Indicates if the element is disabled in the context
     * @return {Boolean}
     */
    getBDisabled() {
        return this.bDisabled;
    }

    /**
     * Sets Indicates if the element is disabled in the context
     * @param {Boolean} bDisabled Indicates if the element is disabled in the context
     */
    setBDisabled(bDisabled) {
        this['bDisabled'] = bDisabled;
    }

}

EzsigntemplatepackageAutocompleteElementResponse.RequiredProperties = ["eEzsignfoldertypePrivacylevel", "sEzsigntemplatepackageDescription", "pkiEzsigntemplatepackageID", "bEzsigntemplatepackageIsactive", "bDisabled"];

/**
 * @member {module:eZmaxAPI/model/FieldEEzsignfoldertypePrivacylevel} eEzsignfoldertypePrivacylevel
 */
EzsigntemplatepackageAutocompleteElementResponse.prototype['eEzsignfoldertypePrivacylevel'] = undefined;

/**
 * The description of the Ezsigntemplatepackage
 * @member {String} sEzsigntemplatepackageDescription
 */
EzsigntemplatepackageAutocompleteElementResponse.prototype['sEzsigntemplatepackageDescription'] = undefined;

/**
 * The unique ID of the Ezsigntemplatepackage
 * @member {Number} pkiEzsigntemplatepackageID
 */
EzsigntemplatepackageAutocompleteElementResponse.prototype['pkiEzsigntemplatepackageID'] = undefined;

/**
 * Whether the Ezsigntemplatepackage is active or not
 * @member {Boolean} bEzsigntemplatepackageIsactive
 */
EzsigntemplatepackageAutocompleteElementResponse.prototype['bEzsigntemplatepackageIsactive'] = undefined;

/**
 * Indicates if the element is disabled in the context
 * @member {Boolean} bDisabled
 */
EzsigntemplatepackageAutocompleteElementResponse.prototype['bDisabled'] = undefined;






export default EzsigntemplatepackageAutocompleteElementResponse;

