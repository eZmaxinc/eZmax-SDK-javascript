/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonAudit from './CommonAudit';
import FieldEWebhookEzsignevent from './FieldEWebhookEzsignevent';
import FieldEWebhookManagementevent from './FieldEWebhookManagementevent';
import FieldEWebhookModule from './FieldEWebhookModule';
import WebhookResponseCompound from './WebhookResponseCompound';
import WebhookheaderResponseCompound from './WebhookheaderResponseCompound';

/**
 * The CustomWebhookResponse model module.
 * @module eZmaxAPI/model/CustomWebhookResponse
 * @version 1.2.0
 */
class CustomWebhookResponse {
    /**
     * Constructs a new <code>CustomWebhookResponse</code>.
     * A custom Webhook object
     * @alias module:eZmaxAPI/model/CustomWebhookResponse
     * @implements module:eZmaxAPI/model/WebhookResponseCompound
     * @param pkiWebhookID {Number} The unique ID of the Webhook
     * @param sWebhookDescription {String} The description of the Webhook
     * @param eWebhookModule {module:eZmaxAPI/model/FieldEWebhookModule} 
     * @param sWebhookUrl {String} The URL of the Webhook callback
     * @param sWebhookEmailfailed {String} The email that will receive the Webhook in case all attempts fail
     * @param bWebhookIsactive {Boolean} Whether the Webhook is active or not
     * @param bWebhookIssigned {Boolean} Whether the requests will be signed or not
     * @param bWebhookSkipsslvalidation {Boolean} Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
     * @param objAudit {module:eZmaxAPI/model/CommonAudit} 
     * @param pksCustomerCode {String} The customer code assigned to your account
     * @param bWebhookTest {Boolean} Wheter the webhook received is a manual test or a real event
     */
    constructor(pkiWebhookID, sWebhookDescription, eWebhookModule, sWebhookUrl, sWebhookEmailfailed, bWebhookIsactive, bWebhookIssigned, bWebhookSkipsslvalidation, objAudit, pksCustomerCode, bWebhookTest) { 
        WebhookResponseCompound.initialize(this, pkiWebhookID, sWebhookDescription, eWebhookModule, sWebhookUrl, sWebhookEmailfailed, bWebhookIsactive, bWebhookIssigned, bWebhookSkipsslvalidation, objAudit);
        CustomWebhookResponse.initialize(this, pkiWebhookID, sWebhookDescription, eWebhookModule, sWebhookUrl, sWebhookEmailfailed, bWebhookIsactive, bWebhookIssigned, bWebhookSkipsslvalidation, objAudit, pksCustomerCode, bWebhookTest);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiWebhookID, sWebhookDescription, eWebhookModule, sWebhookUrl, sWebhookEmailfailed, bWebhookIsactive, bWebhookIssigned, bWebhookSkipsslvalidation, objAudit, pksCustomerCode, bWebhookTest) { 
        obj['pkiWebhookID'] = pkiWebhookID;
        obj['sWebhookDescription'] = sWebhookDescription;
        obj['eWebhookModule'] = eWebhookModule;
        obj['sWebhookUrl'] = sWebhookUrl;
        obj['sWebhookEmailfailed'] = sWebhookEmailfailed;
        obj['bWebhookIsactive'] = bWebhookIsactive;
        obj['bWebhookIssigned'] = bWebhookIssigned;
        obj['bWebhookSkipsslvalidation'] = bWebhookSkipsslvalidation;
        obj['objAudit'] = objAudit;
        obj['pksCustomerCode'] = pksCustomerCode;
        obj['bWebhookTest'] = bWebhookTest;
    }

    /**
     * Constructs a <code>CustomWebhookResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CustomWebhookResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CustomWebhookResponse} The populated <code>CustomWebhookResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomWebhookResponse();
            WebhookResponseCompound.constructFromObject(data, obj);

            if (data.hasOwnProperty('pkiWebhookID')) {
                obj['pkiWebhookID'] = ApiClient.convertToType(data['pkiWebhookID'], 'Number');
            }
            if (data.hasOwnProperty('sWebhookDescription')) {
                obj['sWebhookDescription'] = ApiClient.convertToType(data['sWebhookDescription'], 'String');
            }
            if (data.hasOwnProperty('fkiEzsignfoldertypeID')) {
                obj['fkiEzsignfoldertypeID'] = ApiClient.convertToType(data['fkiEzsignfoldertypeID'], 'Number');
            }
            if (data.hasOwnProperty('sEzsignfoldertypeNameX')) {
                obj['sEzsignfoldertypeNameX'] = ApiClient.convertToType(data['sEzsignfoldertypeNameX'], 'String');
            }
            if (data.hasOwnProperty('eWebhookModule')) {
                obj['eWebhookModule'] = FieldEWebhookModule.constructFromObject(data['eWebhookModule']);
            }
            if (data.hasOwnProperty('eWebhookEzsignevent')) {
                obj['eWebhookEzsignevent'] = FieldEWebhookEzsignevent.constructFromObject(data['eWebhookEzsignevent']);
            }
            if (data.hasOwnProperty('eWebhookManagementevent')) {
                obj['eWebhookManagementevent'] = FieldEWebhookManagementevent.constructFromObject(data['eWebhookManagementevent']);
            }
            if (data.hasOwnProperty('sWebhookUrl')) {
                obj['sWebhookUrl'] = ApiClient.convertToType(data['sWebhookUrl'], 'String');
            }
            if (data.hasOwnProperty('sWebhookEmailfailed')) {
                obj['sWebhookEmailfailed'] = ApiClient.convertToType(data['sWebhookEmailfailed'], 'String');
            }
            if (data.hasOwnProperty('sWebhookApikey')) {
                obj['sWebhookApikey'] = ApiClient.convertToType(data['sWebhookApikey'], 'String');
            }
            if (data.hasOwnProperty('sWebhookSecret')) {
                obj['sWebhookSecret'] = ApiClient.convertToType(data['sWebhookSecret'], 'String');
            }
            if (data.hasOwnProperty('bWebhookIsactive')) {
                obj['bWebhookIsactive'] = ApiClient.convertToType(data['bWebhookIsactive'], 'Boolean');
            }
            if (data.hasOwnProperty('bWebhookIssigned')) {
                obj['bWebhookIssigned'] = ApiClient.convertToType(data['bWebhookIssigned'], 'Boolean');
            }
            if (data.hasOwnProperty('bWebhookSkipsslvalidation')) {
                obj['bWebhookSkipsslvalidation'] = ApiClient.convertToType(data['bWebhookSkipsslvalidation'], 'Boolean');
            }
            if (data.hasOwnProperty('objAudit')) {
                obj['objAudit'] = CommonAudit.constructFromObject(data['objAudit']);
            }
            if (data.hasOwnProperty('sWebhookEvent')) {
                obj['sWebhookEvent'] = ApiClient.convertToType(data['sWebhookEvent'], 'String');
            }
            if (data.hasOwnProperty('a_objWebhookheader')) {
                obj['a_objWebhookheader'] = ApiClient.convertToType(data['a_objWebhookheader'], [WebhookheaderResponseCompound]);
            }
            if (data.hasOwnProperty('pksCustomerCode')) {
                obj['pksCustomerCode'] = ApiClient.convertToType(data['pksCustomerCode'], 'String');
            }
            if (data.hasOwnProperty('bWebhookTest')) {
                obj['bWebhookTest'] = ApiClient.convertToType(data['bWebhookTest'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomWebhookResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomWebhookResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomWebhookResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sWebhookDescription'] && !(typeof data['sWebhookDescription'] === 'string' || data['sWebhookDescription'] instanceof String)) {
            throw new Error("Expected the field `sWebhookDescription` to be a primitive type in the JSON string but got " + data['sWebhookDescription']);
        }
        // ensure the json data is a string
        if (data['sEzsignfoldertypeNameX'] && !(typeof data['sEzsignfoldertypeNameX'] === 'string' || data['sEzsignfoldertypeNameX'] instanceof String)) {
            throw new Error("Expected the field `sEzsignfoldertypeNameX` to be a primitive type in the JSON string but got " + data['sEzsignfoldertypeNameX']);
        }
        // ensure the json data is a string
        if (data['sWebhookUrl'] && !(typeof data['sWebhookUrl'] === 'string' || data['sWebhookUrl'] instanceof String)) {
            throw new Error("Expected the field `sWebhookUrl` to be a primitive type in the JSON string but got " + data['sWebhookUrl']);
        }
        // ensure the json data is a string
        if (data['sWebhookEmailfailed'] && !(typeof data['sWebhookEmailfailed'] === 'string' || data['sWebhookEmailfailed'] instanceof String)) {
            throw new Error("Expected the field `sWebhookEmailfailed` to be a primitive type in the JSON string but got " + data['sWebhookEmailfailed']);
        }
        // ensure the json data is a string
        if (data['sWebhookApikey'] && !(typeof data['sWebhookApikey'] === 'string' || data['sWebhookApikey'] instanceof String)) {
            throw new Error("Expected the field `sWebhookApikey` to be a primitive type in the JSON string but got " + data['sWebhookApikey']);
        }
        // ensure the json data is a string
        if (data['sWebhookSecret'] && !(typeof data['sWebhookSecret'] === 'string' || data['sWebhookSecret'] instanceof String)) {
            throw new Error("Expected the field `sWebhookSecret` to be a primitive type in the JSON string but got " + data['sWebhookSecret']);
        }
        // validate the optional field `objAudit`
        if (data['objAudit']) { // data not null
          CommonAudit.validateJSON(data['objAudit']);
        }
        // ensure the json data is a string
        if (data['sWebhookEvent'] && !(typeof data['sWebhookEvent'] === 'string' || data['sWebhookEvent'] instanceof String)) {
            throw new Error("Expected the field `sWebhookEvent` to be a primitive type in the JSON string but got " + data['sWebhookEvent']);
        }
        if (data['a_objWebhookheader']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['a_objWebhookheader'])) {
                throw new Error("Expected the field `a_objWebhookheader` to be an array in the JSON data but got " + data['a_objWebhookheader']);
            }
            // validate the optional field `a_objWebhookheader` (array)
            for (const item of data['a_objWebhookheader']) {
                WebhookheaderResponseCompound.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['pksCustomerCode'] && !(typeof data['pksCustomerCode'] === 'string' || data['pksCustomerCode'] instanceof String)) {
            throw new Error("Expected the field `pksCustomerCode` to be a primitive type in the JSON string but got " + data['pksCustomerCode']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Webhook
     * @return {Number}
     */
    getPkiWebhookID() {
        return this.pkiWebhookID;
    }

    /**
     * Sets The unique ID of the Webhook
     * @param {Number} pkiWebhookID The unique ID of the Webhook
     */
    setPkiWebhookID(pkiWebhookID) {
        this['pkiWebhookID'] = pkiWebhookID;
    }
/**
     * Returns The description of the Webhook
     * @return {String}
     */
    getSWebhookDescription() {
        return this.sWebhookDescription;
    }

    /**
     * Sets The description of the Webhook
     * @param {String} sWebhookDescription The description of the Webhook
     */
    setSWebhookDescription(sWebhookDescription) {
        this['sWebhookDescription'] = sWebhookDescription;
    }
/**
     * Returns The unique ID of the Ezsignfoldertype.
     * minimum: 0
     * maximum: 65535
     * @return {Number}
     */
    getFkiEzsignfoldertypeID() {
        return this.fkiEzsignfoldertypeID;
    }

    /**
     * Sets The unique ID of the Ezsignfoldertype.
     * @param {Number} fkiEzsignfoldertypeID The unique ID of the Ezsignfoldertype.
     */
    setFkiEzsignfoldertypeID(fkiEzsignfoldertypeID) {
        this['fkiEzsignfoldertypeID'] = fkiEzsignfoldertypeID;
    }
/**
     * Returns The name of the Ezsignfoldertype in the language of the requester
     * @return {String}
     */
    getSEzsignfoldertypeNameX() {
        return this.sEzsignfoldertypeNameX;
    }

    /**
     * Sets The name of the Ezsignfoldertype in the language of the requester
     * @param {String} sEzsignfoldertypeNameX The name of the Ezsignfoldertype in the language of the requester
     */
    setSEzsignfoldertypeNameX(sEzsignfoldertypeNameX) {
        this['sEzsignfoldertypeNameX'] = sEzsignfoldertypeNameX;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEWebhookModule}
     */
    getEWebhookModule() {
        return this.eWebhookModule;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEWebhookModule} eWebhookModule
     */
    setEWebhookModule(eWebhookModule) {
        this['eWebhookModule'] = eWebhookModule;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEWebhookEzsignevent}
     */
    getEWebhookEzsignevent() {
        return this.eWebhookEzsignevent;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEWebhookEzsignevent} eWebhookEzsignevent
     */
    setEWebhookEzsignevent(eWebhookEzsignevent) {
        this['eWebhookEzsignevent'] = eWebhookEzsignevent;
    }
/**
     * @return {module:eZmaxAPI/model/FieldEWebhookManagementevent}
     */
    getEWebhookManagementevent() {
        return this.eWebhookManagementevent;
    }

    /**
     * @param {module:eZmaxAPI/model/FieldEWebhookManagementevent} eWebhookManagementevent
     */
    setEWebhookManagementevent(eWebhookManagementevent) {
        this['eWebhookManagementevent'] = eWebhookManagementevent;
    }
/**
     * Returns The URL of the Webhook callback
     * @return {String}
     */
    getSWebhookUrl() {
        return this.sWebhookUrl;
    }

    /**
     * Sets The URL of the Webhook callback
     * @param {String} sWebhookUrl The URL of the Webhook callback
     */
    setSWebhookUrl(sWebhookUrl) {
        this['sWebhookUrl'] = sWebhookUrl;
    }
/**
     * Returns The email that will receive the Webhook in case all attempts fail
     * @return {String}
     */
    getSWebhookEmailfailed() {
        return this.sWebhookEmailfailed;
    }

    /**
     * Sets The email that will receive the Webhook in case all attempts fail
     * @param {String} sWebhookEmailfailed The email that will receive the Webhook in case all attempts fail
     */
    setSWebhookEmailfailed(sWebhookEmailfailed) {
        this['sWebhookEmailfailed'] = sWebhookEmailfailed;
    }
/**
     * Returns The Apikey for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     * @return {String}
     */
    getSWebhookApikey() {
        return this.sWebhookApikey;
    }

    /**
     * Sets The Apikey for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     * @param {String} sWebhookApikey The Apikey for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     */
    setSWebhookApikey(sWebhookApikey) {
        this['sWebhookApikey'] = sWebhookApikey;
    }
/**
     * Returns The Secret for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     * @return {String}
     */
    getSWebhookSecret() {
        return this.sWebhookSecret;
    }

    /**
     * Sets The Secret for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     * @param {String} sWebhookSecret The Secret for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
     */
    setSWebhookSecret(sWebhookSecret) {
        this['sWebhookSecret'] = sWebhookSecret;
    }
/**
     * Returns Whether the Webhook is active or not
     * @return {Boolean}
     */
    getBWebhookIsactive() {
        return this.bWebhookIsactive;
    }

    /**
     * Sets Whether the Webhook is active or not
     * @param {Boolean} bWebhookIsactive Whether the Webhook is active or not
     */
    setBWebhookIsactive(bWebhookIsactive) {
        this['bWebhookIsactive'] = bWebhookIsactive;
    }
/**
     * Returns Whether the requests will be signed or not
     * @return {Boolean}
     */
    getBWebhookIssigned() {
        return this.bWebhookIssigned;
    }

    /**
     * Sets Whether the requests will be signed or not
     * @param {Boolean} bWebhookIssigned Whether the requests will be signed or not
     */
    setBWebhookIssigned(bWebhookIssigned) {
        this['bWebhookIssigned'] = bWebhookIssigned;
    }
/**
     * Returns Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
     * @return {Boolean}
     */
    getBWebhookSkipsslvalidation() {
        return this.bWebhookSkipsslvalidation;
    }

    /**
     * Sets Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
     * @param {Boolean} bWebhookSkipsslvalidation Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
     */
    setBWebhookSkipsslvalidation(bWebhookSkipsslvalidation) {
        this['bWebhookSkipsslvalidation'] = bWebhookSkipsslvalidation;
    }
/**
     * @return {module:eZmaxAPI/model/CommonAudit}
     */
    getObjAudit() {
        return this.objAudit;
    }

    /**
     * @param {module:eZmaxAPI/model/CommonAudit} objAudit
     */
    setObjAudit(objAudit) {
        this['objAudit'] = objAudit;
    }
/**
     * Returns The concatenated string to describe the Webhook event
     * @return {String}
     */
    getSWebhookEvent() {
        return this.sWebhookEvent;
    }

    /**
     * Sets The concatenated string to describe the Webhook event
     * @param {String} sWebhookEvent The concatenated string to describe the Webhook event
     */
    setSWebhookEvent(sWebhookEvent) {
        this['sWebhookEvent'] = sWebhookEvent;
    }
/**
     * @return {Array.<module:eZmaxAPI/model/WebhookheaderResponseCompound>}
     */
    getAObjWebhookheader() {
        return this.a_objWebhookheader;
    }

    /**
     * @param {Array.<module:eZmaxAPI/model/WebhookheaderResponseCompound>} a_objWebhookheader
     */
    setAObjWebhookheader(a_objWebhookheader) {
        this['a_objWebhookheader'] = a_objWebhookheader;
    }
/**
     * Returns The customer code assigned to your account
     * @return {String}
     */
    getPksCustomerCode() {
        return this.pksCustomerCode;
    }

    /**
     * Sets The customer code assigned to your account
     * @param {String} pksCustomerCode The customer code assigned to your account
     */
    setPksCustomerCode(pksCustomerCode) {
        this['pksCustomerCode'] = pksCustomerCode;
    }
/**
     * Returns Wheter the webhook received is a manual test or a real event
     * @return {Boolean}
     */
    getBWebhookTest() {
        return this.bWebhookTest;
    }

    /**
     * Sets Wheter the webhook received is a manual test or a real event
     * @param {Boolean} bWebhookTest Wheter the webhook received is a manual test or a real event
     */
    setBWebhookTest(bWebhookTest) {
        this['bWebhookTest'] = bWebhookTest;
    }

}

CustomWebhookResponse.RequiredProperties = ["pkiWebhookID", "sWebhookDescription", "eWebhookModule", "sWebhookUrl", "sWebhookEmailfailed", "bWebhookIsactive", "bWebhookIssigned", "bWebhookSkipsslvalidation", "objAudit", "pksCustomerCode", "bWebhookTest"];

/**
 * The unique ID of the Webhook
 * @member {Number} pkiWebhookID
 */
CustomWebhookResponse.prototype['pkiWebhookID'] = undefined;

/**
 * The description of the Webhook
 * @member {String} sWebhookDescription
 */
CustomWebhookResponse.prototype['sWebhookDescription'] = undefined;

/**
 * The unique ID of the Ezsignfoldertype.
 * @member {Number} fkiEzsignfoldertypeID
 */
CustomWebhookResponse.prototype['fkiEzsignfoldertypeID'] = undefined;

/**
 * The name of the Ezsignfoldertype in the language of the requester
 * @member {String} sEzsignfoldertypeNameX
 */
CustomWebhookResponse.prototype['sEzsignfoldertypeNameX'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEWebhookModule} eWebhookModule
 */
CustomWebhookResponse.prototype['eWebhookModule'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEWebhookEzsignevent} eWebhookEzsignevent
 */
CustomWebhookResponse.prototype['eWebhookEzsignevent'] = undefined;

/**
 * @member {module:eZmaxAPI/model/FieldEWebhookManagementevent} eWebhookManagementevent
 */
CustomWebhookResponse.prototype['eWebhookManagementevent'] = undefined;

/**
 * The URL of the Webhook callback
 * @member {String} sWebhookUrl
 */
CustomWebhookResponse.prototype['sWebhookUrl'] = undefined;

/**
 * The email that will receive the Webhook in case all attempts fail
 * @member {String} sWebhookEmailfailed
 */
CustomWebhookResponse.prototype['sWebhookEmailfailed'] = undefined;

/**
 * The Apikey for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sWebhookApikey
 */
CustomWebhookResponse.prototype['sWebhookApikey'] = undefined;

/**
 * The Secret for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sWebhookSecret
 */
CustomWebhookResponse.prototype['sWebhookSecret'] = undefined;

/**
 * Whether the Webhook is active or not
 * @member {Boolean} bWebhookIsactive
 */
CustomWebhookResponse.prototype['bWebhookIsactive'] = undefined;

/**
 * Whether the requests will be signed or not
 * @member {Boolean} bWebhookIssigned
 */
CustomWebhookResponse.prototype['bWebhookIssigned'] = undefined;

/**
 * Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
 * @member {Boolean} bWebhookSkipsslvalidation
 */
CustomWebhookResponse.prototype['bWebhookSkipsslvalidation'] = undefined;

/**
 * @member {module:eZmaxAPI/model/CommonAudit} objAudit
 */
CustomWebhookResponse.prototype['objAudit'] = undefined;

/**
 * The concatenated string to describe the Webhook event
 * @member {String} sWebhookEvent
 */
CustomWebhookResponse.prototype['sWebhookEvent'] = undefined;

/**
 * @member {Array.<module:eZmaxAPI/model/WebhookheaderResponseCompound>} a_objWebhookheader
 */
CustomWebhookResponse.prototype['a_objWebhookheader'] = undefined;

/**
 * The customer code assigned to your account
 * @member {String} pksCustomerCode
 */
CustomWebhookResponse.prototype['pksCustomerCode'] = undefined;

/**
 * Wheter the webhook received is a manual test or a real event
 * @member {Boolean} bWebhookTest
 */
CustomWebhookResponse.prototype['bWebhookTest'] = undefined;


// Implement WebhookResponseCompound interface:
/**
 * The unique ID of the Webhook
 * @member {Number} pkiWebhookID
 */
WebhookResponseCompound.prototype['pkiWebhookID'] = undefined;
/**
 * The description of the Webhook
 * @member {String} sWebhookDescription
 */
WebhookResponseCompound.prototype['sWebhookDescription'] = undefined;
/**
 * The unique ID of the Ezsignfoldertype.
 * @member {Number} fkiEzsignfoldertypeID
 */
WebhookResponseCompound.prototype['fkiEzsignfoldertypeID'] = undefined;
/**
 * The name of the Ezsignfoldertype in the language of the requester
 * @member {String} sEzsignfoldertypeNameX
 */
WebhookResponseCompound.prototype['sEzsignfoldertypeNameX'] = undefined;
/**
 * @member {module:eZmaxAPI/model/FieldEWebhookModule} eWebhookModule
 */
WebhookResponseCompound.prototype['eWebhookModule'] = undefined;
/**
 * @member {module:eZmaxAPI/model/FieldEWebhookEzsignevent} eWebhookEzsignevent
 */
WebhookResponseCompound.prototype['eWebhookEzsignevent'] = undefined;
/**
 * @member {module:eZmaxAPI/model/FieldEWebhookManagementevent} eWebhookManagementevent
 */
WebhookResponseCompound.prototype['eWebhookManagementevent'] = undefined;
/**
 * The URL of the Webhook callback
 * @member {String} sWebhookUrl
 */
WebhookResponseCompound.prototype['sWebhookUrl'] = undefined;
/**
 * The email that will receive the Webhook in case all attempts fail
 * @member {String} sWebhookEmailfailed
 */
WebhookResponseCompound.prototype['sWebhookEmailfailed'] = undefined;
/**
 * The Apikey for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sWebhookApikey
 */
WebhookResponseCompound.prototype['sWebhookApikey'] = undefined;
/**
 * The Secret for the Webhook.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sWebhookSecret
 */
WebhookResponseCompound.prototype['sWebhookSecret'] = undefined;
/**
 * Whether the Webhook is active or not
 * @member {Boolean} bWebhookIsactive
 */
WebhookResponseCompound.prototype['bWebhookIsactive'] = undefined;
/**
 * Whether the requests will be signed or not
 * @member {Boolean} bWebhookIssigned
 */
WebhookResponseCompound.prototype['bWebhookIssigned'] = undefined;
/**
 * Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use
 * @member {Boolean} bWebhookSkipsslvalidation
 */
WebhookResponseCompound.prototype['bWebhookSkipsslvalidation'] = undefined;
/**
 * @member {module:eZmaxAPI/model/CommonAudit} objAudit
 */
WebhookResponseCompound.prototype['objAudit'] = undefined;
/**
 * The concatenated string to describe the Webhook event
 * @member {String} sWebhookEvent
 */
WebhookResponseCompound.prototype['sWebhookEvent'] = undefined;
/**
 * @member {Array.<module:eZmaxAPI/model/WebhookheaderResponseCompound>} a_objWebhookheader
 */
WebhookResponseCompound.prototype['a_objWebhookheader'] = undefined;




export default CustomWebhookResponse;

