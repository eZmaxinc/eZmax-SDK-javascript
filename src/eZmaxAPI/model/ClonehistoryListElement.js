/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClonehistoryListElement model module.
 * @module eZmaxAPI/model/ClonehistoryListElement
 * @version 1.1.17
 */
class ClonehistoryListElement {
    /**
     * Constructs a new <code>ClonehistoryListElement</code>.
     * A Clonehistory List Element
     * @alias module:eZmaxAPI/model/ClonehistoryListElement
     * @param pkiClonehistoryID {Number} The unique ID of the Clonehistory
     * @param fkiUserIDCloning {Number} The unique ID of the User
     * @param fkiUserIDCloned {Number} The unique ID of the User
     * @param dtClonehistoryFirsthit {String} The firsthit of the Clonehistory
     * @param sUserLoginnameCloning {String} The Login name of the User.
     * @param sUserFirstnameCloning {String} The First name of the user
     * @param sUserLastnameCloning {String} The Last name of the user
     * @param sUserLoginnameCloned {String} The Login name of the User.
     * @param sUserFirstnameCloned {String} The First name of the user
     * @param sUserLastnameCloned {String} The Last name of the user
     */
    constructor(pkiClonehistoryID, fkiUserIDCloning, fkiUserIDCloned, dtClonehistoryFirsthit, sUserLoginnameCloning, sUserFirstnameCloning, sUserLastnameCloning, sUserLoginnameCloned, sUserFirstnameCloned, sUserLastnameCloned) { 
        
        ClonehistoryListElement.initialize(this, pkiClonehistoryID, fkiUserIDCloning, fkiUserIDCloned, dtClonehistoryFirsthit, sUserLoginnameCloning, sUserFirstnameCloning, sUserLastnameCloning, sUserLoginnameCloned, sUserFirstnameCloned, sUserLastnameCloned);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiClonehistoryID, fkiUserIDCloning, fkiUserIDCloned, dtClonehistoryFirsthit, sUserLoginnameCloning, sUserFirstnameCloning, sUserLastnameCloning, sUserLoginnameCloned, sUserFirstnameCloned, sUserLastnameCloned) { 
        obj['pkiClonehistoryID'] = pkiClonehistoryID;
        obj['fkiUserIDCloning'] = fkiUserIDCloning;
        obj['fkiUserIDCloned'] = fkiUserIDCloned;
        obj['dtClonehistoryFirsthit'] = dtClonehistoryFirsthit;
        obj['sUserLoginnameCloning'] = sUserLoginnameCloning;
        obj['sUserFirstnameCloning'] = sUserFirstnameCloning;
        obj['sUserLastnameCloning'] = sUserLastnameCloning;
        obj['sUserLoginnameCloned'] = sUserLoginnameCloned;
        obj['sUserFirstnameCloned'] = sUserFirstnameCloned;
        obj['sUserLastnameCloned'] = sUserLastnameCloned;
    }

    /**
     * Constructs a <code>ClonehistoryListElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/ClonehistoryListElement} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/ClonehistoryListElement} The populated <code>ClonehistoryListElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClonehistoryListElement();

            if (data.hasOwnProperty('pkiClonehistoryID')) {
                obj['pkiClonehistoryID'] = ApiClient.convertToType(data['pkiClonehistoryID'], 'Number');
            }
            if (data.hasOwnProperty('fkiUserIDCloning')) {
                obj['fkiUserIDCloning'] = ApiClient.convertToType(data['fkiUserIDCloning'], 'Number');
            }
            if (data.hasOwnProperty('fkiUserIDCloned')) {
                obj['fkiUserIDCloned'] = ApiClient.convertToType(data['fkiUserIDCloned'], 'Number');
            }
            if (data.hasOwnProperty('dtClonehistoryFirsthit')) {
                obj['dtClonehistoryFirsthit'] = ApiClient.convertToType(data['dtClonehistoryFirsthit'], 'String');
            }
            if (data.hasOwnProperty('dtClonehistoryLasthit')) {
                obj['dtClonehistoryLasthit'] = ApiClient.convertToType(data['dtClonehistoryLasthit'], 'String');
            }
            if (data.hasOwnProperty('sUserLoginnameCloning')) {
                obj['sUserLoginnameCloning'] = ApiClient.convertToType(data['sUserLoginnameCloning'], 'String');
            }
            if (data.hasOwnProperty('sUserFirstnameCloning')) {
                obj['sUserFirstnameCloning'] = ApiClient.convertToType(data['sUserFirstnameCloning'], 'String');
            }
            if (data.hasOwnProperty('sUserLastnameCloning')) {
                obj['sUserLastnameCloning'] = ApiClient.convertToType(data['sUserLastnameCloning'], 'String');
            }
            if (data.hasOwnProperty('sUserLoginnameCloned')) {
                obj['sUserLoginnameCloned'] = ApiClient.convertToType(data['sUserLoginnameCloned'], 'String');
            }
            if (data.hasOwnProperty('sUserFirstnameCloned')) {
                obj['sUserFirstnameCloned'] = ApiClient.convertToType(data['sUserFirstnameCloned'], 'String');
            }
            if (data.hasOwnProperty('sUserLastnameCloned')) {
                obj['sUserLastnameCloned'] = ApiClient.convertToType(data['sUserLastnameCloned'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClonehistoryListElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClonehistoryListElement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClonehistoryListElement.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dtClonehistoryFirsthit'] && !(typeof data['dtClonehistoryFirsthit'] === 'string' || data['dtClonehistoryFirsthit'] instanceof String)) {
            throw new Error("Expected the field `dtClonehistoryFirsthit` to be a primitive type in the JSON string but got " + data['dtClonehistoryFirsthit']);
        }
        // ensure the json data is a string
        if (data['dtClonehistoryLasthit'] && !(typeof data['dtClonehistoryLasthit'] === 'string' || data['dtClonehistoryLasthit'] instanceof String)) {
            throw new Error("Expected the field `dtClonehistoryLasthit` to be a primitive type in the JSON string but got " + data['dtClonehistoryLasthit']);
        }
        // ensure the json data is a string
        if (data['sUserLoginnameCloning'] && !(typeof data['sUserLoginnameCloning'] === 'string' || data['sUserLoginnameCloning'] instanceof String)) {
            throw new Error("Expected the field `sUserLoginnameCloning` to be a primitive type in the JSON string but got " + data['sUserLoginnameCloning']);
        }
        // ensure the json data is a string
        if (data['sUserFirstnameCloning'] && !(typeof data['sUserFirstnameCloning'] === 'string' || data['sUserFirstnameCloning'] instanceof String)) {
            throw new Error("Expected the field `sUserFirstnameCloning` to be a primitive type in the JSON string but got " + data['sUserFirstnameCloning']);
        }
        // ensure the json data is a string
        if (data['sUserLastnameCloning'] && !(typeof data['sUserLastnameCloning'] === 'string' || data['sUserLastnameCloning'] instanceof String)) {
            throw new Error("Expected the field `sUserLastnameCloning` to be a primitive type in the JSON string but got " + data['sUserLastnameCloning']);
        }
        // ensure the json data is a string
        if (data['sUserLoginnameCloned'] && !(typeof data['sUserLoginnameCloned'] === 'string' || data['sUserLoginnameCloned'] instanceof String)) {
            throw new Error("Expected the field `sUserLoginnameCloned` to be a primitive type in the JSON string but got " + data['sUserLoginnameCloned']);
        }
        // ensure the json data is a string
        if (data['sUserFirstnameCloned'] && !(typeof data['sUserFirstnameCloned'] === 'string' || data['sUserFirstnameCloned'] instanceof String)) {
            throw new Error("Expected the field `sUserFirstnameCloned` to be a primitive type in the JSON string but got " + data['sUserFirstnameCloned']);
        }
        // ensure the json data is a string
        if (data['sUserLastnameCloned'] && !(typeof data['sUserLastnameCloned'] === 'string' || data['sUserLastnameCloned'] instanceof String)) {
            throw new Error("Expected the field `sUserLastnameCloned` to be a primitive type in the JSON string but got " + data['sUserLastnameCloned']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Clonehistory
     * minimum: 1
     * maximum: 16777215
     * @return {Number}
     */
    getPkiClonehistoryID() {
        return this.pkiClonehistoryID;
    }

    /**
     * Sets The unique ID of the Clonehistory
     * @param {Number} pkiClonehistoryID The unique ID of the Clonehistory
     */
    setPkiClonehistoryID(pkiClonehistoryID) {
        this['pkiClonehistoryID'] = pkiClonehistoryID;
    }
/**
     * Returns The unique ID of the User
     * minimum: 0
     * @return {Number}
     */
    getFkiUserIDCloning() {
        return this.fkiUserIDCloning;
    }

    /**
     * Sets The unique ID of the User
     * @param {Number} fkiUserIDCloning The unique ID of the User
     */
    setFkiUserIDCloning(fkiUserIDCloning) {
        this['fkiUserIDCloning'] = fkiUserIDCloning;
    }
/**
     * Returns The unique ID of the User
     * minimum: 0
     * @return {Number}
     */
    getFkiUserIDCloned() {
        return this.fkiUserIDCloned;
    }

    /**
     * Sets The unique ID of the User
     * @param {Number} fkiUserIDCloned The unique ID of the User
     */
    setFkiUserIDCloned(fkiUserIDCloned) {
        this['fkiUserIDCloned'] = fkiUserIDCloned;
    }
/**
     * Returns The firsthit of the Clonehistory
     * @return {String}
     */
    getDtClonehistoryFirsthit() {
        return this.dtClonehistoryFirsthit;
    }

    /**
     * Sets The firsthit of the Clonehistory
     * @param {String} dtClonehistoryFirsthit The firsthit of the Clonehistory
     */
    setDtClonehistoryFirsthit(dtClonehistoryFirsthit) {
        this['dtClonehistoryFirsthit'] = dtClonehistoryFirsthit;
    }
/**
     * Returns The lasthit of the Clonehistory
     * @return {String}
     */
    getDtClonehistoryLasthit() {
        return this.dtClonehistoryLasthit;
    }

    /**
     * Sets The lasthit of the Clonehistory
     * @param {String} dtClonehistoryLasthit The lasthit of the Clonehistory
     */
    setDtClonehistoryLasthit(dtClonehistoryLasthit) {
        this['dtClonehistoryLasthit'] = dtClonehistoryLasthit;
    }
/**
     * Returns The Login name of the User.
     * @return {String}
     */
    getSUserLoginnameCloning() {
        return this.sUserLoginnameCloning;
    }

    /**
     * Sets The Login name of the User.
     * @param {String} sUserLoginnameCloning The Login name of the User.
     */
    setSUserLoginnameCloning(sUserLoginnameCloning) {
        this['sUserLoginnameCloning'] = sUserLoginnameCloning;
    }
/**
     * Returns The First name of the user
     * @return {String}
     */
    getSUserFirstnameCloning() {
        return this.sUserFirstnameCloning;
    }

    /**
     * Sets The First name of the user
     * @param {String} sUserFirstnameCloning The First name of the user
     */
    setSUserFirstnameCloning(sUserFirstnameCloning) {
        this['sUserFirstnameCloning'] = sUserFirstnameCloning;
    }
/**
     * Returns The Last name of the user
     * @return {String}
     */
    getSUserLastnameCloning() {
        return this.sUserLastnameCloning;
    }

    /**
     * Sets The Last name of the user
     * @param {String} sUserLastnameCloning The Last name of the user
     */
    setSUserLastnameCloning(sUserLastnameCloning) {
        this['sUserLastnameCloning'] = sUserLastnameCloning;
    }
/**
     * Returns The Login name of the User.
     * @return {String}
     */
    getSUserLoginnameCloned() {
        return this.sUserLoginnameCloned;
    }

    /**
     * Sets The Login name of the User.
     * @param {String} sUserLoginnameCloned The Login name of the User.
     */
    setSUserLoginnameCloned(sUserLoginnameCloned) {
        this['sUserLoginnameCloned'] = sUserLoginnameCloned;
    }
/**
     * Returns The First name of the user
     * @return {String}
     */
    getSUserFirstnameCloned() {
        return this.sUserFirstnameCloned;
    }

    /**
     * Sets The First name of the user
     * @param {String} sUserFirstnameCloned The First name of the user
     */
    setSUserFirstnameCloned(sUserFirstnameCloned) {
        this['sUserFirstnameCloned'] = sUserFirstnameCloned;
    }
/**
     * Returns The Last name of the user
     * @return {String}
     */
    getSUserLastnameCloned() {
        return this.sUserLastnameCloned;
    }

    /**
     * Sets The Last name of the user
     * @param {String} sUserLastnameCloned The Last name of the user
     */
    setSUserLastnameCloned(sUserLastnameCloned) {
        this['sUserLastnameCloned'] = sUserLastnameCloned;
    }

}

ClonehistoryListElement.RequiredProperties = ["pkiClonehistoryID", "fkiUserIDCloning", "fkiUserIDCloned", "dtClonehistoryFirsthit", "sUserLoginnameCloning", "sUserFirstnameCloning", "sUserLastnameCloning", "sUserLoginnameCloned", "sUserFirstnameCloned", "sUserLastnameCloned"];

/**
 * The unique ID of the Clonehistory
 * @member {Number} pkiClonehistoryID
 */
ClonehistoryListElement.prototype['pkiClonehistoryID'] = undefined;

/**
 * The unique ID of the User
 * @member {Number} fkiUserIDCloning
 */
ClonehistoryListElement.prototype['fkiUserIDCloning'] = undefined;

/**
 * The unique ID of the User
 * @member {Number} fkiUserIDCloned
 */
ClonehistoryListElement.prototype['fkiUserIDCloned'] = undefined;

/**
 * The firsthit of the Clonehistory
 * @member {String} dtClonehistoryFirsthit
 */
ClonehistoryListElement.prototype['dtClonehistoryFirsthit'] = undefined;

/**
 * The lasthit of the Clonehistory
 * @member {String} dtClonehistoryLasthit
 */
ClonehistoryListElement.prototype['dtClonehistoryLasthit'] = undefined;

/**
 * The Login name of the User.
 * @member {String} sUserLoginnameCloning
 */
ClonehistoryListElement.prototype['sUserLoginnameCloning'] = undefined;

/**
 * The First name of the user
 * @member {String} sUserFirstnameCloning
 */
ClonehistoryListElement.prototype['sUserFirstnameCloning'] = undefined;

/**
 * The Last name of the user
 * @member {String} sUserLastnameCloning
 */
ClonehistoryListElement.prototype['sUserLastnameCloning'] = undefined;

/**
 * The Login name of the User.
 * @member {String} sUserLoginnameCloned
 */
ClonehistoryListElement.prototype['sUserLoginnameCloned'] = undefined;

/**
 * The First name of the user
 * @member {String} sUserFirstnameCloned
 */
ClonehistoryListElement.prototype['sUserFirstnameCloned'] = undefined;

/**
 * The Last name of the user
 * @member {String} sUserLastnameCloned
 */
ClonehistoryListElement.prototype['sUserLastnameCloned'] = undefined;






export default ClonehistoryListElement;

