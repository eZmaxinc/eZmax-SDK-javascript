/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FranchisebrokerAutocompleteElementResponse model module.
 * @module eZmaxAPI/model/FranchisebrokerAutocompleteElementResponse
 * @version 1.1.18
 */
class FranchisebrokerAutocompleteElementResponse {
    /**
     * Constructs a new <code>FranchisebrokerAutocompleteElementResponse</code>.
     * A Franchisebroker AutocompleteElement Response
     * @alias module:eZmaxAPI/model/FranchisebrokerAutocompleteElementResponse
     * @param sFranchisebrokerName {String} The name of the Franchisebroker in the language of the requester
     * @param pkiFranchisebrokerID {Number} The unique ID of the Franchisebroker
     * @param bFranchisebrokerIsactive {Boolean} Whether the Franchisebroker is active or not
     */
    constructor(sFranchisebrokerName, pkiFranchisebrokerID, bFranchisebrokerIsactive) { 
        
        FranchisebrokerAutocompleteElementResponse.initialize(this, sFranchisebrokerName, pkiFranchisebrokerID, bFranchisebrokerIsactive);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sFranchisebrokerName, pkiFranchisebrokerID, bFranchisebrokerIsactive) { 
        obj['sFranchisebrokerName'] = sFranchisebrokerName;
        obj['pkiFranchisebrokerID'] = pkiFranchisebrokerID;
        obj['bFranchisebrokerIsactive'] = bFranchisebrokerIsactive;
    }

    /**
     * Constructs a <code>FranchisebrokerAutocompleteElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/FranchisebrokerAutocompleteElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/FranchisebrokerAutocompleteElementResponse} The populated <code>FranchisebrokerAutocompleteElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FranchisebrokerAutocompleteElementResponse();

            if (data.hasOwnProperty('sFranchisebrokerName')) {
                obj['sFranchisebrokerName'] = ApiClient.convertToType(data['sFranchisebrokerName'], 'String');
            }
            if (data.hasOwnProperty('pkiFranchisebrokerID')) {
                obj['pkiFranchisebrokerID'] = ApiClient.convertToType(data['pkiFranchisebrokerID'], 'Number');
            }
            if (data.hasOwnProperty('bFranchisebrokerIsactive')) {
                obj['bFranchisebrokerIsactive'] = ApiClient.convertToType(data['bFranchisebrokerIsactive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FranchisebrokerAutocompleteElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FranchisebrokerAutocompleteElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FranchisebrokerAutocompleteElementResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sFranchisebrokerName'] && !(typeof data['sFranchisebrokerName'] === 'string' || data['sFranchisebrokerName'] instanceof String)) {
            throw new Error("Expected the field `sFranchisebrokerName` to be a primitive type in the JSON string but got " + data['sFranchisebrokerName']);
        }

        return true;
    }

/**
     * Returns The name of the Franchisebroker in the language of the requester
     * @return {String}
     */
    getSFranchisebrokerName() {
        return this.sFranchisebrokerName;
    }

    /**
     * Sets The name of the Franchisebroker in the language of the requester
     * @param {String} sFranchisebrokerName The name of the Franchisebroker in the language of the requester
     */
    setSFranchisebrokerName(sFranchisebrokerName) {
        this['sFranchisebrokerName'] = sFranchisebrokerName;
    }
/**
     * Returns The unique ID of the Franchisebroker
     * minimum: 0
     * @return {Number}
     */
    getPkiFranchisebrokerID() {
        return this.pkiFranchisebrokerID;
    }

    /**
     * Sets The unique ID of the Franchisebroker
     * @param {Number} pkiFranchisebrokerID The unique ID of the Franchisebroker
     */
    setPkiFranchisebrokerID(pkiFranchisebrokerID) {
        this['pkiFranchisebrokerID'] = pkiFranchisebrokerID;
    }
/**
     * Returns Whether the Franchisebroker is active or not
     * @return {Boolean}
     */
    getBFranchisebrokerIsactive() {
        return this.bFranchisebrokerIsactive;
    }

    /**
     * Sets Whether the Franchisebroker is active or not
     * @param {Boolean} bFranchisebrokerIsactive Whether the Franchisebroker is active or not
     */
    setBFranchisebrokerIsactive(bFranchisebrokerIsactive) {
        this['bFranchisebrokerIsactive'] = bFranchisebrokerIsactive;
    }

}

FranchisebrokerAutocompleteElementResponse.RequiredProperties = ["sFranchisebrokerName", "pkiFranchisebrokerID", "bFranchisebrokerIsactive"];

/**
 * The name of the Franchisebroker in the language of the requester
 * @member {String} sFranchisebrokerName
 */
FranchisebrokerAutocompleteElementResponse.prototype['sFranchisebrokerName'] = undefined;

/**
 * The unique ID of the Franchisebroker
 * @member {Number} pkiFranchisebrokerID
 */
FranchisebrokerAutocompleteElementResponse.prototype['pkiFranchisebrokerID'] = undefined;

/**
 * Whether the Franchisebroker is active or not
 * @member {Boolean} bFranchisebrokerIsactive
 */
FranchisebrokerAutocompleteElementResponse.prototype['bFranchisebrokerIsactive'] = undefined;






export default FranchisebrokerAutocompleteElementResponse;

