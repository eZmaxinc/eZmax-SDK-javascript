/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultilingualEzsignsigningreasonDescription model module.
 * @module eZmaxAPI/model/MultilingualEzsignsigningreasonDescription
 * @version 1.2.0
 */
class MultilingualEzsignsigningreasonDescription {
    /**
     * Constructs a new <code>MultilingualEzsignsigningreasonDescription</code>.
     * The description of the Ezsignsigningreason
     * @alias module:eZmaxAPI/model/MultilingualEzsignsigningreasonDescription
     */
    constructor() { 
        
        MultilingualEzsignsigningreasonDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultilingualEzsignsigningreasonDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/MultilingualEzsignsigningreasonDescription} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/MultilingualEzsignsigningreasonDescription} The populated <code>MultilingualEzsignsigningreasonDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultilingualEzsignsigningreasonDescription();

            if (data.hasOwnProperty('sEzsignsigningreasonDescription1')) {
                obj['sEzsignsigningreasonDescription1'] = ApiClient.convertToType(data['sEzsignsigningreasonDescription1'], 'String');
            }
            if (data.hasOwnProperty('sEzsignsigningreasonDescription2')) {
                obj['sEzsignsigningreasonDescription2'] = ApiClient.convertToType(data['sEzsignsigningreasonDescription2'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultilingualEzsignsigningreasonDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultilingualEzsignsigningreasonDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sEzsignsigningreasonDescription1'] && !(typeof data['sEzsignsigningreasonDescription1'] === 'string' || data['sEzsignsigningreasonDescription1'] instanceof String)) {
            throw new Error("Expected the field `sEzsignsigningreasonDescription1` to be a primitive type in the JSON string but got " + data['sEzsignsigningreasonDescription1']);
        }
        // ensure the json data is a string
        if (data['sEzsignsigningreasonDescription2'] && !(typeof data['sEzsignsigningreasonDescription2'] === 'string' || data['sEzsignsigningreasonDescription2'] instanceof String)) {
            throw new Error("Expected the field `sEzsignsigningreasonDescription2` to be a primitive type in the JSON string but got " + data['sEzsignsigningreasonDescription2']);
        }

        return true;
    }

/**
     * Returns The description of the Ezsignsigningreason in French
     * @return {String}
     */
    getSEzsignsigningreasonDescription1() {
        return this.sEzsignsigningreasonDescription1;
    }

    /**
     * Sets The description of the Ezsignsigningreason in French
     * @param {String} sEzsignsigningreasonDescription1 The description of the Ezsignsigningreason in French
     */
    setSEzsignsigningreasonDescription1(sEzsignsigningreasonDescription1) {
        this['sEzsignsigningreasonDescription1'] = sEzsignsigningreasonDescription1;
    }
/**
     * Returns The description of the Ezsignsigningreason in English
     * @return {String}
     */
    getSEzsignsigningreasonDescription2() {
        return this.sEzsignsigningreasonDescription2;
    }

    /**
     * Sets The description of the Ezsignsigningreason in English
     * @param {String} sEzsignsigningreasonDescription2 The description of the Ezsignsigningreason in English
     */
    setSEzsignsigningreasonDescription2(sEzsignsigningreasonDescription2) {
        this['sEzsignsigningreasonDescription2'] = sEzsignsigningreasonDescription2;
    }

}



/**
 * The description of the Ezsignsigningreason in French
 * @member {String} sEzsignsigningreasonDescription1
 */
MultilingualEzsignsigningreasonDescription.prototype['sEzsignsigningreasonDescription1'] = undefined;

/**
 * The description of the Ezsignsigningreason in English
 * @member {String} sEzsignsigningreasonDescription2
 */
MultilingualEzsignsigningreasonDescription.prototype['sEzsignsigningreasonDescription2'] = undefined;






export default MultilingualEzsignsigningreasonDescription;

