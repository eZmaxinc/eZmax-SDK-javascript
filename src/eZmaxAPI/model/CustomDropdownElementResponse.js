/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomDropdownElementResponse model module.
 * @module eZmaxAPI/model/CustomDropdownElementResponse
 * @version 1.2.0
 */
class CustomDropdownElementResponse {
    /**
     * Constructs a new <code>CustomDropdownElementResponse</code>.
     * Generic DropdownElement Response
     * @alias module:eZmaxAPI/model/CustomDropdownElementResponse
     * @param sLabel {String} The Description of the element
     * @param sValue {String} The Value of the element
     */
    constructor(sLabel, sValue) { 
        
        CustomDropdownElementResponse.initialize(this, sLabel, sValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sLabel, sValue) { 
        obj['sLabel'] = sLabel;
        obj['sValue'] = sValue;
    }

    /**
     * Constructs a <code>CustomDropdownElementResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CustomDropdownElementResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CustomDropdownElementResponse} The populated <code>CustomDropdownElementResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomDropdownElementResponse();

            if (data.hasOwnProperty('sLabel')) {
                obj['sLabel'] = ApiClient.convertToType(data['sLabel'], 'String');
            }
            if (data.hasOwnProperty('sValue')) {
                obj['sValue'] = ApiClient.convertToType(data['sValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomDropdownElementResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomDropdownElementResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomDropdownElementResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sLabel'] && !(typeof data['sLabel'] === 'string' || data['sLabel'] instanceof String)) {
            throw new Error("Expected the field `sLabel` to be a primitive type in the JSON string but got " + data['sLabel']);
        }
        // ensure the json data is a string
        if (data['sValue'] && !(typeof data['sValue'] === 'string' || data['sValue'] instanceof String)) {
            throw new Error("Expected the field `sValue` to be a primitive type in the JSON string but got " + data['sValue']);
        }

        return true;
    }

/**
     * Returns The Description of the element
     * @return {String}
     */
    getSLabel() {
        return this.sLabel;
    }

    /**
     * Sets The Description of the element
     * @param {String} sLabel The Description of the element
     */
    setSLabel(sLabel) {
        this['sLabel'] = sLabel;
    }
/**
     * Returns The Value of the element
     * @return {String}
     */
    getSValue() {
        return this.sValue;
    }

    /**
     * Sets The Value of the element
     * @param {String} sValue The Value of the element
     */
    setSValue(sValue) {
        this['sValue'] = sValue;
    }

}

CustomDropdownElementResponse.RequiredProperties = ["sLabel", "sValue"];

/**
 * The Description of the element
 * @member {String} sLabel
 */
CustomDropdownElementResponse.prototype['sLabel'] = undefined;

/**
 * The Value of the element
 * @member {String} sValue
 */
CustomDropdownElementResponse.prototype['sValue'] = undefined;






export default CustomDropdownElementResponse;

