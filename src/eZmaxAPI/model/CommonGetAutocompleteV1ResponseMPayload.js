/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommonGetAutocompleteV1ResponseMPayload model module.
 * @module eZmaxAPI/model/CommonGetAutocompleteV1ResponseMPayload
 * @version 1.0.28
 */
class CommonGetAutocompleteV1ResponseMPayload {
    /**
     * Constructs a new <code>CommonGetAutocompleteV1ResponseMPayload</code>.
     * Generic Autocomplete Response
     * @alias module:eZmaxAPI/model/CommonGetAutocompleteV1ResponseMPayload
     * @param group {String} The Category (ie group) for the dropdown or an empty string if not categorized
     * @param id {String} The Unique ID of the element
     * @param option {String} The Description of the element
     */
    constructor(group, id, option) { 
        
        CommonGetAutocompleteV1ResponseMPayload.initialize(this, group, id, option);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, group, id, option) { 
        obj['group'] = group;
        obj['id'] = id;
        obj['option'] = option;
    }

    /**
     * Constructs a <code>CommonGetAutocompleteV1ResponseMPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CommonGetAutocompleteV1ResponseMPayload} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CommonGetAutocompleteV1ResponseMPayload} The populated <code>CommonGetAutocompleteV1ResponseMPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonGetAutocompleteV1ResponseMPayload();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('option')) {
                obj['option'] = ApiClient.convertToType(data['option'], 'String');
            }
        }
        return obj;
    }

/**
     * Returns The Category (ie group) for the dropdown or an empty string if not categorized
     * @return {String}
     */
    getGroup() {
        return this.group;
    }

    /**
     * Sets The Category (ie group) for the dropdown or an empty string if not categorized
     * @param {String} group The Category (ie group) for the dropdown or an empty string if not categorized
     */
    setGroup(group) {
        this['group'] = group;
    }
/**
     * Returns The Unique ID of the element
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * Sets The Unique ID of the element
     * @param {String} id The Unique ID of the element
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * Returns The Description of the element
     * @return {String}
     */
    getOption() {
        return this.option;
    }

    /**
     * Sets The Description of the element
     * @param {String} option The Description of the element
     */
    setOption(option) {
        this['option'] = option;
    }

}

/**
 * The Category (ie group) for the dropdown or an empty string if not categorized
 * @member {String} group
 */
CommonGetAutocompleteV1ResponseMPayload.prototype['group'] = undefined;

/**
 * The Unique ID of the element
 * @member {String} id
 */
CommonGetAutocompleteV1ResponseMPayload.prototype['id'] = undefined;

/**
 * The Description of the element
 * @member {String} option
 */
CommonGetAutocompleteV1ResponseMPayload.prototype['option'] = undefined;






export default CommonGetAutocompleteV1ResponseMPayload;

