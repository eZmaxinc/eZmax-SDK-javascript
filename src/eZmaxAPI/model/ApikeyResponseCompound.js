/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApikeyResponse from './ApikeyResponse';
import CommonAudit from './CommonAudit';
import CustomContactNameResponse from './CustomContactNameResponse';
import MultilingualApikeyDescription from './MultilingualApikeyDescription';

/**
 * The ApikeyResponseCompound model module.
 * @module eZmaxAPI/model/ApikeyResponseCompound
 * @version 1.2.0
 */
class ApikeyResponseCompound {
    /**
     * Constructs a new <code>ApikeyResponseCompound</code>.
     * An Apikey Object and children to create a complete structure
     * @alias module:eZmaxAPI/model/ApikeyResponseCompound
     * @implements module:eZmaxAPI/model/ApikeyResponse
     * @param pkiApikeyID {Number} The unique ID of the Apikey
     * @param fkiUserID {Number} The unique ID of the User
     * @param objApikeyDescription {module:eZmaxAPI/model/MultilingualApikeyDescription} 
     * @param objContactName {module:eZmaxAPI/model/CustomContactNameResponse} 
     * @param bApikeyIsactive {Boolean} Whether the apikey is active or not
     * @param objAudit {module:eZmaxAPI/model/CommonAudit} 
     */
    constructor(pkiApikeyID, fkiUserID, objApikeyDescription, objContactName, bApikeyIsactive, objAudit) { 
        ApikeyResponse.initialize(this, pkiApikeyID, fkiUserID, objApikeyDescription, objContactName, bApikeyIsactive, objAudit);
        ApikeyResponseCompound.initialize(this, pkiApikeyID, fkiUserID, objApikeyDescription, objContactName, bApikeyIsactive, objAudit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiApikeyID, fkiUserID, objApikeyDescription, objContactName, bApikeyIsactive, objAudit) { 
        obj['pkiApikeyID'] = pkiApikeyID;
        obj['fkiUserID'] = fkiUserID;
        obj['objApikeyDescription'] = objApikeyDescription;
        obj['objContactName'] = objContactName;
        obj['bApikeyIsactive'] = bApikeyIsactive;
        obj['objAudit'] = objAudit;
    }

    /**
     * Constructs a <code>ApikeyResponseCompound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/ApikeyResponseCompound} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/ApikeyResponseCompound} The populated <code>ApikeyResponseCompound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApikeyResponseCompound();
            ApikeyResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('pkiApikeyID')) {
                obj['pkiApikeyID'] = ApiClient.convertToType(data['pkiApikeyID'], 'Number');
            }
            if (data.hasOwnProperty('fkiUserID')) {
                obj['fkiUserID'] = ApiClient.convertToType(data['fkiUserID'], 'Number');
            }
            if (data.hasOwnProperty('objApikeyDescription')) {
                obj['objApikeyDescription'] = MultilingualApikeyDescription.constructFromObject(data['objApikeyDescription']);
            }
            if (data.hasOwnProperty('objContactName')) {
                obj['objContactName'] = CustomContactNameResponse.constructFromObject(data['objContactName']);
            }
            if (data.hasOwnProperty('sApikeyApikey')) {
                obj['sApikeyApikey'] = ApiClient.convertToType(data['sApikeyApikey'], 'String');
            }
            if (data.hasOwnProperty('sApikeySecret')) {
                obj['sApikeySecret'] = ApiClient.convertToType(data['sApikeySecret'], 'String');
            }
            if (data.hasOwnProperty('bApikeyIsactive')) {
                obj['bApikeyIsactive'] = ApiClient.convertToType(data['bApikeyIsactive'], 'Boolean');
            }
            if (data.hasOwnProperty('bApikeyIssigned')) {
                obj['bApikeyIssigned'] = ApiClient.convertToType(data['bApikeyIssigned'], 'Boolean');
            }
            if (data.hasOwnProperty('objAudit')) {
                obj['objAudit'] = CommonAudit.constructFromObject(data['objAudit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApikeyResponseCompound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApikeyResponseCompound</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApikeyResponseCompound.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `objApikeyDescription`
        if (data['objApikeyDescription']) { // data not null
          MultilingualApikeyDescription.validateJSON(data['objApikeyDescription']);
        }
        // validate the optional field `objContactName`
        if (data['objContactName']) { // data not null
          CustomContactNameResponse.validateJSON(data['objContactName']);
        }
        // ensure the json data is a string
        if (data['sApikeyApikey'] && !(typeof data['sApikeyApikey'] === 'string' || data['sApikeyApikey'] instanceof String)) {
            throw new Error("Expected the field `sApikeyApikey` to be a primitive type in the JSON string but got " + data['sApikeyApikey']);
        }
        // ensure the json data is a string
        if (data['sApikeySecret'] && !(typeof data['sApikeySecret'] === 'string' || data['sApikeySecret'] instanceof String)) {
            throw new Error("Expected the field `sApikeySecret` to be a primitive type in the JSON string but got " + data['sApikeySecret']);
        }
        // validate the optional field `objAudit`
        if (data['objAudit']) { // data not null
          CommonAudit.validateJSON(data['objAudit']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Apikey
     * minimum: 0
     * @return {Number}
     */
    getPkiApikeyID() {
        return this.pkiApikeyID;
    }

    /**
     * Sets The unique ID of the Apikey
     * @param {Number} pkiApikeyID The unique ID of the Apikey
     */
    setPkiApikeyID(pkiApikeyID) {
        this['pkiApikeyID'] = pkiApikeyID;
    }
/**
     * Returns The unique ID of the User
     * minimum: 0
     * @return {Number}
     */
    getFkiUserID() {
        return this.fkiUserID;
    }

    /**
     * Sets The unique ID of the User
     * @param {Number} fkiUserID The unique ID of the User
     */
    setFkiUserID(fkiUserID) {
        this['fkiUserID'] = fkiUserID;
    }
/**
     * @return {module:eZmaxAPI/model/MultilingualApikeyDescription}
     */
    getObjApikeyDescription() {
        return this.objApikeyDescription;
    }

    /**
     * @param {module:eZmaxAPI/model/MultilingualApikeyDescription} objApikeyDescription
     */
    setObjApikeyDescription(objApikeyDescription) {
        this['objApikeyDescription'] = objApikeyDescription;
    }
/**
     * @return {module:eZmaxAPI/model/CustomContactNameResponse}
     */
    getObjContactName() {
        return this.objContactName;
    }

    /**
     * @param {module:eZmaxAPI/model/CustomContactNameResponse} objContactName
     */
    setObjContactName(objContactName) {
        this['objContactName'] = objContactName;
    }
/**
     * Returns The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @return {String}
     */
    getSApikeyApikey() {
        return this.sApikeyApikey;
    }

    /**
     * Sets The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @param {String} sApikeyApikey The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     */
    setSApikeyApikey(sApikeyApikey) {
        this['sApikeyApikey'] = sApikeyApikey;
    }
/**
     * Returns The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @return {String}
     */
    getSApikeySecret() {
        return this.sApikeySecret;
    }

    /**
     * Sets The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     * @param {String} sApikeySecret The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
     */
    setSApikeySecret(sApikeySecret) {
        this['sApikeySecret'] = sApikeySecret;
    }
/**
     * Returns Whether the apikey is active or not
     * @return {Boolean}
     */
    getBApikeyIsactive() {
        return this.bApikeyIsactive;
    }

    /**
     * Sets Whether the apikey is active or not
     * @param {Boolean} bApikeyIsactive Whether the apikey is active or not
     */
    setBApikeyIsactive(bApikeyIsactive) {
        this['bApikeyIsactive'] = bApikeyIsactive;
    }
/**
     * Returns Whether the apikey is signed or not
     * @return {Boolean}
     */
    getBApikeyIssigned() {
        return this.bApikeyIssigned;
    }

    /**
     * Sets Whether the apikey is signed or not
     * @param {Boolean} bApikeyIssigned Whether the apikey is signed or not
     */
    setBApikeyIssigned(bApikeyIssigned) {
        this['bApikeyIssigned'] = bApikeyIssigned;
    }
/**
     * @return {module:eZmaxAPI/model/CommonAudit}
     */
    getObjAudit() {
        return this.objAudit;
    }

    /**
     * @param {module:eZmaxAPI/model/CommonAudit} objAudit
     */
    setObjAudit(objAudit) {
        this['objAudit'] = objAudit;
    }

}

ApikeyResponseCompound.RequiredProperties = ["pkiApikeyID", "fkiUserID", "objApikeyDescription", "objContactName", "bApikeyIsactive", "objAudit"];

/**
 * The unique ID of the Apikey
 * @member {Number} pkiApikeyID
 */
ApikeyResponseCompound.prototype['pkiApikeyID'] = undefined;

/**
 * The unique ID of the User
 * @member {Number} fkiUserID
 */
ApikeyResponseCompound.prototype['fkiUserID'] = undefined;

/**
 * @member {module:eZmaxAPI/model/MultilingualApikeyDescription} objApikeyDescription
 */
ApikeyResponseCompound.prototype['objApikeyDescription'] = undefined;

/**
 * @member {module:eZmaxAPI/model/CustomContactNameResponse} objContactName
 */
ApikeyResponseCompound.prototype['objContactName'] = undefined;

/**
 * The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sApikeyApikey
 */
ApikeyResponseCompound.prototype['sApikeyApikey'] = undefined;

/**
 * The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sApikeySecret
 */
ApikeyResponseCompound.prototype['sApikeySecret'] = undefined;

/**
 * Whether the apikey is active or not
 * @member {Boolean} bApikeyIsactive
 */
ApikeyResponseCompound.prototype['bApikeyIsactive'] = undefined;

/**
 * Whether the apikey is signed or not
 * @member {Boolean} bApikeyIssigned
 */
ApikeyResponseCompound.prototype['bApikeyIssigned'] = undefined;

/**
 * @member {module:eZmaxAPI/model/CommonAudit} objAudit
 */
ApikeyResponseCompound.prototype['objAudit'] = undefined;


// Implement ApikeyResponse interface:
/**
 * The unique ID of the Apikey
 * @member {Number} pkiApikeyID
 */
ApikeyResponse.prototype['pkiApikeyID'] = undefined;
/**
 * The unique ID of the User
 * @member {Number} fkiUserID
 */
ApikeyResponse.prototype['fkiUserID'] = undefined;
/**
 * @member {module:eZmaxAPI/model/MultilingualApikeyDescription} objApikeyDescription
 */
ApikeyResponse.prototype['objApikeyDescription'] = undefined;
/**
 * @member {module:eZmaxAPI/model/CustomContactNameResponse} objContactName
 */
ApikeyResponse.prototype['objContactName'] = undefined;
/**
 * The Apikey for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sApikeyApikey
 */
ApikeyResponse.prototype['sApikeyApikey'] = undefined;
/**
 * The Secret for the API key.  This will be hidden if we are not creating or regenerating the Apikey.
 * @member {String} sApikeySecret
 */
ApikeyResponse.prototype['sApikeySecret'] = undefined;
/**
 * Whether the apikey is active or not
 * @member {Boolean} bApikeyIsactive
 */
ApikeyResponse.prototype['bApikeyIsactive'] = undefined;
/**
 * Whether the apikey is signed or not
 * @member {Boolean} bApikeyIssigned
 */
ApikeyResponse.prototype['bApikeyIssigned'] = undefined;
/**
 * @member {module:eZmaxAPI/model/CommonAudit} objAudit
 */
ApikeyResponse.prototype['objAudit'] = undefined;




export default ApikeyResponseCompound;

