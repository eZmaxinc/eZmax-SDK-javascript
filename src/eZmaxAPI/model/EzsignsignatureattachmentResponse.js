/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EzsignsignatureattachmentResponse model module.
 * @module eZmaxAPI/model/EzsignsignatureattachmentResponse
 * @version 1.2.0
 */
class EzsignsignatureattachmentResponse {
    /**
     * Constructs a new <code>EzsignsignatureattachmentResponse</code>.
     * An Ezsignsignatureattachment Object
     * @alias module:eZmaxAPI/model/EzsignsignatureattachmentResponse
     * @param pkiEzsignsignatureattachmentID {Number} The unique ID of the Ezsignsignatureattachment
     * @param fkiEzsignsignatureID {Number} The unique ID of the Ezsignsignature
     * @param binEzsignsignatureattachmentMD5 {String} The md5 of the Ezsignsignatureattachment
     * @param sEzsignsignatureattachmentName {String} The name of the Ezsignsignatureattachment
     * @param sDownloadUrl {String} The Url to the requested document.  Url will expire after 3 hours.
     */
    constructor(pkiEzsignsignatureattachmentID, fkiEzsignsignatureID, binEzsignsignatureattachmentMD5, sEzsignsignatureattachmentName, sDownloadUrl) { 
        
        EzsignsignatureattachmentResponse.initialize(this, pkiEzsignsignatureattachmentID, fkiEzsignsignatureID, binEzsignsignatureattachmentMD5, sEzsignsignatureattachmentName, sDownloadUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiEzsignsignatureattachmentID, fkiEzsignsignatureID, binEzsignsignatureattachmentMD5, sEzsignsignatureattachmentName, sDownloadUrl) { 
        obj['pkiEzsignsignatureattachmentID'] = pkiEzsignsignatureattachmentID;
        obj['fkiEzsignsignatureID'] = fkiEzsignsignatureID;
        obj['binEzsignsignatureattachmentMD5'] = binEzsignsignatureattachmentMD5;
        obj['sEzsignsignatureattachmentName'] = sEzsignsignatureattachmentName;
        obj['sDownloadUrl'] = sDownloadUrl;
    }

    /**
     * Constructs a <code>EzsignsignatureattachmentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsignsignatureattachmentResponse} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsignsignatureattachmentResponse} The populated <code>EzsignsignatureattachmentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsignsignatureattachmentResponse();

            if (data.hasOwnProperty('pkiEzsignsignatureattachmentID')) {
                obj['pkiEzsignsignatureattachmentID'] = ApiClient.convertToType(data['pkiEzsignsignatureattachmentID'], 'Number');
            }
            if (data.hasOwnProperty('fkiEzsignsignatureID')) {
                obj['fkiEzsignsignatureID'] = ApiClient.convertToType(data['fkiEzsignsignatureID'], 'Number');
            }
            if (data.hasOwnProperty('binEzsignsignatureattachmentMD5')) {
                obj['binEzsignsignatureattachmentMD5'] = ApiClient.convertToType(data['binEzsignsignatureattachmentMD5'], 'String');
            }
            if (data.hasOwnProperty('sEzsignsignatureattachmentName')) {
                obj['sEzsignsignatureattachmentName'] = ApiClient.convertToType(data['sEzsignsignatureattachmentName'], 'String');
            }
            if (data.hasOwnProperty('sDownloadUrl')) {
                obj['sDownloadUrl'] = ApiClient.convertToType(data['sDownloadUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsignsignatureattachmentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsignsignatureattachmentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsignsignatureattachmentResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['binEzsignsignatureattachmentMD5'] && !(typeof data['binEzsignsignatureattachmentMD5'] === 'string' || data['binEzsignsignatureattachmentMD5'] instanceof String)) {
            throw new Error("Expected the field `binEzsignsignatureattachmentMD5` to be a primitive type in the JSON string but got " + data['binEzsignsignatureattachmentMD5']);
        }
        // ensure the json data is a string
        if (data['sEzsignsignatureattachmentName'] && !(typeof data['sEzsignsignatureattachmentName'] === 'string' || data['sEzsignsignatureattachmentName'] instanceof String)) {
            throw new Error("Expected the field `sEzsignsignatureattachmentName` to be a primitive type in the JSON string but got " + data['sEzsignsignatureattachmentName']);
        }
        // ensure the json data is a string
        if (data['sDownloadUrl'] && !(typeof data['sDownloadUrl'] === 'string' || data['sDownloadUrl'] instanceof String)) {
            throw new Error("Expected the field `sDownloadUrl` to be a primitive type in the JSON string but got " + data['sDownloadUrl']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Ezsignsignatureattachment
     * minimum: 1
     * maximum: 16777215
     * @return {Number}
     */
    getPkiEzsignsignatureattachmentID() {
        return this.pkiEzsignsignatureattachmentID;
    }

    /**
     * Sets The unique ID of the Ezsignsignatureattachment
     * @param {Number} pkiEzsignsignatureattachmentID The unique ID of the Ezsignsignatureattachment
     */
    setPkiEzsignsignatureattachmentID(pkiEzsignsignatureattachmentID) {
        this['pkiEzsignsignatureattachmentID'] = pkiEzsignsignatureattachmentID;
    }
/**
     * Returns The unique ID of the Ezsignsignature
     * minimum: 0
     * @return {Number}
     */
    getFkiEzsignsignatureID() {
        return this.fkiEzsignsignatureID;
    }

    /**
     * Sets The unique ID of the Ezsignsignature
     * @param {Number} fkiEzsignsignatureID The unique ID of the Ezsignsignature
     */
    setFkiEzsignsignatureID(fkiEzsignsignatureID) {
        this['fkiEzsignsignatureID'] = fkiEzsignsignatureID;
    }
/**
     * Returns The md5 of the Ezsignsignatureattachment
     * @return {String}
     */
    getBinEzsignsignatureattachmentMD5() {
        return this.binEzsignsignatureattachmentMD5;
    }

    /**
     * Sets The md5 of the Ezsignsignatureattachment
     * @param {String} binEzsignsignatureattachmentMD5 The md5 of the Ezsignsignatureattachment
     */
    setBinEzsignsignatureattachmentMD5(binEzsignsignatureattachmentMD5) {
        this['binEzsignsignatureattachmentMD5'] = binEzsignsignatureattachmentMD5;
    }
/**
     * Returns The name of the Ezsignsignatureattachment
     * @return {String}
     */
    getSEzsignsignatureattachmentName() {
        return this.sEzsignsignatureattachmentName;
    }

    /**
     * Sets The name of the Ezsignsignatureattachment
     * @param {String} sEzsignsignatureattachmentName The name of the Ezsignsignatureattachment
     */
    setSEzsignsignatureattachmentName(sEzsignsignatureattachmentName) {
        this['sEzsignsignatureattachmentName'] = sEzsignsignatureattachmentName;
    }
/**
     * Returns The Url to the requested document.  Url will expire after 3 hours.
     * @return {String}
     */
    getSDownloadUrl() {
        return this.sDownloadUrl;
    }

    /**
     * Sets The Url to the requested document.  Url will expire after 3 hours.
     * @param {String} sDownloadUrl The Url to the requested document.  Url will expire after 3 hours.
     */
    setSDownloadUrl(sDownloadUrl) {
        this['sDownloadUrl'] = sDownloadUrl;
    }

}

EzsignsignatureattachmentResponse.RequiredProperties = ["pkiEzsignsignatureattachmentID", "fkiEzsignsignatureID", "binEzsignsignatureattachmentMD5", "sEzsignsignatureattachmentName", "sDownloadUrl"];

/**
 * The unique ID of the Ezsignsignatureattachment
 * @member {Number} pkiEzsignsignatureattachmentID
 */
EzsignsignatureattachmentResponse.prototype['pkiEzsignsignatureattachmentID'] = undefined;

/**
 * The unique ID of the Ezsignsignature
 * @member {Number} fkiEzsignsignatureID
 */
EzsignsignatureattachmentResponse.prototype['fkiEzsignsignatureID'] = undefined;

/**
 * The md5 of the Ezsignsignatureattachment
 * @member {String} binEzsignsignatureattachmentMD5
 */
EzsignsignatureattachmentResponse.prototype['binEzsignsignatureattachmentMD5'] = undefined;

/**
 * The name of the Ezsignsignatureattachment
 * @member {String} sEzsignsignatureattachmentName
 */
EzsignsignatureattachmentResponse.prototype['sEzsignsignatureattachmentName'] = undefined;

/**
 * The Url to the requested document.  Url will expire after 3 hours.
 * @member {String} sDownloadUrl
 */
EzsignsignatureattachmentResponse.prototype['sDownloadUrl'] = undefined;






export default EzsignsignatureattachmentResponse;

