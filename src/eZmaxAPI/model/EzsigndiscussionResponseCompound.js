/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiscussionResponseCompound from './DiscussionResponseCompound';
import EzsigndiscussionResponse from './EzsigndiscussionResponse';

/**
 * The EzsigndiscussionResponseCompound model module.
 * @module eZmaxAPI/model/EzsigndiscussionResponseCompound
 * @version 1.2.0
 */
class EzsigndiscussionResponseCompound {
    /**
     * Constructs a new <code>EzsigndiscussionResponseCompound</code>.
     * A Ezsigndiscussion Object
     * @alias module:eZmaxAPI/model/EzsigndiscussionResponseCompound
     * @implements module:eZmaxAPI/model/EzsigndiscussionResponse
     * @param pkiEzsigndiscussionID {Number} The unique ID of the Ezsigndiscussion
     * @param fkiEzsignpageID {Number} The unique ID of the Ezsignpage
     * @param fkiDiscussionID {Number} The unique ID of the Discussion
     * @param iEzsigndiscussionX {Number} The x of the Ezsigndiscussion
     * @param iEzsigndiscussionY {Number} The y of the Ezsigndiscussion
     * @param iEzsigndiscussionPagenumber {Number} The page number in the Ezsigndocument for the Ezsigndiscussion
     * @param objDiscussion {module:eZmaxAPI/model/DiscussionResponseCompound} 
     */
    constructor(pkiEzsigndiscussionID, fkiEzsignpageID, fkiDiscussionID, iEzsigndiscussionX, iEzsigndiscussionY, iEzsigndiscussionPagenumber, objDiscussion) { 
        EzsigndiscussionResponse.initialize(this, pkiEzsigndiscussionID, fkiEzsignpageID, fkiDiscussionID, iEzsigndiscussionX, iEzsigndiscussionY, iEzsigndiscussionPagenumber, objDiscussion);
        EzsigndiscussionResponseCompound.initialize(this, pkiEzsigndiscussionID, fkiEzsignpageID, fkiDiscussionID, iEzsigndiscussionX, iEzsigndiscussionY, iEzsigndiscussionPagenumber, objDiscussion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pkiEzsigndiscussionID, fkiEzsignpageID, fkiDiscussionID, iEzsigndiscussionX, iEzsigndiscussionY, iEzsigndiscussionPagenumber, objDiscussion) { 
        obj['pkiEzsigndiscussionID'] = pkiEzsigndiscussionID;
        obj['fkiEzsignpageID'] = fkiEzsignpageID;
        obj['fkiDiscussionID'] = fkiDiscussionID;
        obj['iEzsigndiscussionX'] = iEzsigndiscussionX;
        obj['iEzsigndiscussionY'] = iEzsigndiscussionY;
        obj['iEzsigndiscussionPagenumber'] = iEzsigndiscussionPagenumber;
        obj['objDiscussion'] = objDiscussion;
    }

    /**
     * Constructs a <code>EzsigndiscussionResponseCompound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/EzsigndiscussionResponseCompound} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/EzsigndiscussionResponseCompound} The populated <code>EzsigndiscussionResponseCompound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EzsigndiscussionResponseCompound();
            EzsigndiscussionResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('pkiEzsigndiscussionID')) {
                obj['pkiEzsigndiscussionID'] = ApiClient.convertToType(data['pkiEzsigndiscussionID'], 'Number');
            }
            if (data.hasOwnProperty('fkiEzsignpageID')) {
                obj['fkiEzsignpageID'] = ApiClient.convertToType(data['fkiEzsignpageID'], 'Number');
            }
            if (data.hasOwnProperty('fkiDiscussionID')) {
                obj['fkiDiscussionID'] = ApiClient.convertToType(data['fkiDiscussionID'], 'Number');
            }
            if (data.hasOwnProperty('iEzsigndiscussionX')) {
                obj['iEzsigndiscussionX'] = ApiClient.convertToType(data['iEzsigndiscussionX'], 'Number');
            }
            if (data.hasOwnProperty('iEzsigndiscussionY')) {
                obj['iEzsigndiscussionY'] = ApiClient.convertToType(data['iEzsigndiscussionY'], 'Number');
            }
            if (data.hasOwnProperty('iEzsigndiscussionPagenumber')) {
                obj['iEzsigndiscussionPagenumber'] = ApiClient.convertToType(data['iEzsigndiscussionPagenumber'], 'Number');
            }
            if (data.hasOwnProperty('objDiscussion')) {
                obj['objDiscussion'] = DiscussionResponseCompound.constructFromObject(data['objDiscussion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EzsigndiscussionResponseCompound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EzsigndiscussionResponseCompound</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EzsigndiscussionResponseCompound.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `objDiscussion`
        if (data['objDiscussion']) { // data not null
          DiscussionResponseCompound.validateJSON(data['objDiscussion']);
        }

        return true;
    }

/**
     * Returns The unique ID of the Ezsigndiscussion
     * minimum: 0
     * maximum: 16777215
     * @return {Number}
     */
    getPkiEzsigndiscussionID() {
        return this.pkiEzsigndiscussionID;
    }

    /**
     * Sets The unique ID of the Ezsigndiscussion
     * @param {Number} pkiEzsigndiscussionID The unique ID of the Ezsigndiscussion
     */
    setPkiEzsigndiscussionID(pkiEzsigndiscussionID) {
        this['pkiEzsigndiscussionID'] = pkiEzsigndiscussionID;
    }
/**
     * Returns The unique ID of the Ezsignpage
     * minimum: 0
     * @return {Number}
     */
    getFkiEzsignpageID() {
        return this.fkiEzsignpageID;
    }

    /**
     * Sets The unique ID of the Ezsignpage
     * @param {Number} fkiEzsignpageID The unique ID of the Ezsignpage
     */
    setFkiEzsignpageID(fkiEzsignpageID) {
        this['fkiEzsignpageID'] = fkiEzsignpageID;
    }
/**
     * Returns The unique ID of the Discussion
     * minimum: 0
     * maximum: 16777215
     * @return {Number}
     */
    getFkiDiscussionID() {
        return this.fkiDiscussionID;
    }

    /**
     * Sets The unique ID of the Discussion
     * @param {Number} fkiDiscussionID The unique ID of the Discussion
     */
    setFkiDiscussionID(fkiDiscussionID) {
        this['fkiDiscussionID'] = fkiDiscussionID;
    }
/**
     * Returns The x of the Ezsigndiscussion
     * minimum: 0
     * maximum: 65535
     * @return {Number}
     */
    getIEzsigndiscussionX() {
        return this.iEzsigndiscussionX;
    }

    /**
     * Sets The x of the Ezsigndiscussion
     * @param {Number} iEzsigndiscussionX The x of the Ezsigndiscussion
     */
    setIEzsigndiscussionX(iEzsigndiscussionX) {
        this['iEzsigndiscussionX'] = iEzsigndiscussionX;
    }
/**
     * Returns The y of the Ezsigndiscussion
     * minimum: 0
     * maximum: 65535
     * @return {Number}
     */
    getIEzsigndiscussionY() {
        return this.iEzsigndiscussionY;
    }

    /**
     * Sets The y of the Ezsigndiscussion
     * @param {Number} iEzsigndiscussionY The y of the Ezsigndiscussion
     */
    setIEzsigndiscussionY(iEzsigndiscussionY) {
        this['iEzsigndiscussionY'] = iEzsigndiscussionY;
    }
/**
     * Returns The page number in the Ezsigndocument for the Ezsigndiscussion
     * @return {Number}
     */
    getIEzsigndiscussionPagenumber() {
        return this.iEzsigndiscussionPagenumber;
    }

    /**
     * Sets The page number in the Ezsigndocument for the Ezsigndiscussion
     * @param {Number} iEzsigndiscussionPagenumber The page number in the Ezsigndocument for the Ezsigndiscussion
     */
    setIEzsigndiscussionPagenumber(iEzsigndiscussionPagenumber) {
        this['iEzsigndiscussionPagenumber'] = iEzsigndiscussionPagenumber;
    }
/**
     * @return {module:eZmaxAPI/model/DiscussionResponseCompound}
     */
    getObjDiscussion() {
        return this.objDiscussion;
    }

    /**
     * @param {module:eZmaxAPI/model/DiscussionResponseCompound} objDiscussion
     */
    setObjDiscussion(objDiscussion) {
        this['objDiscussion'] = objDiscussion;
    }

}

EzsigndiscussionResponseCompound.RequiredProperties = ["pkiEzsigndiscussionID", "fkiEzsignpageID", "fkiDiscussionID", "iEzsigndiscussionX", "iEzsigndiscussionY", "iEzsigndiscussionPagenumber", "objDiscussion"];

/**
 * The unique ID of the Ezsigndiscussion
 * @member {Number} pkiEzsigndiscussionID
 */
EzsigndiscussionResponseCompound.prototype['pkiEzsigndiscussionID'] = undefined;

/**
 * The unique ID of the Ezsignpage
 * @member {Number} fkiEzsignpageID
 */
EzsigndiscussionResponseCompound.prototype['fkiEzsignpageID'] = undefined;

/**
 * The unique ID of the Discussion
 * @member {Number} fkiDiscussionID
 */
EzsigndiscussionResponseCompound.prototype['fkiDiscussionID'] = undefined;

/**
 * The x of the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionX
 */
EzsigndiscussionResponseCompound.prototype['iEzsigndiscussionX'] = undefined;

/**
 * The y of the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionY
 */
EzsigndiscussionResponseCompound.prototype['iEzsigndiscussionY'] = undefined;

/**
 * The page number in the Ezsigndocument for the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionPagenumber
 */
EzsigndiscussionResponseCompound.prototype['iEzsigndiscussionPagenumber'] = undefined;

/**
 * @member {module:eZmaxAPI/model/DiscussionResponseCompound} objDiscussion
 */
EzsigndiscussionResponseCompound.prototype['objDiscussion'] = undefined;


// Implement EzsigndiscussionResponse interface:
/**
 * The unique ID of the Ezsigndiscussion
 * @member {Number} pkiEzsigndiscussionID
 */
EzsigndiscussionResponse.prototype['pkiEzsigndiscussionID'] = undefined;
/**
 * The unique ID of the Ezsignpage
 * @member {Number} fkiEzsignpageID
 */
EzsigndiscussionResponse.prototype['fkiEzsignpageID'] = undefined;
/**
 * The unique ID of the Discussion
 * @member {Number} fkiDiscussionID
 */
EzsigndiscussionResponse.prototype['fkiDiscussionID'] = undefined;
/**
 * The x of the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionX
 */
EzsigndiscussionResponse.prototype['iEzsigndiscussionX'] = undefined;
/**
 * The y of the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionY
 */
EzsigndiscussionResponse.prototype['iEzsigndiscussionY'] = undefined;
/**
 * The page number in the Ezsigndocument for the Ezsigndiscussion
 * @member {Number} iEzsigndiscussionPagenumber
 */
EzsigndiscussionResponse.prototype['iEzsigndiscussionPagenumber'] = undefined;
/**
 * @member {module:eZmaxAPI/model/DiscussionResponseCompound} objDiscussion
 */
EzsigndiscussionResponse.prototype['objDiscussion'] = undefined;




export default EzsigndiscussionResponseCompound;

