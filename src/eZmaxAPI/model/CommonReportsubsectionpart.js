/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonReportrow from './CommonReportrow';

/**
 * The CommonReportsubsectionpart model module.
 * @module eZmaxAPI/model/CommonReportsubsectionpart
 * @version 1.1.18
 */
class CommonReportsubsectionpart {
    /**
     * Constructs a new <code>CommonReportsubsectionpart</code>.
     * A part in the Reportsubsection 
     * @alias module:eZmaxAPI/model/CommonReportsubsectionpart
     * @param eReportsubsectionpartType {module:eZmaxAPI/model/CommonReportsubsectionpart.EReportsubsectionpartTypeEnum} The type of the Reportsubsectionpart
     * @param a_objReportrow {Array.<module:eZmaxAPI/model/CommonReportrow>} 
     */
    constructor(eReportsubsectionpartType, a_objReportrow) { 
        
        CommonReportsubsectionpart.initialize(this, eReportsubsectionpartType, a_objReportrow);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eReportsubsectionpartType, a_objReportrow) { 
        obj['eReportsubsectionpartType'] = eReportsubsectionpartType;
        obj['a_objReportrow'] = a_objReportrow;
    }

    /**
     * Constructs a <code>CommonReportsubsectionpart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:eZmaxAPI/model/CommonReportsubsectionpart} obj Optional instance to populate.
     * @return {module:eZmaxAPI/model/CommonReportsubsectionpart} The populated <code>CommonReportsubsectionpart</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonReportsubsectionpart();

            if (data.hasOwnProperty('eReportsubsectionpartType')) {
                obj['eReportsubsectionpartType'] = ApiClient.convertToType(data['eReportsubsectionpartType'], 'String');
            }
            if (data.hasOwnProperty('a_objReportrow')) {
                obj['a_objReportrow'] = ApiClient.convertToType(data['a_objReportrow'], [CommonReportrow]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonReportsubsectionpart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonReportsubsectionpart</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CommonReportsubsectionpart.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['eReportsubsectionpartType'] && !(typeof data['eReportsubsectionpartType'] === 'string' || data['eReportsubsectionpartType'] instanceof String)) {
            throw new Error("Expected the field `eReportsubsectionpartType` to be a primitive type in the JSON string but got " + data['eReportsubsectionpartType']);
        }
        if (data['a_objReportrow']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['a_objReportrow'])) {
                throw new Error("Expected the field `a_objReportrow` to be an array in the JSON data but got " + data['a_objReportrow']);
            }
            // validate the optional field `a_objReportrow` (array)
            for (const item of data['a_objReportrow']) {
                CommonReportrow.validateJSON(item);
            };
        }

        return true;
    }

/**
     * Returns The type of the Reportsubsectionpart
     * @return {module:eZmaxAPI/model/CommonReportsubsectionpart.EReportsubsectionpartTypeEnum}
     */
    getEReportsubsectionpartType() {
        return this.eReportsubsectionpartType;
    }

    /**
     * Sets The type of the Reportsubsectionpart
     * @param {module:eZmaxAPI/model/CommonReportsubsectionpart.EReportsubsectionpartTypeEnum} eReportsubsectionpartType The type of the Reportsubsectionpart
     */
    setEReportsubsectionpartType(eReportsubsectionpartType) {
        this['eReportsubsectionpartType'] = eReportsubsectionpartType;
    }
/**
     * @return {Array.<module:eZmaxAPI/model/CommonReportrow>}
     */
    getAObjReportrow() {
        return this.a_objReportrow;
    }

    /**
     * @param {Array.<module:eZmaxAPI/model/CommonReportrow>} a_objReportrow
     */
    setAObjReportrow(a_objReportrow) {
        this['a_objReportrow'] = a_objReportrow;
    }

}

CommonReportsubsectionpart.RequiredProperties = ["eReportsubsectionpartType", "a_objReportrow"];

/**
 * The type of the Reportsubsectionpart
 * @member {module:eZmaxAPI/model/CommonReportsubsectionpart.EReportsubsectionpartTypeEnum} eReportsubsectionpartType
 */
CommonReportsubsectionpart.prototype['eReportsubsectionpartType'] = undefined;

/**
 * @member {Array.<module:eZmaxAPI/model/CommonReportrow>} a_objReportrow
 */
CommonReportsubsectionpart.prototype['a_objReportrow'] = undefined;





/**
 * Allowed values for the <code>eReportsubsectionpartType</code> property.
 * @enum {String}
 * @readonly
 */
CommonReportsubsectionpart['EReportsubsectionpartTypeEnum'] = {

    /**
     * value: "Header"
     * @const
     */
    "Header": "Header",

    /**
     * value: "Body"
     * @const
     */
    "Body": "Body",

    /**
     * value: "Footer"
     * @const
     */
    "Footer": "Footer"
};



export default CommonReportsubsectionpart;

