/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.29
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import GlobalCustomerGetEndpointV1Response from '../model/GlobalCustomerGetEndpointV1Response';

/**
* GlobalCustomer service.
* @module eZmaxAPI/api/GlobalCustomerApi
* @version 1.0.29
*/
export default class GlobalCustomerApi {

    /**
    * Constructs a new GlobalCustomerApi. 
    * @alias module:eZmaxAPI/api/GlobalCustomerApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the globalCustomerGetEndpointV1 operation.
     * @callback module:eZmaxAPI/api/GlobalCustomerApi~globalCustomerGetEndpointV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/GlobalCustomerGetEndpointV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get customer endpoint
     * Retrieve the customer's specific server endpoint where to send requests. This will help locate the proper region (ie: sInfrastructureregionCode) and the proper environment (ie: sInfrastructureenvironmenttypeDescription) where the customer's data is stored.
     * @param {String} pksCustomerCode The customer code assigned to your account
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} opts.sInfrastructureproductCode The infrastructure product Code  If undefined, \"appcluster01\" is assumed
     * @param {module:eZmaxAPI/api/GlobalCustomerApi~globalCustomerGetEndpointV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/GlobalCustomerGetEndpointV1Response}
     */
    globalCustomerGetEndpointV1(pksCustomerCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pksCustomerCode' is set
      if (pksCustomerCode === undefined || pksCustomerCode === null) {
        throw new Error("Missing the required parameter 'pksCustomerCode' when calling globalCustomerGetEndpointV1");
      }

      let pathParams = {
        'pksCustomerCode': pksCustomerCode
      };
      let queryParams = {
        'sInfrastructureproductCode': opts['sInfrastructureproductCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GlobalCustomerGetEndpointV1Response;
      let basePaths = ['https://{sInfrastructureenvironmenttypeDescription}.api.global.ezmax.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/1/customer/{pksCustomerCode}/endpoint', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
