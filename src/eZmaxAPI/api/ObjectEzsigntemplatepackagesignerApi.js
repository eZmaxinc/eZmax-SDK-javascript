/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import EzsigntemplatepackagesignerCreateObjectV1Request from '../model/EzsigntemplatepackagesignerCreateObjectV1Request';
import EzsigntemplatepackagesignerCreateObjectV1Response from '../model/EzsigntemplatepackagesignerCreateObjectV1Response';
import EzsigntemplatepackagesignerDeleteObjectV1Response from '../model/EzsigntemplatepackagesignerDeleteObjectV1Response';
import EzsigntemplatepackagesignerEditObjectV1Request from '../model/EzsigntemplatepackagesignerEditObjectV1Request';
import EzsigntemplatepackagesignerEditObjectV1Response from '../model/EzsigntemplatepackagesignerEditObjectV1Response';
import EzsigntemplatepackagesignerGetObjectV1Response from '../model/EzsigntemplatepackagesignerGetObjectV1Response';
import EzsigntemplatepackagesignerGetObjectV2Response from '../model/EzsigntemplatepackagesignerGetObjectV2Response';

/**
* ObjectEzsigntemplatepackagesigner service.
* @module eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi
* @version 1.1.14
*/
export default class ObjectEzsigntemplatepackagesignerApi {

    /**
    * Constructs a new ObjectEzsigntemplatepackagesignerApi. 
    * @alias module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ezsigntemplatepackagesignerCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Ezsigntemplatepackagesigner
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerCreateObjectV1Request} EzsigntemplatepackagesignerCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatepackagesignerCreateObjectV1Response}
     */
    ezsigntemplatepackagesignerCreateObjectV1(EzsigntemplatepackagesignerCreateObjectV1Request, callback) {
      let postBody = EzsigntemplatepackagesignerCreateObjectV1Request;
      // verify the required parameter 'EzsigntemplatepackagesignerCreateObjectV1Request' is set
      if (EzsigntemplatepackagesignerCreateObjectV1Request === undefined || EzsigntemplatepackagesignerCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsigntemplatepackagesignerCreateObjectV1Request' when calling ezsigntemplatepackagesignerCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatepackagesignerCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatepackagesigner', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatepackagesignerDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Ezsigntemplatepackagesigner
     * 
     * @param {Number} pkiEzsigntemplatepackagesignerID 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatepackagesignerDeleteObjectV1Response}
     */
    ezsigntemplatepackagesignerDeleteObjectV1(pkiEzsigntemplatepackagesignerID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsigntemplatepackagesignerID' is set
      if (pkiEzsigntemplatepackagesignerID === undefined || pkiEzsigntemplatepackagesignerID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatepackagesignerID' when calling ezsigntemplatepackagesignerDeleteObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatepackagesignerID': pkiEzsigntemplatepackagesignerID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatepackagesignerDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatepackagesignerEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Ezsigntemplatepackagesigner
     * 
     * @param {Number} pkiEzsigntemplatepackagesignerID 
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerEditObjectV1Request} EzsigntemplatepackagesignerEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatepackagesignerEditObjectV1Response}
     */
    ezsigntemplatepackagesignerEditObjectV1(pkiEzsigntemplatepackagesignerID, EzsigntemplatepackagesignerEditObjectV1Request, callback) {
      let postBody = EzsigntemplatepackagesignerEditObjectV1Request;
      // verify the required parameter 'pkiEzsigntemplatepackagesignerID' is set
      if (pkiEzsigntemplatepackagesignerID === undefined || pkiEzsigntemplatepackagesignerID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatepackagesignerID' when calling ezsigntemplatepackagesignerEditObjectV1");
      }
      // verify the required parameter 'EzsigntemplatepackagesignerEditObjectV1Request' is set
      if (EzsigntemplatepackagesignerEditObjectV1Request === undefined || EzsigntemplatepackagesignerEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsigntemplatepackagesignerEditObjectV1Request' when calling ezsigntemplatepackagesignerEditObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatepackagesignerID': pkiEzsigntemplatepackagesignerID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatepackagesignerEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatepackagesignerGetObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerGetObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerGetObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsigntemplatepackagesigner
     * 
     * @param {Number} pkiEzsigntemplatepackagesignerID 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerGetObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatepackagesignerGetObjectV1Response}
     */
    ezsigntemplatepackagesignerGetObjectV1(pkiEzsigntemplatepackagesignerID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsigntemplatepackagesignerID' is set
      if (pkiEzsigntemplatepackagesignerID === undefined || pkiEzsigntemplatepackagesignerID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatepackagesignerID' when calling ezsigntemplatepackagesignerGetObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatepackagesignerID': pkiEzsigntemplatepackagesignerID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatepackagesignerGetObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatepackagesignerGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatepackagesignerGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsigntemplatepackagesigner
     * 
     * @param {Number} pkiEzsigntemplatepackagesignerID 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatepackagesignerApi~ezsigntemplatepackagesignerGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatepackagesignerGetObjectV2Response}
     */
    ezsigntemplatepackagesignerGetObjectV2(pkiEzsigntemplatepackagesignerID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsigntemplatepackagesignerID' is set
      if (pkiEzsigntemplatepackagesignerID === undefined || pkiEzsigntemplatepackagesignerID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatepackagesignerID' when calling ezsigntemplatepackagesignerGetObjectV2");
      }

      let pathParams = {
        'pkiEzsigntemplatepackagesignerID': pkiEzsigntemplatepackagesignerID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatepackagesignerGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
