/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import SignatureCreateObjectV1Request from '../model/SignatureCreateObjectV1Request';
import SignatureCreateObjectV1Response from '../model/SignatureCreateObjectV1Response';
import SignatureDeleteObjectV1Response from '../model/SignatureDeleteObjectV1Response';
import SignatureEditObjectV1Request from '../model/SignatureEditObjectV1Request';
import SignatureEditObjectV1Response from '../model/SignatureEditObjectV1Response';
import SignatureGetObjectV2Response from '../model/SignatureGetObjectV2Response';

/**
* ObjectSignature service.
* @module eZmaxAPI/api/ObjectSignatureApi
* @version 1.1.18
*/
export default class ObjectSignatureApi {

    /**
    * Constructs a new ObjectSignatureApi. 
    * @alias module:eZmaxAPI/api/ObjectSignatureApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the signatureCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectSignatureApi~signatureCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/SignatureCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Signature
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/SignatureCreateObjectV1Request} SignatureCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectSignatureApi~signatureCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/SignatureCreateObjectV1Response}
     */
    signatureCreateObjectV1(SignatureCreateObjectV1Request, callback) {
      let postBody = SignatureCreateObjectV1Request;
      // verify the required parameter 'SignatureCreateObjectV1Request' is set
      if (SignatureCreateObjectV1Request === undefined || SignatureCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'SignatureCreateObjectV1Request' when calling signatureCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SignatureCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/signature', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signatureDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectSignatureApi~signatureDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/SignatureDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Signature
     * 
     * @param {Number} pkiSignatureID The unique ID of the Signature
     * @param {module:eZmaxAPI/api/ObjectSignatureApi~signatureDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/SignatureDeleteObjectV1Response}
     */
    signatureDeleteObjectV1(pkiSignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiSignatureID' is set
      if (pkiSignatureID === undefined || pkiSignatureID === null) {
        throw new Error("Missing the required parameter 'pkiSignatureID' when calling signatureDeleteObjectV1");
      }

      let pathParams = {
        'pkiSignatureID': pkiSignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SignatureDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/signature/{pkiSignatureID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signatureEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectSignatureApi~signatureEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/SignatureEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Signature
     * 
     * @param {Number} pkiSignatureID The unique ID of the Signature
     * @param {module:eZmaxAPI/model/SignatureEditObjectV1Request} SignatureEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectSignatureApi~signatureEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/SignatureEditObjectV1Response}
     */
    signatureEditObjectV1(pkiSignatureID, SignatureEditObjectV1Request, callback) {
      let postBody = SignatureEditObjectV1Request;
      // verify the required parameter 'pkiSignatureID' is set
      if (pkiSignatureID === undefined || pkiSignatureID === null) {
        throw new Error("Missing the required parameter 'pkiSignatureID' when calling signatureEditObjectV1");
      }
      // verify the required parameter 'SignatureEditObjectV1Request' is set
      if (SignatureEditObjectV1Request === undefined || SignatureEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'SignatureEditObjectV1Request' when calling signatureEditObjectV1");
      }

      let pathParams = {
        'pkiSignatureID': pkiSignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SignatureEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/signature/{pkiSignatureID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signatureGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectSignatureApi~signatureGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/SignatureGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Signature
     * 
     * @param {Number} pkiSignatureID The unique ID of the Signature
     * @param {module:eZmaxAPI/api/ObjectSignatureApi~signatureGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/SignatureGetObjectV2Response}
     */
    signatureGetObjectV2(pkiSignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiSignatureID' is set
      if (pkiSignatureID === undefined || pkiSignatureID === null) {
        throw new Error("Missing the required parameter 'pkiSignatureID' when calling signatureGetObjectV2");
      }

      let pathParams = {
        'pkiSignatureID': pkiSignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SignatureGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/signature/{pkiSignatureID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
