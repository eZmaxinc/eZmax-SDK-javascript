/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';
import UsergroupexternalCreateObjectV1Request from '../model/UsergroupexternalCreateObjectV1Request';
import UsergroupexternalCreateObjectV1Response from '../model/UsergroupexternalCreateObjectV1Response';
import UsergroupexternalDeleteObjectV1Response from '../model/UsergroupexternalDeleteObjectV1Response';
import UsergroupexternalEditObjectV1Request from '../model/UsergroupexternalEditObjectV1Request';
import UsergroupexternalEditObjectV1Response from '../model/UsergroupexternalEditObjectV1Response';
import UsergroupexternalGetAutocompleteV2Response from '../model/UsergroupexternalGetAutocompleteV2Response';
import UsergroupexternalGetListV1Response from '../model/UsergroupexternalGetListV1Response';
import UsergroupexternalGetObjectV2Response from '../model/UsergroupexternalGetObjectV2Response';
import UsergroupexternalGetUsergroupexternalmembershipsV1Response from '../model/UsergroupexternalGetUsergroupexternalmembershipsV1Response';
import UsergroupexternalGetUsergroupsV1Response from '../model/UsergroupexternalGetUsergroupsV1Response';

/**
* ObjectUsergroupexternal service.
* @module eZmaxAPI/api/ObjectUsergroupexternalApi
* @version 1.2.0
*/
export default class ObjectUsergroupexternalApi {

    /**
    * Constructs a new ObjectUsergroupexternalApi. 
    * @alias module:eZmaxAPI/api/ObjectUsergroupexternalApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the usergroupexternalCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Usergroupexternal
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/UsergroupexternalCreateObjectV1Request} UsergroupexternalCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalCreateObjectV1Response}
     */
    usergroupexternalCreateObjectV1(UsergroupexternalCreateObjectV1Request, callback) {
      let postBody = UsergroupexternalCreateObjectV1Request;
      // verify the required parameter 'UsergroupexternalCreateObjectV1Request' is set
      if (UsergroupexternalCreateObjectV1Request === undefined || UsergroupexternalCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'UsergroupexternalCreateObjectV1Request' when calling usergroupexternalCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Usergroupexternal
     * 
     * @param {Number} pkiUsergroupexternalID The unique ID of the Usergroupexternal
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalDeleteObjectV1Response}
     */
    usergroupexternalDeleteObjectV1(pkiUsergroupexternalID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUsergroupexternalID' is set
      if (pkiUsergroupexternalID === undefined || pkiUsergroupexternalID === null) {
        throw new Error("Missing the required parameter 'pkiUsergroupexternalID' when calling usergroupexternalDeleteObjectV1");
      }

      let pathParams = {
        'pkiUsergroupexternalID': pkiUsergroupexternalID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal/{pkiUsergroupexternalID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Usergroupexternal
     * 
     * @param {Number} pkiUsergroupexternalID The unique ID of the Usergroupexternal
     * @param {module:eZmaxAPI/model/UsergroupexternalEditObjectV1Request} UsergroupexternalEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalEditObjectV1Response}
     */
    usergroupexternalEditObjectV1(pkiUsergroupexternalID, UsergroupexternalEditObjectV1Request, callback) {
      let postBody = UsergroupexternalEditObjectV1Request;
      // verify the required parameter 'pkiUsergroupexternalID' is set
      if (pkiUsergroupexternalID === undefined || pkiUsergroupexternalID === null) {
        throw new Error("Missing the required parameter 'pkiUsergroupexternalID' when calling usergroupexternalEditObjectV1");
      }
      // verify the required parameter 'UsergroupexternalEditObjectV1Request' is set
      if (UsergroupexternalEditObjectV1Request === undefined || UsergroupexternalEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'UsergroupexternalEditObjectV1Request' when calling usergroupexternalEditObjectV1");
      }

      let pathParams = {
        'pkiUsergroupexternalID': pkiUsergroupexternalID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal/{pkiUsergroupexternalID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalGetAutocompleteV2 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetAutocompleteV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalGetAutocompleteV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Usergroupexternals and IDs
     * Get the list of Usergroupexternal to be used in a dropdown or autocomplete control.
     * @param {module:eZmaxAPI/model/String} sSelector The type of Usergroupexternals to return
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eFilterActive = 'Active')] Specify which results we want to display.
     * @param {String} [sQuery] Allow to filter the returned results
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetAutocompleteV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalGetAutocompleteV2Response}
     */
    usergroupexternalGetAutocompleteV2(sSelector, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sSelector' is set
      if (sSelector === undefined || sSelector === null) {
        throw new Error("Missing the required parameter 'sSelector' when calling usergroupexternalGetAutocompleteV2");
      }

      let pathParams = {
        'sSelector': sSelector
      };
      let queryParams = {
        'eFilterActive': opts['eFilterActive'],
        'sQuery': opts['sQuery']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalGetAutocompleteV2Response;
      return this.apiClient.callApi(
        '/2/object/usergroupexternal/getAutocomplete/{sSelector}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Usergroupexternal list
     * 
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalGetListV1Response}
     */
    usergroupexternalGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = UsergroupexternalGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Usergroupexternal
     * 
     * @param {Number} pkiUsergroupexternalID The unique ID of the Usergroupexternal
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalGetObjectV2Response}
     */
    usergroupexternalGetObjectV2(pkiUsergroupexternalID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUsergroupexternalID' is set
      if (pkiUsergroupexternalID === undefined || pkiUsergroupexternalID === null) {
        throw new Error("Missing the required parameter 'pkiUsergroupexternalID' when calling usergroupexternalGetObjectV2");
      }

      let pathParams = {
        'pkiUsergroupexternalID': pkiUsergroupexternalID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/usergroupexternal/{pkiUsergroupexternalID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalGetUsergroupexternalmembershipsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetUsergroupexternalmembershipsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalGetUsergroupexternalmembershipsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Usergroupexternal's Usergroupexternalmemberships
     * @param {Number} pkiUsergroupexternalID 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetUsergroupexternalmembershipsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalGetUsergroupexternalmembershipsV1Response}
     */
    usergroupexternalGetUsergroupexternalmembershipsV1(pkiUsergroupexternalID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUsergroupexternalID' is set
      if (pkiUsergroupexternalID === undefined || pkiUsergroupexternalID === null) {
        throw new Error("Missing the required parameter 'pkiUsergroupexternalID' when calling usergroupexternalGetUsergroupexternalmembershipsV1");
      }

      let pathParams = {
        'pkiUsergroupexternalID': pkiUsergroupexternalID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalGetUsergroupexternalmembershipsV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal/{pkiUsergroupexternalID}/getUsergroupexternalmemberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usergroupexternalGetUsergroupsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetUsergroupsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UsergroupexternalGetUsergroupsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Usergroupexternal's Usergroups
     * @param {Number} pkiUsergroupexternalID 
     * @param {module:eZmaxAPI/api/ObjectUsergroupexternalApi~usergroupexternalGetUsergroupsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UsergroupexternalGetUsergroupsV1Response}
     */
    usergroupexternalGetUsergroupsV1(pkiUsergroupexternalID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUsergroupexternalID' is set
      if (pkiUsergroupexternalID === undefined || pkiUsergroupexternalID === null) {
        throw new Error("Missing the required parameter 'pkiUsergroupexternalID' when calling usergroupexternalGetUsergroupsV1");
      }

      let pathParams = {
        'pkiUsergroupexternalID': pkiUsergroupexternalID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsergroupexternalGetUsergroupsV1Response;
      return this.apiClient.callApi(
        '/1/object/usergroupexternal/{pkiUsergroupexternalID}/getUsergroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
