/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ScimGroup from '../model/ScimGroup';

/**
* ScimGroups service.
* @module eZmaxAPI/api/ScimGroupsApi
* @version 1.1.18
*/
export default class ScimGroupsApi {

    /**
    * Constructs a new ScimGroupsApi. 
    * @alias module:eZmaxAPI/api/ScimGroupsApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the groupsCreateObjectScimV2 operation.
     * @callback module:eZmaxAPI/api/ScimGroupsApi~groupsCreateObjectScimV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ScimGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Usergroup
     * @param {module:eZmaxAPI/model/ScimGroup} ScimGroup 
     * @param {module:eZmaxAPI/api/ScimGroupsApi~groupsCreateObjectScimV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ScimGroup}
     */
    groupsCreateObjectScimV2(ScimGroup, callback) {
      let postBody = ScimGroup;
      // verify the required parameter 'ScimGroup' is set
      if (ScimGroup === undefined || ScimGroup === null) {
        throw new Error("Missing the required parameter 'ScimGroup' when calling groupsCreateObjectScimV2");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScimGroup;
      return this.apiClient.callApi(
        '/2/scim/Groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groupsDeleteObjectScimV2 operation.
     * @callback module:eZmaxAPI/api/ScimGroupsApi~groupsDeleteObjectScimV2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Usergroup
     * @param {String} groupId 
     * @param {module:eZmaxAPI/api/ScimGroupsApi~groupsDeleteObjectScimV2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    groupsDeleteObjectScimV2(groupId, callback) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling groupsDeleteObjectScimV2");
      }

      let pathParams = {
        'groupId': groupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/2/scim/Groups/{groupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groupsEditObjectScimV2 operation.
     * @callback module:eZmaxAPI/api/ScimGroupsApi~groupsEditObjectScimV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ScimGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Usergroup
     * @param {String} groupId 
     * @param {module:eZmaxAPI/model/ScimGroup} ScimGroup 
     * @param {module:eZmaxAPI/api/ScimGroupsApi~groupsEditObjectScimV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ScimGroup}
     */
    groupsEditObjectScimV2(groupId, ScimGroup, callback) {
      let postBody = ScimGroup;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling groupsEditObjectScimV2");
      }
      // verify the required parameter 'ScimGroup' is set
      if (ScimGroup === undefined || ScimGroup === null) {
        throw new Error("Missing the required parameter 'ScimGroup' when calling groupsEditObjectScimV2");
      }

      let pathParams = {
        'groupId': groupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScimGroup;
      return this.apiClient.callApi(
        '/2/scim/Groups/{groupId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groupsGetListScimV2 operation.
     * @callback module:eZmaxAPI/api/ScimGroupsApi~groupsGetListScimV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ScimGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Usergroup list
     * @param {Object} opts Optional parameters
     * @param {String} [filter] Filter expression for searching groups
     * @param {module:eZmaxAPI/api/ScimGroupsApi~groupsGetListScimV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ScimGroup}
     */
    groupsGetListScimV2(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScimGroup;
      return this.apiClient.callApi(
        '/2/scim/Groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groupsGetObjectScimV2 operation.
     * @callback module:eZmaxAPI/api/ScimGroupsApi~groupsGetObjectScimV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ScimGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Usergroup
     * @param {String} groupId 
     * @param {module:eZmaxAPI/api/ScimGroupsApi~groupsGetObjectScimV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ScimGroup}
     */
    groupsGetObjectScimV2(groupId, callback) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling groupsGetObjectScimV2");
      }

      let pathParams = {
        'groupId': groupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScimGroup;
      return this.apiClient.callApi(
        '/2/scim/Groups/{groupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
