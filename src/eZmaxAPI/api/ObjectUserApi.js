/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';
import UserCreateObjectV1Request from '../model/UserCreateObjectV1Request';
import UserCreateObjectV1Response from '../model/UserCreateObjectV1Response';
import UserEditObjectV1Request from '../model/UserEditObjectV1Request';
import UserEditObjectV1Response from '../model/UserEditObjectV1Response';
import UserEditPermissionsV1Request from '../model/UserEditPermissionsV1Request';
import UserEditPermissionsV1Response from '../model/UserEditPermissionsV1Response';
import UserGetApikeysV1Response from '../model/UserGetApikeysV1Response';
import UserGetAutocompleteV2Response from '../model/UserGetAutocompleteV2Response';
import UserGetEffectivePermissionsV1Response from '../model/UserGetEffectivePermissionsV1Response';
import UserGetListV1Response from '../model/UserGetListV1Response';
import UserGetObjectV2Response from '../model/UserGetObjectV2Response';
import UserGetPermissionsV1Response from '../model/UserGetPermissionsV1Response';
import UserGetSubnetsV1Response from '../model/UserGetSubnetsV1Response';
import UserSendPasswordResetV1Response from '../model/UserSendPasswordResetV1Response';

/**
* ObjectUser service.
* @module eZmaxAPI/api/ObjectUserApi
* @version 1.1.18
*/
export default class ObjectUserApi {

    /**
    * Constructs a new ObjectUserApi. 
    * @alias module:eZmaxAPI/api/ObjectUserApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the userCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new User
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/UserCreateObjectV1Request} UserCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserCreateObjectV1Response}
     */
    userCreateObjectV1(UserCreateObjectV1Request, callback) {
      let postBody = UserCreateObjectV1Request;
      // verify the required parameter 'UserCreateObjectV1Request' is set
      if (UserCreateObjectV1Request === undefined || UserCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'UserCreateObjectV1Request' when calling userCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/user', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing User
     * 
     * @param {Number} pkiUserID The unique ID of the User
     * @param {module:eZmaxAPI/model/UserEditObjectV1Request} UserEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserEditObjectV1Response}
     */
    userEditObjectV1(pkiUserID, UserEditObjectV1Request, callback) {
      let postBody = UserEditObjectV1Request;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userEditObjectV1");
      }
      // verify the required parameter 'UserEditObjectV1Request' is set
      if (UserEditObjectV1Request === undefined || UserEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'UserEditObjectV1Request' when calling userEditObjectV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userEditPermissionsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userEditPermissionsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserEditPermissionsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit multiple Permissions
     * Using this endpoint, you can edit multiple Permissions at the same time.
     * @param {Number} pkiUserID 
     * @param {module:eZmaxAPI/model/UserEditPermissionsV1Request} UserEditPermissionsV1Request 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userEditPermissionsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserEditPermissionsV1Response}
     */
    userEditPermissionsV1(pkiUserID, UserEditPermissionsV1Request, callback) {
      let postBody = UserEditPermissionsV1Request;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userEditPermissionsV1");
      }
      // verify the required parameter 'UserEditPermissionsV1Request' is set
      if (UserEditPermissionsV1Request === undefined || UserEditPermissionsV1Request === null) {
        throw new Error("Missing the required parameter 'UserEditPermissionsV1Request' when calling userEditPermissionsV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserEditPermissionsV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/editPermissions', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetApikeysV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetApikeysV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetApikeysV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing User's Apikeys
     * @param {Number} pkiUserID 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetApikeysV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetApikeysV1Response}
     */
    userGetApikeysV1(pkiUserID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userGetApikeysV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetApikeysV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/getApikeys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetAutocompleteV2 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetAutocompleteV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetAutocompleteV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Users and IDs
     * Get the list of User to be used in a dropdown or autocomplete control.
     * @param {module:eZmaxAPI/model/String} sSelector The type of Users to return
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eFilterActive = 'Active')] Specify which results we want to display.
     * @param {String} [sQuery] Allow to filter the returned results
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetAutocompleteV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetAutocompleteV2Response}
     */
    userGetAutocompleteV2(sSelector, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sSelector' is set
      if (sSelector === undefined || sSelector === null) {
        throw new Error("Missing the required parameter 'sSelector' when calling userGetAutocompleteV2");
      }

      let pathParams = {
        'sSelector': sSelector
      };
      let queryParams = {
        'eFilterActive': opts['eFilterActive'],
        'sQuery': opts['sQuery']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetAutocompleteV2Response;
      return this.apiClient.callApi(
        '/2/object/user/getAutocomplete/{sSelector}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetEffectivePermissionsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetEffectivePermissionsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetEffectivePermissionsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing User's Effective Permissions
     * Effective Permissions refers to the combination of Permissions held by a User and the Permissions associated with the Usergroups they belong to.
     * @param {Number} pkiUserID 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetEffectivePermissionsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetEffectivePermissionsV1Response}
     */
    userGetEffectivePermissionsV1(pkiUserID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userGetEffectivePermissionsV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetEffectivePermissionsV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/getEffectivePermissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve User list
     * Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eUserType | AgentBroker<br>Assistant<br>Employee<br>EzsignUser<br>Normal | | eUserOrigin | BuiltIn<br>External | | eUserEzsignaccess | No<br>PaidByOffice<br>PerDocument<br>Prepaid |
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax = 10000)] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetListV1Response}
     */
    userGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = UserGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/user/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing User
     * 
     * @param {Number} pkiUserID The unique ID of the User
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetObjectV2Response}
     */
    userGetObjectV2(pkiUserID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userGetObjectV2");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/user/{pkiUserID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetPermissionsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetPermissionsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetPermissionsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing User's Permissions
     * @param {Number} pkiUserID 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetPermissionsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetPermissionsV1Response}
     */
    userGetPermissionsV1(pkiUserID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userGetPermissionsV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetPermissionsV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/getPermissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGetSubnetsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userGetSubnetsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserGetSubnetsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing User's Subnets
     * @param {Number} pkiUserID 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userGetSubnetsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserGetSubnetsV1Response}
     */
    userGetSubnetsV1(pkiUserID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userGetSubnetsV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGetSubnetsV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/getSubnets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userSendPasswordResetV1 operation.
     * @callback module:eZmaxAPI/api/ObjectUserApi~userSendPasswordResetV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/UserSendPasswordResetV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send password reset
     * Send the password reset email
     * @param {Number} pkiUserID 
     * @param {Object.<String, Object>} body 
     * @param {module:eZmaxAPI/api/ObjectUserApi~userSendPasswordResetV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/UserSendPasswordResetV1Response}
     */
    userSendPasswordResetV1(pkiUserID, body, callback) {
      let postBody = body;
      // verify the required parameter 'pkiUserID' is set
      if (pkiUserID === undefined || pkiUserID === null) {
        throw new Error("Missing the required parameter 'pkiUserID' when calling userSendPasswordResetV1");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling userSendPasswordResetV1");
      }

      let pathParams = {
        'pkiUserID': pkiUserID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserSendPasswordResetV1Response;
      return this.apiClient.callApi(
        '/1/object/user/{pkiUserID}/sendPasswordReset', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
