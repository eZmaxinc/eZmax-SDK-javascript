/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApikeyCreateObjectV2Request from '../model/ApikeyCreateObjectV2Request';
import ApikeyCreateObjectV2Response from '../model/ApikeyCreateObjectV2Response';
import ApikeyEditObjectV1Request from '../model/ApikeyEditObjectV1Request';
import ApikeyEditObjectV1Response from '../model/ApikeyEditObjectV1Response';
import ApikeyEditPermissionsV1Request from '../model/ApikeyEditPermissionsV1Request';
import ApikeyEditPermissionsV1Response from '../model/ApikeyEditPermissionsV1Response';
import ApikeyGetCorsV1Response from '../model/ApikeyGetCorsV1Response';
import ApikeyGetListV1Response from '../model/ApikeyGetListV1Response';
import ApikeyGetObjectV2Response from '../model/ApikeyGetObjectV2Response';
import ApikeyGetPermissionsV1Response from '../model/ApikeyGetPermissionsV1Response';
import ApikeyGetSubnetsV1Response from '../model/ApikeyGetSubnetsV1Response';
import ApikeyRegenerateV1Request from '../model/ApikeyRegenerateV1Request';
import ApikeyRegenerateV1Response from '../model/ApikeyRegenerateV1Response';
import CommonResponseError from '../model/CommonResponseError';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';

/**
* ObjectApikey service.
* @module eZmaxAPI/api/ObjectApikeyApi
* @version 1.1.18
*/
export default class ObjectApikeyApi {

    /**
    * Constructs a new ObjectApikeyApi. 
    * @alias module:eZmaxAPI/api/ObjectApikeyApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apikeyCreateObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyCreateObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyCreateObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Apikey
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/ApikeyCreateObjectV2Request} ApikeyCreateObjectV2Request 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyCreateObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyCreateObjectV2Response}
     */
    apikeyCreateObjectV2(ApikeyCreateObjectV2Request, callback) {
      let postBody = ApikeyCreateObjectV2Request;
      // verify the required parameter 'ApikeyCreateObjectV2Request' is set
      if (ApikeyCreateObjectV2Request === undefined || ApikeyCreateObjectV2Request === null) {
        throw new Error("Missing the required parameter 'ApikeyCreateObjectV2Request' when calling apikeyCreateObjectV2");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApikeyCreateObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/apikey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Apikey
     * 
     * @param {Number} pkiApikeyID The unique ID of the Apikey
     * @param {module:eZmaxAPI/model/ApikeyEditObjectV1Request} ApikeyEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyEditObjectV1Response}
     */
    apikeyEditObjectV1(pkiApikeyID, ApikeyEditObjectV1Request, callback) {
      let postBody = ApikeyEditObjectV1Request;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyEditObjectV1");
      }
      // verify the required parameter 'ApikeyEditObjectV1Request' is set
      if (ApikeyEditObjectV1Request === undefined || ApikeyEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'ApikeyEditObjectV1Request' when calling apikeyEditObjectV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApikeyEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyEditPermissionsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyEditPermissionsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyEditPermissionsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit multiple Permissions
     * Using this endpoint, you can edit multiple Permissions at the same time.
     * @param {Number} pkiApikeyID 
     * @param {module:eZmaxAPI/model/ApikeyEditPermissionsV1Request} ApikeyEditPermissionsV1Request 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyEditPermissionsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyEditPermissionsV1Response}
     */
    apikeyEditPermissionsV1(pkiApikeyID, ApikeyEditPermissionsV1Request, callback) {
      let postBody = ApikeyEditPermissionsV1Request;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyEditPermissionsV1");
      }
      // verify the required parameter 'ApikeyEditPermissionsV1Request' is set
      if (ApikeyEditPermissionsV1Request === undefined || ApikeyEditPermissionsV1Request === null) {
        throw new Error("Missing the required parameter 'ApikeyEditPermissionsV1Request' when calling apikeyEditPermissionsV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApikeyEditPermissionsV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}/editPermissions', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyGetCorsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetCorsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyGetCorsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Apikey's cors
     * @param {Number} pkiApikeyID 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetCorsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyGetCorsV1Response}
     */
    apikeyGetCorsV1(pkiApikeyID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyGetCorsV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApikeyGetCorsV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}/getCors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Apikey list
     * Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---|
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax = 10000)] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyGetListV1Response}
     */
    apikeyGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = ApikeyGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Apikey
     * 
     * @param {Number} pkiApikeyID The unique ID of the Apikey
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyGetObjectV2Response}
     */
    apikeyGetObjectV2(pkiApikeyID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyGetObjectV2");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApikeyGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/apikey/{pkiApikeyID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyGetPermissionsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetPermissionsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyGetPermissionsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Apikey's Permissions
     * @param {Number} pkiApikeyID 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetPermissionsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyGetPermissionsV1Response}
     */
    apikeyGetPermissionsV1(pkiApikeyID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyGetPermissionsV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApikeyGetPermissionsV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}/getPermissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyGetSubnetsV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetSubnetsV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyGetSubnetsV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Apikey's subnets
     * @param {Number} pkiApikeyID 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyGetSubnetsV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyGetSubnetsV1Response}
     */
    apikeyGetSubnetsV1(pkiApikeyID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyGetSubnetsV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApikeyGetSubnetsV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}/getSubnets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apikeyRegenerateV1 operation.
     * @callback module:eZmaxAPI/api/ObjectApikeyApi~apikeyRegenerateV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/ApikeyRegenerateV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate the Apikey
     * 
     * @param {Number} pkiApikeyID 
     * @param {module:eZmaxAPI/model/ApikeyRegenerateV1Request} ApikeyRegenerateV1Request 
     * @param {module:eZmaxAPI/api/ObjectApikeyApi~apikeyRegenerateV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/ApikeyRegenerateV1Response}
     */
    apikeyRegenerateV1(pkiApikeyID, ApikeyRegenerateV1Request, callback) {
      let postBody = ApikeyRegenerateV1Request;
      // verify the required parameter 'pkiApikeyID' is set
      if (pkiApikeyID === undefined || pkiApikeyID === null) {
        throw new Error("Missing the required parameter 'pkiApikeyID' when calling apikeyRegenerateV1");
      }
      // verify the required parameter 'ApikeyRegenerateV1Request' is set
      if (ApikeyRegenerateV1Request === undefined || ApikeyRegenerateV1Request === null) {
        throw new Error("Missing the required parameter 'ApikeyRegenerateV1Request' when calling apikeyRegenerateV1");
      }

      let pathParams = {
        'pkiApikeyID': pkiApikeyID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApikeyRegenerateV1Response;
      return this.apiClient.callApi(
        '/1/object/apikey/{pkiApikeyID}/regenerate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
