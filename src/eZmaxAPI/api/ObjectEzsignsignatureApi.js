/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.29
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import EzsignsignatureCreateObjectV1Request from '../model/EzsignsignatureCreateObjectV1Request';
import EzsignsignatureCreateObjectV1Response from '../model/EzsignsignatureCreateObjectV1Response';
import EzsignsignatureDeleteObjectV1Response from '../model/EzsignsignatureDeleteObjectV1Response';
import EzsignsignatureEditObjectV1Request from '../model/EzsignsignatureEditObjectV1Request';
import EzsignsignatureEditObjectV1Response from '../model/EzsignsignatureEditObjectV1Response';
import EzsignsignatureGetObjectV1Response from '../model/EzsignsignatureGetObjectV1Response';

/**
* ObjectEzsignsignature service.
* @module eZmaxAPI/api/ObjectEzsignsignatureApi
* @version 1.0.29
*/
export default class ObjectEzsignsignatureApi {

    /**
    * Constructs a new ObjectEzsignsignatureApi. 
    * @alias module:eZmaxAPI/api/ObjectEzsignsignatureApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ezsignsignatureCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsignatureCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Ezsignsignature
     * The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
     * @param {Array.<module:eZmaxAPI/model/EzsignsignatureCreateObjectV1Request>} EzsignsignatureCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsignatureCreateObjectV1Response}
     */
    ezsignsignatureCreateObjectV1(EzsignsignatureCreateObjectV1Request, callback) {
      let postBody = EzsignsignatureCreateObjectV1Request;
      // verify the required parameter 'EzsignsignatureCreateObjectV1Request' is set
      if (EzsignsignatureCreateObjectV1Request === undefined || EzsignsignatureCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignsignatureCreateObjectV1Request' when calling ezsignsignatureCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignsignatureCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsignature', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsignatureDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsignatureDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Ezsignsignature
     * @param {Number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsignatureDeleteObjectV1Response}
     */
    ezsignsignatureDeleteObjectV1(pkiEzsignsignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsignsignatureID' is set
      if (pkiEzsignsignatureID === undefined || pkiEzsignsignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsignatureID' when calling ezsignsignatureDeleteObjectV1");
      }

      let pathParams = {
        'pkiEzsignsignatureID': pkiEzsignsignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignsignatureDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsignature/{pkiEzsignsignatureID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsignatureEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsignatureEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modify an existing Ezsignsignature
     * @param {Number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {module:eZmaxAPI/model/EzsignsignatureEditObjectV1Request} EzsignsignatureEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsignatureEditObjectV1Response}
     */
    ezsignsignatureEditObjectV1(pkiEzsignsignatureID, EzsignsignatureEditObjectV1Request, callback) {
      let postBody = EzsignsignatureEditObjectV1Request;
      // verify the required parameter 'pkiEzsignsignatureID' is set
      if (pkiEzsignsignatureID === undefined || pkiEzsignsignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsignatureID' when calling ezsignsignatureEditObjectV1");
      }
      // verify the required parameter 'EzsignsignatureEditObjectV1Request' is set
      if (EzsignsignatureEditObjectV1Request === undefined || EzsignsignatureEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignsignatureEditObjectV1Request' when calling ezsignsignatureEditObjectV1");
      }

      let pathParams = {
        'pkiEzsignsignatureID': pkiEzsignsignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignsignatureEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsignature/{pkiEzsignsignatureID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsignatureGetChildrenV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureGetChildrenV1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsignsignature's children IDs
     * @param {Number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureGetChildrenV1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    ezsignsignatureGetChildrenV1(pkiEzsignsignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsignsignatureID' is set
      if (pkiEzsignsignatureID === undefined || pkiEzsignsignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsignatureID' when calling ezsignsignatureGetChildrenV1");
      }

      let pathParams = {
        'pkiEzsignsignatureID': pkiEzsignsignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/1/object/ezsignsignature/{pkiEzsignsignatureID}/getChildren', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsignatureGetObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureGetObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsignatureGetObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsignsignature
     * @param {Number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {module:eZmaxAPI/api/ObjectEzsignsignatureApi~ezsignsignatureGetObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsignatureGetObjectV1Response}
     */
    ezsignsignatureGetObjectV1(pkiEzsignsignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsignsignatureID' is set
      if (pkiEzsignsignatureID === undefined || pkiEzsignsignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsignatureID' when calling ezsignsignatureGetObjectV1");
      }

      let pathParams = {
        'pkiEzsignsignatureID': pkiEzsignsignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignsignatureGetObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsignature/{pkiEzsignsignatureID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
