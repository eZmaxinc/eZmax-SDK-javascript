/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import DiscussionCreateObjectV1Request from '../model/DiscussionCreateObjectV1Request';
import DiscussionCreateObjectV1Response from '../model/DiscussionCreateObjectV1Response';
import DiscussionDeleteObjectV1Response from '../model/DiscussionDeleteObjectV1Response';
import DiscussionGetObjectV2Response from '../model/DiscussionGetObjectV2Response';
import DiscussionPatchObjectV1Request from '../model/DiscussionPatchObjectV1Request';
import DiscussionPatchObjectV1Response from '../model/DiscussionPatchObjectV1Response';
import DiscussionUpdateDiscussionreadstatusV1Request from '../model/DiscussionUpdateDiscussionreadstatusV1Request';
import DiscussionUpdateDiscussionreadstatusV1Response from '../model/DiscussionUpdateDiscussionreadstatusV1Response';

/**
* ObjectDiscussion service.
* @module eZmaxAPI/api/ObjectDiscussionApi
* @version 1.2.0
*/
export default class ObjectDiscussionApi {

    /**
    * Constructs a new ObjectDiscussionApi. 
    * @alias module:eZmaxAPI/api/ObjectDiscussionApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the discussionCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectDiscussionApi~discussionCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/DiscussionCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Discussion
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/DiscussionCreateObjectV1Request} DiscussionCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectDiscussionApi~discussionCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/DiscussionCreateObjectV1Response}
     */
    discussionCreateObjectV1(DiscussionCreateObjectV1Request, callback) {
      let postBody = DiscussionCreateObjectV1Request;
      // verify the required parameter 'DiscussionCreateObjectV1Request' is set
      if (DiscussionCreateObjectV1Request === undefined || DiscussionCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'DiscussionCreateObjectV1Request' when calling discussionCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DiscussionCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/discussion', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the discussionDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectDiscussionApi~discussionDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/DiscussionDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Discussion
     * 
     * @param {Number} pkiDiscussionID The unique ID of the Discussion
     * @param {module:eZmaxAPI/api/ObjectDiscussionApi~discussionDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/DiscussionDeleteObjectV1Response}
     */
    discussionDeleteObjectV1(pkiDiscussionID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiDiscussionID' is set
      if (pkiDiscussionID === undefined || pkiDiscussionID === null) {
        throw new Error("Missing the required parameter 'pkiDiscussionID' when calling discussionDeleteObjectV1");
      }

      let pathParams = {
        'pkiDiscussionID': pkiDiscussionID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DiscussionDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/discussion/{pkiDiscussionID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the discussionGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectDiscussionApi~discussionGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/DiscussionGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Discussion
     * 
     * @param {Number} pkiDiscussionID The unique ID of the Discussion
     * @param {module:eZmaxAPI/api/ObjectDiscussionApi~discussionGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/DiscussionGetObjectV2Response}
     */
    discussionGetObjectV2(pkiDiscussionID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiDiscussionID' is set
      if (pkiDiscussionID === undefined || pkiDiscussionID === null) {
        throw new Error("Missing the required parameter 'pkiDiscussionID' when calling discussionGetObjectV2");
      }

      let pathParams = {
        'pkiDiscussionID': pkiDiscussionID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DiscussionGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/discussion/{pkiDiscussionID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the discussionPatchObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectDiscussionApi~discussionPatchObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/DiscussionPatchObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch an existing Discussion
     * 
     * @param {Number} pkiDiscussionID The unique ID of the Discussion
     * @param {module:eZmaxAPI/model/DiscussionPatchObjectV1Request} DiscussionPatchObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectDiscussionApi~discussionPatchObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/DiscussionPatchObjectV1Response}
     */
    discussionPatchObjectV1(pkiDiscussionID, DiscussionPatchObjectV1Request, callback) {
      let postBody = DiscussionPatchObjectV1Request;
      // verify the required parameter 'pkiDiscussionID' is set
      if (pkiDiscussionID === undefined || pkiDiscussionID === null) {
        throw new Error("Missing the required parameter 'pkiDiscussionID' when calling discussionPatchObjectV1");
      }
      // verify the required parameter 'DiscussionPatchObjectV1Request' is set
      if (DiscussionPatchObjectV1Request === undefined || DiscussionPatchObjectV1Request === null) {
        throw new Error("Missing the required parameter 'DiscussionPatchObjectV1Request' when calling discussionPatchObjectV1");
      }

      let pathParams = {
        'pkiDiscussionID': pkiDiscussionID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DiscussionPatchObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/discussion/{pkiDiscussionID}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the discussionUpdateDiscussionreadstatusV1 operation.
     * @callback module:eZmaxAPI/api/ObjectDiscussionApi~discussionUpdateDiscussionreadstatusV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/DiscussionUpdateDiscussionreadstatusV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the read status of the discussion
     * @param {Number} pkiDiscussionID 
     * @param {module:eZmaxAPI/model/DiscussionUpdateDiscussionreadstatusV1Request} DiscussionUpdateDiscussionreadstatusV1Request 
     * @param {module:eZmaxAPI/api/ObjectDiscussionApi~discussionUpdateDiscussionreadstatusV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/DiscussionUpdateDiscussionreadstatusV1Response}
     */
    discussionUpdateDiscussionreadstatusV1(pkiDiscussionID, DiscussionUpdateDiscussionreadstatusV1Request, callback) {
      let postBody = DiscussionUpdateDiscussionreadstatusV1Request;
      // verify the required parameter 'pkiDiscussionID' is set
      if (pkiDiscussionID === undefined || pkiDiscussionID === null) {
        throw new Error("Missing the required parameter 'pkiDiscussionID' when calling discussionUpdateDiscussionreadstatusV1");
      }
      // verify the required parameter 'DiscussionUpdateDiscussionreadstatusV1Request' is set
      if (DiscussionUpdateDiscussionreadstatusV1Request === undefined || DiscussionUpdateDiscussionreadstatusV1Request === null) {
        throw new Error("Missing the required parameter 'DiscussionUpdateDiscussionreadstatusV1Request' when calling discussionUpdateDiscussionreadstatusV1");
      }

      let pathParams = {
        'pkiDiscussionID': pkiDiscussionID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DiscussionUpdateDiscussionreadstatusV1Response;
      return this.apiClient.callApi(
        '/1/object/discussion/{pkiDiscussionID}/updateDiscussionreadstatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
