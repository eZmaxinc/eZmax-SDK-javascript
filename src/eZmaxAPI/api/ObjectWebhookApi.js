/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import CommonResponseErrorTooManyRequests from '../model/CommonResponseErrorTooManyRequests';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';
import WebhookCreateObjectV1Request from '../model/WebhookCreateObjectV1Request';
import WebhookCreateObjectV1Response from '../model/WebhookCreateObjectV1Response';
import WebhookDeleteObjectV1Response from '../model/WebhookDeleteObjectV1Response';
import WebhookEditObjectV1Request from '../model/WebhookEditObjectV1Request';
import WebhookEditObjectV1Response from '../model/WebhookEditObjectV1Response';
import WebhookGetHistoryV1Response from '../model/WebhookGetHistoryV1Response';
import WebhookGetListV1Response from '../model/WebhookGetListV1Response';
import WebhookGetObjectV2Response from '../model/WebhookGetObjectV2Response';
import WebhookTestV1Response from '../model/WebhookTestV1Response';

/**
* ObjectWebhook service.
* @module eZmaxAPI/api/ObjectWebhookApi
* @version 1.2.0
*/
export default class ObjectWebhookApi {

    /**
    * Constructs a new ObjectWebhookApi. 
    * @alias module:eZmaxAPI/api/ObjectWebhookApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the webhookCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Webhook
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/WebhookCreateObjectV1Request} WebhookCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookCreateObjectV1Response}
     */
    webhookCreateObjectV1(WebhookCreateObjectV1Request, callback) {
      let postBody = WebhookCreateObjectV1Request;
      // verify the required parameter 'WebhookCreateObjectV1Request' is set
      if (WebhookCreateObjectV1Request === undefined || WebhookCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'WebhookCreateObjectV1Request' when calling webhookCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebhookCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Webhook
     * 
     * @param {Number} pkiWebhookID 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookDeleteObjectV1Response}
     */
    webhookDeleteObjectV1(pkiWebhookID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiWebhookID' is set
      if (pkiWebhookID === undefined || pkiWebhookID === null) {
        throw new Error("Missing the required parameter 'pkiWebhookID' when calling webhookDeleteObjectV1");
      }

      let pathParams = {
        'pkiWebhookID': pkiWebhookID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebhookDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook/{pkiWebhookID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Webhook
     * 
     * @param {Number} pkiWebhookID 
     * @param {module:eZmaxAPI/model/WebhookEditObjectV1Request} WebhookEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookEditObjectV1Response}
     */
    webhookEditObjectV1(pkiWebhookID, WebhookEditObjectV1Request, callback) {
      let postBody = WebhookEditObjectV1Request;
      // verify the required parameter 'pkiWebhookID' is set
      if (pkiWebhookID === undefined || pkiWebhookID === null) {
        throw new Error("Missing the required parameter 'pkiWebhookID' when calling webhookEditObjectV1");
      }
      // verify the required parameter 'WebhookEditObjectV1Request' is set
      if (WebhookEditObjectV1Request === undefined || WebhookEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'WebhookEditObjectV1Request' when calling webhookEditObjectV1");
      }

      let pathParams = {
        'pkiWebhookID': pkiWebhookID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebhookEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook/{pkiWebhookID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookGetHistoryV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookGetHistoryV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookGetHistoryV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the logs for recent Webhook calls
     * 
     * @param {Number} pkiWebhookID 
     * @param {module:eZmaxAPI/model/String} eWebhookHistoryinterval The number of days to return
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookGetHistoryV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookGetHistoryV1Response}
     */
    webhookGetHistoryV1(pkiWebhookID, eWebhookHistoryinterval, callback) {
      let postBody = null;
      // verify the required parameter 'pkiWebhookID' is set
      if (pkiWebhookID === undefined || pkiWebhookID === null) {
        throw new Error("Missing the required parameter 'pkiWebhookID' when calling webhookGetHistoryV1");
      }
      // verify the required parameter 'eWebhookHistoryinterval' is set
      if (eWebhookHistoryinterval === undefined || eWebhookHistoryinterval === null) {
        throw new Error("Missing the required parameter 'eWebhookHistoryinterval' when calling webhookGetHistoryV1");
      }

      let pathParams = {
        'pkiWebhookID': pkiWebhookID
      };
      let queryParams = {
        'eWebhookHistoryinterval': eWebhookHistoryinterval
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebhookGetHistoryV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook/{pkiWebhookID}/getHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Webhook list
     * Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eWebhookModule | Ezsign<br>Management | | eWebhookEzsignevent | DocumentCompleted<br>FolderCompleted | | eWebhookManagementevent | UserCreated |
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookGetListV1Response}
     */
    webhookGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = WebhookGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Webhook
     * 
     * @param {Number} pkiWebhookID 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookGetObjectV2Response}
     */
    webhookGetObjectV2(pkiWebhookID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiWebhookID' is set
      if (pkiWebhookID === undefined || pkiWebhookID === null) {
        throw new Error("Missing the required parameter 'pkiWebhookID' when calling webhookGetObjectV2");
      }

      let pathParams = {
        'pkiWebhookID': pkiWebhookID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebhookGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/webhook/{pkiWebhookID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookTestV1 operation.
     * @callback module:eZmaxAPI/api/ObjectWebhookApi~webhookTestV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/WebhookTestV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test the Webhook by calling the Url
     * 
     * @param {Number} pkiWebhookID 
     * @param {Object.<String, Object>} body 
     * @param {module:eZmaxAPI/api/ObjectWebhookApi~webhookTestV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/WebhookTestV1Response}
     */
    webhookTestV1(pkiWebhookID, body, callback) {
      let postBody = body;
      // verify the required parameter 'pkiWebhookID' is set
      if (pkiWebhookID === undefined || pkiWebhookID === null) {
        throw new Error("Missing the required parameter 'pkiWebhookID' when calling webhookTestV1");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling webhookTestV1");
      }

      let pathParams = {
        'pkiWebhookID': pkiWebhookID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WebhookTestV1Response;
      return this.apiClient.callApi(
        '/1/object/webhook/{pkiWebhookID}/test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
