/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.12
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import EzsigntemplatesignatureCreateObjectV1Request from '../model/EzsigntemplatesignatureCreateObjectV1Request';
import EzsigntemplatesignatureCreateObjectV1Response from '../model/EzsigntemplatesignatureCreateObjectV1Response';
import EzsigntemplatesignatureDeleteObjectV1Response from '../model/EzsigntemplatesignatureDeleteObjectV1Response';
import EzsigntemplatesignatureEditObjectV1Request from '../model/EzsigntemplatesignatureEditObjectV1Request';
import EzsigntemplatesignatureEditObjectV1Response from '../model/EzsigntemplatesignatureEditObjectV1Response';
import EzsigntemplatesignatureGetObjectV1Response from '../model/EzsigntemplatesignatureGetObjectV1Response';

/**
* ObjectEzsigntemplatesignature service.
* @module eZmaxAPI/api/ObjectEzsigntemplatesignatureApi
* @version 1.1.12
*/
export default class ObjectEzsigntemplatesignatureApi {

    /**
    * Constructs a new ObjectEzsigntemplatesignatureApi. 
    * @alias module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ezsigntemplatesignatureCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Ezsigntemplatesignature
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureCreateObjectV1Request} EzsigntemplatesignatureCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatesignatureCreateObjectV1Response}
     */
    ezsigntemplatesignatureCreateObjectV1(EzsigntemplatesignatureCreateObjectV1Request, callback) {
      let postBody = EzsigntemplatesignatureCreateObjectV1Request;
      // verify the required parameter 'EzsigntemplatesignatureCreateObjectV1Request' is set
      if (EzsigntemplatesignatureCreateObjectV1Request === undefined || EzsigntemplatesignatureCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsigntemplatesignatureCreateObjectV1Request' when calling ezsigntemplatesignatureCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatesignatureCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatesignature', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatesignatureDeleteObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureDeleteObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureDeleteObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing Ezsigntemplatesignature
     * 
     * @param {Number} pkiEzsigntemplatesignatureID 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureDeleteObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatesignatureDeleteObjectV1Response}
     */
    ezsigntemplatesignatureDeleteObjectV1(pkiEzsigntemplatesignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsigntemplatesignatureID' is set
      if (pkiEzsigntemplatesignatureID === undefined || pkiEzsigntemplatesignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatesignatureID' when calling ezsigntemplatesignatureDeleteObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatesignatureID': pkiEzsigntemplatesignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatesignatureDeleteObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatesignature/{pkiEzsigntemplatesignatureID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatesignatureEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Ezsigntemplatesignature
     * 
     * @param {Number} pkiEzsigntemplatesignatureID 
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureEditObjectV1Request} EzsigntemplatesignatureEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatesignatureEditObjectV1Response}
     */
    ezsigntemplatesignatureEditObjectV1(pkiEzsigntemplatesignatureID, EzsigntemplatesignatureEditObjectV1Request, callback) {
      let postBody = EzsigntemplatesignatureEditObjectV1Request;
      // verify the required parameter 'pkiEzsigntemplatesignatureID' is set
      if (pkiEzsigntemplatesignatureID === undefined || pkiEzsigntemplatesignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatesignatureID' when calling ezsigntemplatesignatureEditObjectV1");
      }
      // verify the required parameter 'EzsigntemplatesignatureEditObjectV1Request' is set
      if (EzsigntemplatesignatureEditObjectV1Request === undefined || EzsigntemplatesignatureEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsigntemplatesignatureEditObjectV1Request' when calling ezsigntemplatesignatureEditObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatesignatureID': pkiEzsigntemplatesignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatesignatureEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatesignature/{pkiEzsigntemplatesignatureID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsigntemplatesignatureGetObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureGetObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsigntemplatesignatureGetObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsigntemplatesignature
     * 
     * @param {Number} pkiEzsigntemplatesignatureID 
     * @param {module:eZmaxAPI/api/ObjectEzsigntemplatesignatureApi~ezsigntemplatesignatureGetObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsigntemplatesignatureGetObjectV1Response}
     */
    ezsigntemplatesignatureGetObjectV1(pkiEzsigntemplatesignatureID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsigntemplatesignatureID' is set
      if (pkiEzsigntemplatesignatureID === undefined || pkiEzsigntemplatesignatureID === null) {
        throw new Error("Missing the required parameter 'pkiEzsigntemplatesignatureID' when calling ezsigntemplatesignatureGetObjectV1");
      }

      let pathParams = {
        'pkiEzsigntemplatesignatureID': pkiEzsigntemplatesignatureID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsigntemplatesignatureGetObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsigntemplatesignature/{pkiEzsigntemplatesignatureID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
