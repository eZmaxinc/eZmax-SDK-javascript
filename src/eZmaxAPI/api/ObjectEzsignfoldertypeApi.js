/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonGetAutocompleteV1Response from '../model/CommonGetAutocompleteV1Response';
import CommonResponseError from '../model/CommonResponseError';
import EzsignfoldertypeCreateObjectV1Request from '../model/EzsignfoldertypeCreateObjectV1Request';
import EzsignfoldertypeCreateObjectV1Response from '../model/EzsignfoldertypeCreateObjectV1Response';
import EzsignfoldertypeEditObjectV1Request from '../model/EzsignfoldertypeEditObjectV1Request';
import EzsignfoldertypeEditObjectV1Response from '../model/EzsignfoldertypeEditObjectV1Response';
import EzsignfoldertypeGetAutocompleteV2Response from '../model/EzsignfoldertypeGetAutocompleteV2Response';
import EzsignfoldertypeGetListV1Response from '../model/EzsignfoldertypeGetListV1Response';
import EzsignfoldertypeGetObjectV2Response from '../model/EzsignfoldertypeGetObjectV2Response';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';

/**
* ObjectEzsignfoldertype service.
* @module eZmaxAPI/api/ObjectEzsignfoldertypeApi
* @version 1.1.17
*/
export default class ObjectEzsignfoldertypeApi {

    /**
    * Constructs a new ObjectEzsignfoldertypeApi. 
    * @alias module:eZmaxAPI/api/ObjectEzsignfoldertypeApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ezsignfoldertypeCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Ezsignfoldertype
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeCreateObjectV1Request} EzsignfoldertypeCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignfoldertypeCreateObjectV1Response}
     */
    ezsignfoldertypeCreateObjectV1(EzsignfoldertypeCreateObjectV1Request, callback) {
      let postBody = EzsignfoldertypeCreateObjectV1Request;
      // verify the required parameter 'EzsignfoldertypeCreateObjectV1Request' is set
      if (EzsignfoldertypeCreateObjectV1Request === undefined || EzsignfoldertypeCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignfoldertypeCreateObjectV1Request' when calling ezsignfoldertypeCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignfoldertypeCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignfoldertype', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignfoldertypeEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Ezsignfoldertype
     * 
     * @param {Number} pkiEzsignfoldertypeID 
     * @param {module:eZmaxAPI/model/EzsignfoldertypeEditObjectV1Request} EzsignfoldertypeEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignfoldertypeEditObjectV1Response}
     */
    ezsignfoldertypeEditObjectV1(pkiEzsignfoldertypeID, EzsignfoldertypeEditObjectV1Request, callback) {
      let postBody = EzsignfoldertypeEditObjectV1Request;
      // verify the required parameter 'pkiEzsignfoldertypeID' is set
      if (pkiEzsignfoldertypeID === undefined || pkiEzsignfoldertypeID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignfoldertypeID' when calling ezsignfoldertypeEditObjectV1");
      }
      // verify the required parameter 'EzsignfoldertypeEditObjectV1Request' is set
      if (EzsignfoldertypeEditObjectV1Request === undefined || EzsignfoldertypeEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignfoldertypeEditObjectV1Request' when calling ezsignfoldertypeEditObjectV1");
      }

      let pathParams = {
        'pkiEzsignfoldertypeID': pkiEzsignfoldertypeID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignfoldertypeEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignfoldertype/{pkiEzsignfoldertypeID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignfoldertypeGetAutocompleteV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetAutocompleteV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/CommonGetAutocompleteV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Ezsignfoldertypes and IDs
     * Get the list of Ezsignfoldertypes to be used in a dropdown or autocomplete control.
     * @param {module:eZmaxAPI/model/String} sSelector The type of Ezsignfoldertypes to return
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eFilterActive = 'Active')] Specify which results we want to display.
     * @param {String} [sQuery] Allow to filter the returned results
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetAutocompleteV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/CommonGetAutocompleteV1Response}
     */
    ezsignfoldertypeGetAutocompleteV1(sSelector, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sSelector' is set
      if (sSelector === undefined || sSelector === null) {
        throw new Error("Missing the required parameter 'sSelector' when calling ezsignfoldertypeGetAutocompleteV1");
      }

      let pathParams = {
        'sSelector': sSelector
      };
      let queryParams = {
        'eFilterActive': opts['eFilterActive'],
        'sQuery': opts['sQuery']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommonGetAutocompleteV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignfoldertype/getAutocomplete/{sSelector}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignfoldertypeGetAutocompleteV2 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetAutocompleteV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeGetAutocompleteV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Ezsignfoldertypes and IDs
     * Get the list of Ezsignfoldertype to be used in a dropdown or autocomplete control.
     * @param {module:eZmaxAPI/model/String} sSelector The type of Ezsignfoldertypes to return
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eFilterActive = 'Active')] Specify which results we want to display.
     * @param {String} [sQuery] Allow to filter the returned results
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetAutocompleteV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignfoldertypeGetAutocompleteV2Response}
     */
    ezsignfoldertypeGetAutocompleteV2(sSelector, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sSelector' is set
      if (sSelector === undefined || sSelector === null) {
        throw new Error("Missing the required parameter 'sSelector' when calling ezsignfoldertypeGetAutocompleteV2");
      }

      let pathParams = {
        'sSelector': sSelector
      };
      let queryParams = {
        'eFilterActive': opts['eFilterActive'],
        'sQuery': opts['sQuery']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignfoldertypeGetAutocompleteV2Response;
      return this.apiClient.callApi(
        '/2/object/ezsignfoldertype/getAutocomplete/{sSelector}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignfoldertypeGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Ezsignfoldertype list
     * Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eEzsignfoldertypePrivacylevel | User<br>Usergroup |
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax = 10000)] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignfoldertypeGetListV1Response}
     */
    ezsignfoldertypeGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = EzsignfoldertypeGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignfoldertype/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignfoldertypeGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignfoldertypeGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsignfoldertype
     * 
     * @param {Number} pkiEzsignfoldertypeID 
     * @param {module:eZmaxAPI/api/ObjectEzsignfoldertypeApi~ezsignfoldertypeGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignfoldertypeGetObjectV2Response}
     */
    ezsignfoldertypeGetObjectV2(pkiEzsignfoldertypeID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsignfoldertypeID' is set
      if (pkiEzsignfoldertypeID === undefined || pkiEzsignfoldertypeID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignfoldertypeID' when calling ezsignfoldertypeGetObjectV2");
      }

      let pathParams = {
        'pkiEzsignfoldertypeID': pkiEzsignfoldertypeID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignfoldertypeGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/ezsignfoldertype/{pkiEzsignfoldertypeID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
