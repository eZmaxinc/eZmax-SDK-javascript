/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommonResponseError from '../model/CommonResponseError';
import EzsignsigningreasonCreateObjectV1Request from '../model/EzsignsigningreasonCreateObjectV1Request';
import EzsignsigningreasonCreateObjectV1Response from '../model/EzsignsigningreasonCreateObjectV1Response';
import EzsignsigningreasonEditObjectV1Request from '../model/EzsignsigningreasonEditObjectV1Request';
import EzsignsigningreasonEditObjectV1Response from '../model/EzsignsigningreasonEditObjectV1Response';
import EzsignsigningreasonGetAutocompleteV2Response from '../model/EzsignsigningreasonGetAutocompleteV2Response';
import EzsignsigningreasonGetListV1Response from '../model/EzsignsigningreasonGetListV1Response';
import EzsignsigningreasonGetObjectV2Response from '../model/EzsignsigningreasonGetObjectV2Response';
import HeaderAcceptLanguage from '../model/HeaderAcceptLanguage';

/**
* ObjectEzsignsigningreason service.
* @module eZmaxAPI/api/ObjectEzsignsigningreasonApi
* @version 1.2.0
*/
export default class ObjectEzsignsigningreasonApi {

    /**
    * Constructs a new ObjectEzsignsigningreasonApi. 
    * @alias module:eZmaxAPI/api/ObjectEzsignsigningreasonApi
    * @class
    * @param {module:eZmaxAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:eZmaxAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ezsignsigningreasonCreateObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonCreateObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonCreateObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Ezsignsigningreason
     * The endpoint allows to create one or many elements at once.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonCreateObjectV1Request} EzsignsigningreasonCreateObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonCreateObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsigningreasonCreateObjectV1Response}
     */
    ezsignsigningreasonCreateObjectV1(EzsignsigningreasonCreateObjectV1Request, callback) {
      let postBody = EzsignsigningreasonCreateObjectV1Request;
      // verify the required parameter 'EzsignsigningreasonCreateObjectV1Request' is set
      if (EzsignsigningreasonCreateObjectV1Request === undefined || EzsignsigningreasonCreateObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignsigningreasonCreateObjectV1Request' when calling ezsignsigningreasonCreateObjectV1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignsigningreasonCreateObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsigningreason', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsigningreasonEditObjectV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonEditObjectV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonEditObjectV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing Ezsignsigningreason
     * 
     * @param {Number} pkiEzsignsigningreasonID The unique ID of the Ezsignsigningreason
     * @param {module:eZmaxAPI/model/EzsignsigningreasonEditObjectV1Request} EzsignsigningreasonEditObjectV1Request 
     * @param {module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonEditObjectV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsigningreasonEditObjectV1Response}
     */
    ezsignsigningreasonEditObjectV1(pkiEzsignsigningreasonID, EzsignsigningreasonEditObjectV1Request, callback) {
      let postBody = EzsignsigningreasonEditObjectV1Request;
      // verify the required parameter 'pkiEzsignsigningreasonID' is set
      if (pkiEzsignsigningreasonID === undefined || pkiEzsignsigningreasonID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsigningreasonID' when calling ezsignsigningreasonEditObjectV1");
      }
      // verify the required parameter 'EzsignsigningreasonEditObjectV1Request' is set
      if (EzsignsigningreasonEditObjectV1Request === undefined || EzsignsigningreasonEditObjectV1Request === null) {
        throw new Error("Missing the required parameter 'EzsignsigningreasonEditObjectV1Request' when calling ezsignsigningreasonEditObjectV1");
      }

      let pathParams = {
        'pkiEzsignsigningreasonID': pkiEzsignsigningreasonID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EzsignsigningreasonEditObjectV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsigningreason/{pkiEzsignsigningreasonID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsigningreasonGetAutocompleteV2 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetAutocompleteV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonGetAutocompleteV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Ezsignsigningreasons and IDs
     * Get the list of Ezsignsigningreason to be used in a dropdown or autocomplete control.
     * @param {module:eZmaxAPI/model/String} sSelector The type of Ezsignsigningreasons to return
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eFilterActive = 'Active')] Specify which results we want to display.
     * @param {String} [sQuery] Allow to filter the returned results
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetAutocompleteV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsigningreasonGetAutocompleteV2Response}
     */
    ezsignsigningreasonGetAutocompleteV2(sSelector, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sSelector' is set
      if (sSelector === undefined || sSelector === null) {
        throw new Error("Missing the required parameter 'sSelector' when calling ezsignsigningreasonGetAutocompleteV2");
      }

      let pathParams = {
        'sSelector': sSelector
      };
      let queryParams = {
        'eFilterActive': opts['eFilterActive'],
        'sQuery': opts['sQuery']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignsigningreasonGetAutocompleteV2Response;
      return this.apiClient.callApi(
        '/2/object/ezsignsigningreason/getAutocomplete/{sSelector}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsigningreasonGetListV1 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetListV1Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonGetListV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Ezsignsigningreason list
     * 
     * @param {Object} opts Optional parameters
     * @param {module:eZmaxAPI/model/String} [eOrderBy] Specify how you want the results to be sorted
     * @param {Number} [iRowMax] 
     * @param {Number} [iRowOffset = 0)] 
     * @param {module:eZmaxAPI/model/HeaderAcceptLanguage} [Accept_Language] 
     * @param {String} [sFilter] 
     * @param {module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetListV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsigningreasonGetListV1Response}
     */
    ezsignsigningreasonGetListV1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'eOrderBy': opts['eOrderBy'],
        'iRowMax': opts['iRowMax'],
        'iRowOffset': opts['iRowOffset'],
        'sFilter': opts['sFilter']
      };
      let headerParams = {
        'Accept-Language': opts['Accept_Language']
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
      let returnType = EzsignsigningreasonGetListV1Response;
      return this.apiClient.callApi(
        '/1/object/ezsignsigningreason/getList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ezsignsigningreasonGetObjectV2 operation.
     * @callback module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetObjectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:eZmaxAPI/model/EzsignsigningreasonGetObjectV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an existing Ezsignsigningreason
     * 
     * @param {Number} pkiEzsignsigningreasonID The unique ID of the Ezsignsigningreason
     * @param {module:eZmaxAPI/api/ObjectEzsignsigningreasonApi~ezsignsigningreasonGetObjectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:eZmaxAPI/model/EzsignsigningreasonGetObjectV2Response}
     */
    ezsignsigningreasonGetObjectV2(pkiEzsignsigningreasonID, callback) {
      let postBody = null;
      // verify the required parameter 'pkiEzsignsigningreasonID' is set
      if (pkiEzsignsigningreasonID === undefined || pkiEzsignsigningreasonID === null) {
        throw new Error("Missing the required parameter 'pkiEzsignsigningreasonID' when calling ezsignsigningreasonGetObjectV2");
      }

      let pathParams = {
        'pkiEzsignsigningreasonID': pkiEzsignsigningreasonID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EzsignsigningreasonGetObjectV2Response;
      return this.apiClient.callApi(
        '/2/object/ezsignsigningreason/{pkiEzsignsigningreasonID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
